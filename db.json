{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/robots.txt","path":"robots.txt","modified":0,"renderable":0},{"_id":"source/sitemap.xml","path":"sitemap.xml","modified":0,"renderable":0},{"_id":"source/images/icon.jpg","path":"images/icon.jpg","modified":0,"renderable":0},{"_id":"themes/butterfly/source/css/index.styl","path":"css/index.styl","modified":0,"renderable":1},{"_id":"themes/butterfly/source/css/var.styl","path":"css/var.styl","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/404.jpg","path":"img/404.jpg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/algolia.svg","path":"img/algolia.svg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/avatar.png","path":"img/avatar.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/favicon.png","path":"img/favicon.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/friend_404.gif","path":"img/friend_404.gif","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/icp.png","path":"img/icp.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/loading.gif","path":"img/loading.gif","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/tw_cn.js","path":"js/tw_cn.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/search/algolia.js","path":"js/search/algolia.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/search/local-search.js","path":"js/search/local-search.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/busuanzi/2.3/busuanzi.pure.mini.js","path":"js/busuanzi/2.3/busuanzi.pure.mini.js","modified":0,"renderable":1}],"Cache":[{"_id":"source/404.html","hash":"eff015232322c55c5d260d3165869f57880a7f80","modified":1497699125000},{"_id":"source/CNAME","hash":"c6940aae15795532c00092f60a475eefc4537183","modified":1465835892000},{"_id":"source/baidu_verify_8uyFmQ7hRC.html","hash":"37caf3de2cb00e3e96662943aa1afd524617ea69","modified":1466004284000},{"_id":"source/robots.txt","hash":"8e33f8494150d7b964f12ba5f1d29b4c955cc196","modified":1465916612000},{"_id":"source/_data/link.yml","hash":"d9648642b1bb1b339edcc56428fd3f8d15185f88","modified":1607959269986},{"_id":"source/sitemap.xml","hash":"1c08f887b0f1223afd1f608b34c09510b9ea1726","modified":1497699303000},{"_id":"source/_posts/book-list-2016.md","hash":"d82d532b93063624cd25978b41efc3ff329d63be","modified":1486917443000},{"_id":"source/_posts/hello-world.md","hash":"7a7a8549ecb0338024625d73aa2eaf213984fa30","modified":1466348436000},{"_id":"source/_posts/hexo-add-rss-plugin.md","hash":"706e65e30870e9736b8cbe61dd82e077bedd0a63","modified":1488218386000},{"_id":"source/_posts/hexo-series-0.md","hash":"c681c266b5bf044dfbe36b180d20e6ff6f64e831","modified":1466351575000},{"_id":"source/_posts/mac-sourcetree-beyondcompre.md","hash":"d21e75f749e3adac6436ed49e0be697115ab3675","modified":1489423498000},{"_id":"source/_posts/mac_chrome_hot_key.md","hash":"37049840f683f68bf7f5e5ce370fda69903acdee","modified":1487615619000},{"_id":"source/_posts/mysql-master-replication-series-0.md","hash":"673f49b5a38f031ad1f0361f72494fbce57f6a27","modified":1606050692806},{"_id":"source/_posts/movie-huashuimu.md","hash":"a9ba8cfd9a2d07a3745822ab49a67af9dde0a223","modified":1557640790000},{"_id":"source/_posts/nginx-phpfpm-status.md","hash":"3d2c6a2e5e582ff7b48bc5c58b87f5b14adac326","modified":1606050673323},{"_id":"source/_posts/note-mysql-server-has-gone-away.md","hash":"068d96d009d1e5c71d92d6ae587fc45ed8202439","modified":1607439943749},{"_id":"source/_posts/restart-hexo-blog.md","hash":"09bd8c8f89ebb6066794810974978afce5446693","modified":1606053454784},{"_id":"source/_posts/weekly-reading-list-20190512.md","hash":"72510de4b5bf7e4406bfa2c30f013fc128fe9e5c","modified":1558024176000},{"_id":"source/_posts/php-incrementing-decrementing-analysis.md","hash":"c938162ddabd075c8e98ce7e6b6d2a5f29cfb98c","modified":1466348766000},{"_id":"source/_posts/sae-java-web-project-error.md","hash":"99e883d866b9cc1f932df201b12aacd0f4de3118","modified":1466348632000},{"_id":"source/_posts/weekly-reading-list-20190519.md","hash":"7c30042085a81b6297faec22a66d938c498f74e3","modified":1558024196000},{"_id":"source/link/index.md","hash":"967a6e5174020b6220ba621b51f1b8f7b2d8446a","modified":1607882216656},{"_id":"source/about/index.md","hash":"cb9fd06b310861a1bc7355f2ff53a15c8ca42eba","modified":1466339399000},{"_id":"source/categories/index.md","hash":"bfaf432d469e9c3d25799b95f20b48fdeff7ebd8","modified":1465836280000},{"_id":"source/images/icon.jpg","hash":"80feb69b786c953aa7574e36350ac49eef10fb61","modified":1461254823000},{"_id":"source/talking/index.md","hash":"e21a72a2d98b4de205280ff0397bea2cd679d1fc","modified":1607959265838},{"_id":"source/tags/index.md","hash":"7350fffa7d7c1b52088292d682791c12c5ae9344","modified":1465836332000},{"_id":"source/share-list-0/index.md","hash":"a65beb50d06307b547cc745750542ad28c5c07bc","modified":1466339460000},{"_id":"source/_posts/movie-huashuimu/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1557639642000},{"_id":"source/_posts/movie-huashuimu/picture_1.jpg","hash":"facd25a8db5b155af434a972e43eb3fa91439e6b","modified":1557639623000},{"_id":"source/_posts/movie-huashuimu/picture_2.jpg","hash":"b50e56dea20e26796e32be4faa982bb5eb12b449","modified":1557639697000},{"_id":"source/_posts/movie-huashuimu/picture_3.jpg","hash":"4ca606ddbc0bebd3974ea7cec81b68dae48d8aac","modified":1557639705000},{"_id":"source/_posts/movie-huashuimu/picture_7.jpg","hash":"22fae3d89036a76f472b9a3bbbf6a239aec772ef","modified":1557639732000},{"_id":"source/_posts/movie-huashuimu/picture_8.jpg","hash":"efe613ad88882f1345f395fe29d33e0acbbd30d5","modified":1557639738000},{"_id":"source/_posts/nginx-phpfpm-status/nginx_status.png","hash":"7bb06776b4f36c2146246dc2be5e94297e7d3945","modified":1557639765000},{"_id":"source/_posts/movie-huashuimu/picture_4.jpg","hash":"10d84561a3a3ff9dd84712013795d34c86d83a48","modified":1557639713000},{"_id":"source/_posts/movie-huashuimu/picture_6.jpg","hash":"2a8f59eb096695cf7c3ecc13b62c414c246f6561","modified":1557639725000},{"_id":"source/_posts/movie-huashuimu/picture_5.jpg","hash":"ec9678a76f7d81935acbcf399cf7b603df210905","modified":1557639719000},{"_id":"source/_posts/nginx-phpfpm-status/php_fpm_status.png","hash":"da1cbb3ab5027e59e6997b7948ac671076f1dde6","modified":1557639803000},{"_id":"themes/butterfly/LICENSE","hash":"1128f8f91104ba9ef98d37eea6523a888dcfa5de","modified":1605110598979},{"_id":"themes/butterfly/README.md","hash":"26cd553f972057e5cc2c06ee9a669cc73149b6c8","modified":1605110598979},{"_id":"themes/butterfly/package.json","hash":"c7fbcd1885e9c2b8018c7e78f4cfe9a94d7eb693","modified":1605110599004},{"_id":"themes/butterfly/README_CN.md","hash":"47ca9b8995822e9322423877eb126b703739caa9","modified":1605110598980},{"_id":"themes/butterfly/layout/404.pug","hash":"cb7b4fb164621d1fd7c33184241bd24662c85299","modified":1605110598981},{"_id":"themes/butterfly/layout/archive.pug","hash":"bd62286afb64a51c97e800c5945620d51605d5fa","modified":1605110598981},{"_id":"themes/butterfly/layout/category.pug","hash":"d014234c26d2c07caaea6703f7b48cb69c51907d","modified":1605110598982},{"_id":"themes/butterfly/layout/index.pug","hash":"e1c3146834c16e6077406180858add0a8183875a","modified":1605110599002},{"_id":"themes/butterfly/layout/page.pug","hash":"d5063ec93d33bd8488c12007709b6aafd8b9cf5f","modified":1605110599003},{"_id":"themes/butterfly/layout/post.pug","hash":"5253f6b175e3457af09289fd58cf277d544d085f","modified":1605110599003},{"_id":"themes/butterfly/languages/default.yml","hash":"b55f6245cbf45ed6e2e010a326c0c10ec72f8f41","modified":1605110598980},{"_id":"themes/butterfly/layout/tag.pug","hash":"0440f42569df2676273c026a92384fa7729bc4e9","modified":1605110599003},{"_id":"themes/butterfly/languages/en.yml","hash":"b55f6245cbf45ed6e2e010a326c0c10ec72f8f41","modified":1605110598981},{"_id":"themes/butterfly/languages/zh-TW.yml","hash":"36dcf023f4aff5a30d40b2704d9a31a07305f8be","modified":1605110598981},{"_id":"themes/butterfly/languages/zh-CN.yml","hash":"fd9e74bcda9902ae82d2749f55ab39e14520fad1","modified":1605110598981},{"_id":"themes/butterfly/.github/stale.yml","hash":"05a55a87fa7f122c59683e41c8b2e37e79f688f0","modified":1605110598979},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/bug_report.md","hash":"01879e11e7fd1b1c98fb44c2b63c056af3d10415","modified":1605110598979},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/custom.md","hash":"eff495eb1584cf4586e33c76e8b2fa6a469a179b","modified":1605110598979},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/feature_request.md","hash":"f6867a2f0417fe89a0f2008730ee19dd38422021","modified":1605110598979},{"_id":"themes/butterfly/layout/includes/additional-js.pug","hash":"e3a6dd5411273a06f702c5c0f0bf6af3760dff63","modified":1605110598982},{"_id":"themes/butterfly/layout/includes/footer.pug","hash":"c38f7e0592e00144fc358885a5896d3b317ac4b6","modified":1605110598982},{"_id":"themes/butterfly/source/css/index.styl","hash":"d02ea8b8451513df5245151870195973709f25f2","modified":1605110599019},{"_id":"themes/butterfly/layout/includes/head.pug","hash":"85e9324745980e566ad7b389ab4e18e54f160867","modified":1605110598982},{"_id":"themes/butterfly/source/css/var.styl","hash":"e92eaefda462315051872b7894a6f6eb70a29006","modified":1605110599019},{"_id":"themes/butterfly/layout/includes/layout.pug","hash":"fb0617d91725433da023f342c094d8634fd5ffaa","modified":1605110598987},{"_id":"themes/butterfly/layout/includes/pagination.pug","hash":"79ef449c5e04d0ecb4b9980d419ecbaf3d54d35a","modified":1605110598989},{"_id":"themes/butterfly/layout/includes/rightside.pug","hash":"0a7e1bc6cf4c93002100ed7460980f655ad53a04","modified":1605110598990},{"_id":"themes/butterfly/layout/includes/sidebar.pug","hash":"f81b25dfabfa50e76acd100b97774936179ad85f","modified":1605110598990},{"_id":"themes/butterfly/source/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1605110599020},{"_id":"themes/butterfly/source/img/algolia.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1605110599020},{"_id":"themes/butterfly/source/img/favicon.png","hash":"80feb69b786c953aa7574e36350ac49eef10fb61","modified":1610389439083},{"_id":"themes/butterfly/source/img/icp.png","hash":"cb1fd69b38ec23ce8366668ddffbbd0160de0104","modified":1605110599021},{"_id":"themes/butterfly/source/img/avatar.png","hash":"80feb69b786c953aa7574e36350ac49eef10fb61","modified":1461254823000},{"_id":"themes/butterfly/source/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1605110599021},{"_id":"themes/butterfly/source/img/loading.gif","hash":"5f0287fb8fb98872fe1998c6f781111819e71806","modified":1605110599021},{"_id":"themes/butterfly/scripts/events/404.js","hash":"3c30dbd8b910ce7d8d7d8353cf2266cbc5d8775d","modified":1605110599004},{"_id":"themes/butterfly/scripts/events/init.js","hash":"43b245c308797c2d62cb70429a85f1a05d3395ab","modified":1605110599004},{"_id":"themes/butterfly/source/js/main.js","hash":"f72262242c4f0e4ae9027b5e291583dff7adc1b2","modified":1605110599022},{"_id":"themes/butterfly/source/js/tw_cn.js","hash":"2eafc44f4a5b24bef836b00dfc4360a84edb8dcc","modified":1605110599023},{"_id":"themes/butterfly/scripts/events/welcome.js","hash":"d575137c8779e50422c2416f4d0832fdea346ee6","modified":1605110599004},{"_id":"themes/butterfly/source/js/utils.js","hash":"f24426cd3c20057ecf46a872f748bece3fb9653a","modified":1605110599024},{"_id":"themes/butterfly/scripts/filters/post_lazyload.js","hash":"e9cf275c362d8634f093e63068da7ed1e53c7600","modified":1605110599004},{"_id":"themes/butterfly/scripts/filters/random_cover.js","hash":"0f5017be123ae2b2ddf231d9d71a5c4cd1f2f206","modified":1605110599005},{"_id":"themes/butterfly/scripts/helpers/aside_archives.js","hash":"f30b0c108474b2869b35ee70dbc6ed2f2066979d","modified":1605110599005},{"_id":"themes/butterfly/scripts/helpers/aside_categories.js","hash":"ff79813afbaabd16188e7dbd435fe52273956c85","modified":1605110599005},{"_id":"themes/butterfly/scripts/helpers/page.js","hash":"51fb52f76423e4dbebd198f0a2a4190ed14e3093","modified":1605110599005},{"_id":"themes/butterfly/scripts/helpers/related_post.js","hash":"0d8ba6120dce617a2a1fbc9167572db2ee9f22ef","modified":1605110599006},{"_id":"themes/butterfly/scripts/tag/gallery.js","hash":"77e657eb74a7718b7e11e04284827e4a85805b86","modified":1605110599006},{"_id":"themes/butterfly/scripts/tag/button.js","hash":"e75283267f3a4773e6d803593d557e218396f260","modified":1605110599006},{"_id":"themes/butterfly/scripts/tag/hide.js","hash":"ea5939e3d5b3d3106527093a4fe0adaaf1fef2f8","modified":1605110599006},{"_id":"themes/butterfly/scripts/tag/mermaid.js","hash":"35f073021db93699fcac9ef351e26c59c31aadf7","modified":1605110599007},{"_id":"themes/butterfly/scripts/tag/note.js","hash":"c16c6eb058af2b36bcd583b2591076c7ebdd51ad","modified":1605110599007},{"_id":"themes/butterfly/scripts/tag/tabs.js","hash":"1f3bff5bbab30bb103e256ea6fb5b71a1bfe6dc1","modified":1605110599007},{"_id":"themes/butterfly/source/css/_highlight/highlight.styl","hash":"66ebb4c2f505c30d9e972d8bc5d863f6e2f40b9d","modified":1605110599009},{"_id":"themes/butterfly/source/css/_highlight/theme.styl","hash":"fa7a4c1685f391d60ed863e869b9604b59746c27","modified":1605110599010},{"_id":"themes/butterfly/source/css/_mode/readmode.styl","hash":"d8b2ca51f3c702886fedf4da736ab968b90b8682","modified":1605110599014},{"_id":"themes/butterfly/source/css/_mode/darkmode.styl","hash":"cb4c275561c19691fcb4380fd4f84c1ec567f68e","modified":1605110599014},{"_id":"themes/butterfly/source/css/_layout/404.styl","hash":"a510b67364d40794f9f0575c24b6987cab0b802a","modified":1605110599011},{"_id":"themes/butterfly/source/css/_layout/aside.styl","hash":"cedf558a69405895fd56b1b9e1e76642b61b441a","modified":1605110599011},{"_id":"themes/butterfly/source/css/_layout/footer.styl","hash":"fd825c9d71fcd06a7c882850d1db0e9637f84107","modified":1605110599011},{"_id":"themes/butterfly/source/css/_layout/chat.styl","hash":"29f48f9370f245e6e575b5836bccf47eb5688d8b","modified":1605110599011},{"_id":"themes/butterfly/source/css/_layout/comments.styl","hash":"f1b63892baafa48ab872bc79671d57aafd511f6c","modified":1605110599011},{"_id":"themes/butterfly/source/css/_layout/head.styl","hash":"3924f186002a22d326ce2991e2c46294b6e360fd","modified":1605110599012},{"_id":"themes/butterfly/source/css/_layout/loading.styl","hash":"7d18a7be9cfea65091de3ef00014063d2d649912","modified":1605110599012},{"_id":"themes/butterfly/source/css/_layout/pagination.styl","hash":"9e63cad808503d787b1485211333bef8e8a37571","modified":1605110599012},{"_id":"themes/butterfly/source/css/_layout/post.styl","hash":"29625b50968d0e8e04877eb35bbf424d35a0d591","modified":1605110599013},{"_id":"themes/butterfly/source/css/_layout/relatedposts.styl","hash":"76d67b9a42e8b0c3d17316a6d75c5b5b4c65fb68","modified":1605110599013},{"_id":"themes/butterfly/source/css/_layout/reward.styl","hash":"7bf7af4754baba07edfc614621bdb965442cdc2f","modified":1605110599013},{"_id":"themes/butterfly/source/css/_layout/rightside.styl","hash":"9803267893e979abd872158d571c2d947790bdc8","modified":1605110599013},{"_id":"themes/butterfly/source/css/_layout/sidebar.styl","hash":"7a6e1f21173022a3a1f18a62785cdd657a1af0a1","modified":1605110599013},{"_id":"themes/butterfly/source/css/_layout/third-party.styl","hash":"9a5f3ef155545814b349171d4c8203babbdfb57c","modified":1605110599013},{"_id":"themes/butterfly/source/css/_global/function.styl","hash":"ba91e5b25b26596d194ac1eca7b44611f9539bcd","modified":1605110599008},{"_id":"themes/butterfly/source/css/_page/archives.styl","hash":"6874adc2e276443f354bbe50d0072e9bec37243c","modified":1605110599014},{"_id":"themes/butterfly/source/css/_global/index.styl","hash":"73eee1d104edaf0ce62934dccd4915412aaaf199","modified":1605110599008},{"_id":"themes/butterfly/source/css/_page/categories.styl","hash":"e554549f0a0ae85362f0b0e8687981741f486f6b","modified":1605110599015},{"_id":"themes/butterfly/source/css/_page/common.styl","hash":"275091fc84f69f2b75b9dc4b0da1bc3c2c9d7a59","modified":1605110599015},{"_id":"themes/butterfly/source/css/_page/flink.styl","hash":"43f00986410f3dc0eed9e0bf9478801da32be24f","modified":1605110599015},{"_id":"themes/butterfly/source/css/_page/homepage.styl","hash":"6f2a1688bf873ab738f73a89e1be8f72e18b2a47","modified":1605110599015},{"_id":"themes/butterfly/source/css/_page/tags.styl","hash":"9a881c031f463c486bd25248c2814fd09f97892b","modified":1605110599016},{"_id":"themes/butterfly/source/css/_search/algolia.styl","hash":"6b05ca4409d2dc09e123af4e0af9f9d0f7142b73","modified":1605110599017},{"_id":"themes/butterfly/source/css/_search/index.styl","hash":"89e744abc5e41f4855e7b87b13b854f4ec4ffc0e","modified":1605110599017},{"_id":"themes/butterfly/source/css/_search/local-search.styl","hash":"560caad31c4efaede9b889710c922c9f9c20e6bf","modified":1605110599017},{"_id":"themes/butterfly/source/css/_tags/button.styl","hash":"a7fc7624a8d893bdf9444f14154484c29c790e99","modified":1605110599018},{"_id":"themes/butterfly/source/css/_tags/gallery.styl","hash":"6e74130e3cc5598d15a2f37fc558cc0086c11c66","modified":1605110599018},{"_id":"themes/butterfly/source/css/_tags/hexo.styl","hash":"d0386ba6d8d63afc72b9673e8f3e89df6446ffc2","modified":1605110599018},{"_id":"themes/butterfly/source/css/_tags/hide.styl","hash":"41a92e96c66dececcad050ada2201de196f5f697","modified":1605110599018},{"_id":"themes/butterfly/source/css/_tags/note.styl","hash":"86fee274a62f7f034547342930f445c47378eb55","modified":1605110599018},{"_id":"themes/butterfly/source/css/_tags/tabs.styl","hash":"1756791581c0ec51cb03353a09dac4778d944349","modified":1605110599019},{"_id":"themes/butterfly/source/css/_third-party/normalize.min.css","hash":"2c18a1c9604af475b4749def8f1959df88d8b276","modified":1605110599019},{"_id":"themes/butterfly/layout/includes/head/Open_Graph.pug","hash":"5390f2aea030486bf78678b910bda177b0ba5d05","modified":1605110598983},{"_id":"themes/butterfly/layout/includes/head/analytics.pug","hash":"afb58249ddd121e5a8cf5d289fe215e15b90b82a","modified":1605110598983},{"_id":"themes/butterfly/layout/includes/head/config_site.pug","hash":"630c1b07ec1c982dabdb44171eec5007c961d259","modified":1605110598983},{"_id":"themes/butterfly/layout/includes/head/google_adsense.pug","hash":"95a37e92b39c44bcbea4be7e29ddb3921c5b8220","modified":1605110598983},{"_id":"themes/butterfly/layout/includes/head/js.pug","hash":"0b70ffee7dbc9b208669bc4a3849c01a1bbad4f5","modified":1605110598984},{"_id":"themes/butterfly/layout/includes/head/noscript.pug","hash":"d16ad2ee0ff5751fd7f8a5ce1b83935518674977","modified":1605110598984},{"_id":"themes/butterfly/layout/includes/head/preconnect.pug","hash":"0fdf2a14f9ae498a6ca0de4409926001d4fb8b01","modified":1605110598984},{"_id":"themes/butterfly/layout/includes/head/pwa.pug","hash":"3d492cfe645d37c94d30512e0b230b0a09913148","modified":1605110598985},{"_id":"themes/butterfly/layout/includes/head/site_verification.pug","hash":"62cf37e28795d8b68a0e850ec8c94987b9e08db5","modified":1605110598985},{"_id":"themes/butterfly/layout/includes/head/config.pug","hash":"bd80f3fe3a25d29ba043f0f68bdfe681f88a10e3","modified":1605110598983},{"_id":"themes/butterfly/layout/includes/loading/loading-js.pug","hash":"7ffcf93bc5ee95ca461aea2735cedc0785c9884d","modified":1605110598987},{"_id":"themes/butterfly/layout/includes/header/index.pug","hash":"abfa1d6a4f57273baedc6d1106d568d9c5c8014f","modified":1605110598985},{"_id":"themes/butterfly/layout/includes/loading/loading.pug","hash":"5276937fbcceb9d62879dc47be880cd469a27349","modified":1605110598987},{"_id":"themes/butterfly/layout/includes/header/menu_item.pug","hash":"14cd0f9c0c578512896b487263cd48570d74771a","modified":1605110598986},{"_id":"themes/butterfly/layout/includes/header/nav.pug","hash":"da07d43d31dddc37cc1ac9766df86345bcefcdff","modified":1605110598986},{"_id":"themes/butterfly/layout/includes/header/social.pug","hash":"0d953e51d04a9294a64153c89c20f491a9ec42d4","modified":1605110598987},{"_id":"themes/butterfly/layout/includes/mixins/article-sort.pug","hash":"68dfd3c6a0f00b3ffc0333c81e165b4626f7425f","modified":1605110598987},{"_id":"themes/butterfly/layout/includes/header/post-info.pug","hash":"f48fce85289971cb69d525b2cedeea3b0e5ac972","modified":1605110598986},{"_id":"themes/butterfly/layout/includes/mixins/post-ui.pug","hash":"2a1201ad33033f6ff0748e37d0f31ed43eca0b9b","modified":1605110598988},{"_id":"themes/butterfly/layout/includes/page/artitalk.pug","hash":"46bc194907f481a3a5dec1bb36b30ccf953e1970","modified":1605110598988},{"_id":"themes/butterfly/layout/includes/page/categories.pug","hash":"1f30952fed73dec21b42e2e30b7fe2e84618d2e4","modified":1605110598988},{"_id":"themes/butterfly/layout/includes/page/default-page.pug","hash":"dbec869c62135695495703a29ad7655e9965d461","modified":1605110598988},{"_id":"themes/butterfly/layout/includes/page/tags.pug","hash":"93d4ebc7dc8228c7a10ddeb5a553d0dcdabbe145","modified":1605110598989},{"_id":"themes/butterfly/layout/includes/post/post-copyright.pug","hash":"88e3b611b03149665e4113cfa39595c1a3fca7e5","modified":1605110598989},{"_id":"themes/butterfly/layout/includes/page/flink.pug","hash":"da24e13ca15a376373fa3bae65f2bfb02f881b87","modified":1605110598989},{"_id":"themes/butterfly/layout/includes/post/reward.pug","hash":"bab59f87da66386e5abc84550614752c660a0705","modified":1605110598989},{"_id":"themes/butterfly/layout/includes/third-party/aplayer.pug","hash":"b24959f00ac75f12f66b445158aad143ee860795","modified":1605110598990},{"_id":"themes/butterfly/layout/includes/third-party/artitalk.pug","hash":"11f5227d3518bc91a85fdbd650a381aedfc10fe5","modified":1605110598991},{"_id":"themes/butterfly/layout/includes/third-party/baidu_push.pug","hash":"a3552fb4d969f72af0d1b099201faac1236e01d9","modified":1605110598991},{"_id":"themes/butterfly/layout/includes/third-party/effect.pug","hash":"29b851208aba27b62cae45b17d18c2237c278292","modified":1605110598996},{"_id":"themes/butterfly/layout/includes/third-party/pangu.pug","hash":"abce595b5b8887577af07a8e2644fd76d2443556","modified":1605110598998},{"_id":"themes/butterfly/layout/includes/third-party/pjax.pug","hash":"c81c2fef5f5606a1236cd24b6aa5bcf0e8a12594","modified":1605110598998},{"_id":"themes/butterfly/layout/includes/third-party/prismjs.pug","hash":"1fbecfd299068f90d727f0c8c65e2a792fa6e3e2","modified":1605110598998},{"_id":"themes/butterfly/layout/includes/third-party/subtitle.pug","hash":"2e7ff2078f20a6c00f2b9302e9c95e248f4b182b","modified":1605110599000},{"_id":"themes/butterfly/layout/includes/widget/card_announcement.pug","hash":"721b611fda6dcfca8f88b9c7b70fede7b69a516b","modified":1605110599000},{"_id":"themes/butterfly/layout/includes/widget/card_archives.pug","hash":"393a6f9a5dcabe8d96e9b6cb5620c12966dfd37f","modified":1605110599001},{"_id":"themes/butterfly/layout/includes/widget/card_ad.pug","hash":"2e940de1a6261fd378e16e4cd3362a9d69c12f50","modified":1605110599000},{"_id":"themes/butterfly/layout/includes/widget/card_author.pug","hash":"acad3c16a6bfb78384cb8d93347039ab9c4e13d4","modified":1605110599001},{"_id":"themes/butterfly/layout/includes/widget/card_categories.pug","hash":"83cb6ba0d8c913570147b3871c7fc0674dac8cdf","modified":1605110599001},{"_id":"themes/butterfly/layout/includes/widget/card_newest_comment.pug","hash":"7969da94b82531f2b7add111d209e6f80abf69a2","modified":1605110599001},{"_id":"themes/butterfly/layout/includes/widget/card_post_toc.pug","hash":"8931b62fb5d80deb2ea15928c6e94b0839f3dca4","modified":1605110599002},{"_id":"themes/butterfly/layout/includes/widget/card_recent_post.pug","hash":"e275297f48503a28792b5c8f9a92492183274f44","modified":1605110599002},{"_id":"themes/butterfly/layout/includes/widget/card_tags.pug","hash":"2b78fb1ed7fa91dc0957d025d2e4561522db4d7a","modified":1605110599002},{"_id":"themes/butterfly/layout/includes/widget/index.pug","hash":"d1f451f3c52c1cc5c018dd0f9728d046494924da","modified":1605110599002},{"_id":"themes/butterfly/layout/includes/widget/card_webinfo.pug","hash":"66261dbc6a3ff2c943c9ca829a59126f2d8182ec","modified":1605110599002},{"_id":"themes/butterfly/source/js/search/algolia.js","hash":"4bc8047817a3a0c11df8409399d57913d713a2a6","modified":1605110599023},{"_id":"themes/butterfly/source/js/search/local-search.js","hash":"92f2c4c651264331fa7d03e96e79bda4fd0f87db","modified":1605110599023},{"_id":"themes/butterfly/source/css/_highlight/highlight/diff.styl","hash":"3bcd66576d13db8f93fa5b799a973d55e060a708","modified":1605110599009},{"_id":"themes/butterfly/source/css/_highlight/highlight/index.styl","hash":"52c63a50a37fa315753e72b3661676156aeae794","modified":1605110599009},{"_id":"themes/butterfly/source/css/_highlight/prismjs/diff.styl","hash":"5972c61f5125068cbe0af279a0c93a54847fdc3b","modified":1605110599010},{"_id":"themes/butterfly/source/css/_highlight/prismjs/index.styl","hash":"897a18a82c0cad141b3ed9e2f1b4af60c24c334b","modified":1605110599010},{"_id":"themes/butterfly/source/css/_highlight/prismjs/line-number.styl","hash":"d40f1baec16c4a62e4a3a9a0379d1ca3ac6746b2","modified":1605110599010},{"_id":"themes/butterfly/layout/includes/third-party/chat/chatra.pug","hash":"481cd5053bafb1a19f623554a27d3aa077ea59c3","modified":1605110598991},{"_id":"themes/butterfly/layout/includes/third-party/chat/crisp.pug","hash":"76634112c64023177260d1317ae39cef2a68e35f","modified":1605110598991},{"_id":"themes/butterfly/layout/includes/third-party/chat/daovoice.pug","hash":"cfe63e7d26a6665df6aa32ca90868ad48e05ec04","modified":1605110598991},{"_id":"themes/butterfly/layout/includes/third-party/chat/gitter.pug","hash":"d1d2474420bf4edc2e43ccdff6f92b8b082143df","modified":1605110598991},{"_id":"themes/butterfly/layout/includes/third-party/chat/tidio.pug","hash":"24a926756c2300b9c561aaab6bd3a71fdd16e16d","modified":1605110598993},{"_id":"themes/butterfly/layout/includes/third-party/chat/index.pug","hash":"3f05f8311ae559d768ee3d0925e84ed767c314d3","modified":1605110598993},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqus.pug","hash":"f617cacf5d1e8335abba96ee1ce4b79c17411e1e","modified":1605110598993},{"_id":"themes/butterfly/layout/includes/third-party/comments/facebook_comments.pug","hash":"b579b947a87da500a4f3abbdf870fb5a6f2a5a79","modified":1605110598994},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqusjs.pug","hash":"b217b84bfcaa2db48ca98d18a9bc3c459d0092fe","modified":1605110598993},{"_id":"themes/butterfly/layout/includes/third-party/comments/gitalk.pug","hash":"4e6bf11006e4260e85cc02dca330b6c76abd6016","modified":1605110598994},{"_id":"themes/butterfly/layout/includes/third-party/comments/index.pug","hash":"0ae03966cf19f972d511d93fcb87bbdeb0e03fbf","modified":1605110598995},{"_id":"themes/butterfly/layout/includes/third-party/comments/js.pug","hash":"63d28a7655df2b3b2a70ab2b0c5c5e775a7662bf","modified":1605110598995},{"_id":"themes/butterfly/layout/includes/third-party/comments/livere.pug","hash":"52ea8aa26b84d3ad38ae28cdf0f163e9ca8dced7","modified":1605110598995},{"_id":"themes/butterfly/layout/includes/third-party/comments/twikoo.pug","hash":"e822f3abc1c1bfdda406d348b7558b79b94eb3ad","modified":1605110598995},{"_id":"themes/butterfly/layout/includes/third-party/comments/utterances.pug","hash":"b871ea208e36398b4d668db9a9a0b61c79415381","modified":1605110598995},{"_id":"themes/butterfly/layout/includes/third-party/comments/valine.pug","hash":"5b7e83a8bc66d877ea32b5779e8a5f650558f457","modified":1605110598995},{"_id":"themes/butterfly/layout/includes/third-party/math/index.pug","hash":"53af4ffa8119c7bbba3f066de74845be91400b5b","modified":1605110598996},{"_id":"themes/butterfly/layout/includes/third-party/math/katex.pug","hash":"73356f1068c7426597e268d6c4aefa2b0ac3a1d9","modified":1605110598997},{"_id":"themes/butterfly/layout/includes/third-party/math/mathjax.pug","hash":"4afc12ce42d067fa4012039aa444343a36f73599","modified":1605110598997},{"_id":"themes/butterfly/layout/includes/third-party/math/mermaid.pug","hash":"1310800bc30b4e1cad93982991041589ee70ffef","modified":1605110598997},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/github-issues.pug","hash":"e529ef34ac60335b21d9fc2cdaa8b1e2b57e665c","modified":1605110598998},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/disqus-comment.pug","hash":"9cad8dccda6a64938d1dedc85e860514d13c3b4d","modified":1605110598997},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/index.pug","hash":"e67a95ca1034023fd8151ca901eafced8ff50c87","modified":1605110598998},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/leancloud.pug","hash":"c002c905b338fc5ab567ceb0a42284a11638381e","modified":1605110598998},{"_id":"themes/butterfly/layout/includes/third-party/search/index.pug","hash":"da3b9437d061ee68dbc383057db5c73034c49605","modified":1605110598999},{"_id":"themes/butterfly/layout/includes/third-party/search/algolia.pug","hash":"d8f59e94eafc669c49349561dc5bbea3915aecb7","modified":1605110598999},{"_id":"themes/butterfly/layout/includes/third-party/search/local-search.pug","hash":"87355ca445f16ace4316c63ca2fe8749c5abae06","modified":1605110598999},{"_id":"themes/butterfly/layout/includes/third-party/share/add-this.pug","hash":"2980f1889226ca981aa23b8eb1853fde26dcf89a","modified":1605110598999},{"_id":"themes/butterfly/layout/includes/third-party/share/addtoany.pug","hash":"309f51bc5302e72fc469d54c577fbcfe57fb07a8","modified":1605110598999},{"_id":"themes/butterfly/layout/includes/third-party/share/index.pug","hash":"c40f7d6973811e53fcfbe881174ab373b4ea03ad","modified":1605110598999},{"_id":"themes/butterfly/layout/includes/third-party/share/share-js.pug","hash":"368f5f75c506db77e4e1a20c29e9a3e2b4c3d783","modified":1605110599000},{"_id":"themes/butterfly/source/js/busuanzi/2.3/busuanzi.pure.mini.js","hash":"ed9da4adea9bcd618fdf25acab2daf9b9cdd341e","modified":1610205789137},{"_id":"themes/butterfly/_config.yml","hash":"fb154a41e0c4857949d5c03a83d33cee5c34bd4f","modified":1610207133412}],"Category":[{"name":"阅读","_id":"ckjsw1ddv0004a21u62kug1f6"},{"name":"工具","_id":"ckjsw1deo000ka21uedi37ipo"},{"name":"movie","_id":"ckjsw1deu000qa21ugrpq14cc"},{"name":"mysql","_id":"ckjsw1dex000xa21ufoug77xg"},{"name":"Linux","_id":"ckjsw1df20012a21ucdqp5r7p"},{"name":"MySQL","_id":"ckjsw1df40016a21uevdi0mrz"},{"name":"php","_id":"ckjsw1df6001aa21ucjc6gy22"},{"name":"JAVA","_id":"ckjsw1df8001ga21u6ius9dea"}],"Data":[{"_id":"link","data":[{"class_name":"友情链接","class_desc":"优秀来源于分享","link_list":[{"name":"JerryC","link":"https://jerryc.me/","avatar":"https://jerryc.me/image/avatar.png","descr":"博客主题作者"}]}]}],"Page":[{"_content":"<!DOCTYPE HTML>\n<html>\n<head>\n    <title>404 - MaxFang Blog</title>\n    <meta name=\"description\" content=\"404错误，页面不存在！\">\n    <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n    <meta name=\"robots\" content=\"all\" />\n    <meta name=\"robots\" content=\"index,follow\"/>\n</head>\n<body>\n    <script type=\"text/javascript\" src=\"http://qzonestyle.gtimg.cn/qzone_v6/lostchild/search_children.js\" charset=\"utf-8\"></script>\n</body>\n</html>\n","source":"404.html","raw":"<!DOCTYPE HTML>\n<html>\n<head>\n    <title>404 - MaxFang Blog</title>\n    <meta name=\"description\" content=\"404错误，页面不存在！\">\n    <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n    <meta name=\"robots\" content=\"all\" />\n    <meta name=\"robots\" content=\"index,follow\"/>\n</head>\n<body>\n    <script type=\"text/javascript\" src=\"http://qzonestyle.gtimg.cn/qzone_v6/lostchild/search_children.js\" charset=\"utf-8\"></script>\n</body>\n</html>\n","date":"2018-03-17T21:23:41.000Z","updated":"2017-06-17T11:32:05.000Z","path":"404.html","title":"","comments":1,"layout":"page","_id":"ckjsw1ddm0000a21u82km7eyr","content":"<!DOCTYPE HTML>\n<html>\n<head>\n    <title>404 - MaxFang Blog</title>\n    <meta name=\"description\" content=\"404 错误，页面不存在！\">\n    <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n    <meta name=\"robots\" content=\"all\">\n    <meta name=\"robots\" content=\"index,follow\">\n</head>\n<body>\n    <script type=\"text/javascript\" src=\"http://qzonestyle.gtimg.cn/qzone_v6/lostchild/search_children.js\" charset=\"utf-8\"></script>\n</body>\n</html>\n","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"优秀来源于分享","link_list":[{"name":"JerryC","link":"https://jerryc.me/","avatar":"https://jerryc.me/image/avatar.png","descr":"博客主题作者"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"","more":"<!DOCTYPE HTML>\n<html>\n<head>\n    <title>404 - MaxFang Blog</title>\n    <meta name=\"description\" content=\"404错误，页面不存在！\">\n    <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n    <meta name=\"robots\" content=\"all\">\n    <meta name=\"robots\" content=\"index,follow\">\n</head>\n<body>\n    <script type=\"text/javascript\" src=\"http://qzonestyle.gtimg.cn/qzone_v6/lostchild/search_children.js\" charset=\"utf-8\"></script>\n</body>\n</html>\n"},{"_content":"8uyFmQ7hRC","source":"baidu_verify_8uyFmQ7hRC.html","raw":"8uyFmQ7hRC","date":"2017-02-12T16:58:27.000Z","updated":"2016-06-15T15:24:44.000Z","path":"baidu_verify_8uyFmQ7hRC.html","title":"","comments":1,"layout":"page","_id":"ckjsw1ddr0002a21u7vrc2i90","content":"8uyFmQ7hRC","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"优秀来源于分享","link_list":[{"name":"JerryC","link":"https://jerryc.me/","avatar":"https://jerryc.me/image/avatar.png","descr":"博客主题作者"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"","more":"8uyFmQ7hRC"},{"title":"关于 Max","date":"2016-06-13T16:49:25.000Z","type":"about","_content":"\n# About Max\n\n* 一只技术汪,希望在追求技术的道路上越走越远.\n* 死理性.重感性.还特文艺. 来自一位同学2011年的评价.\n* 自带上菜最慢BUFF.\n* LOL入门玩家.青铜操作.王者意识.\n\n\n","source":"about/index.md","raw":"---\ntitle: 关于Max\ndate: 2016-06-14 00:49:25\ntype: \"about\"\n---\n\n# About Max\n\n* 一只技术汪,希望在追求技术的道路上越走越远.\n* 死理性.重感性.还特文艺. 来自一位同学2011年的评价.\n* 自带上菜最慢BUFF.\n* LOL入门玩家.青铜操作.王者意识.\n\n\n","updated":"2016-06-19T12:29:59.000Z","path":"about/index.html","comments":1,"layout":"page","_id":"ckjsw1ddy0006a21ud5ukgbg0","content":"<h1 id=\"About-Max\"><a href=\"#About-Max\" class=\"headerlink\" title=\"About Max\"></a>About Max</h1><ul>\n<li> 一只技术汪, 希望在追求技术的道路上越走越远.</li>\n<li> 死理性. 重感性. 还特文艺. 来自一位同学 2011 年的评价.</li>\n<li> 自带上菜最慢 BUFF.</li>\n<li>LOL 入门玩家. 青铜操作. 王者意识.</li>\n</ul>\n","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"优秀来源于分享","link_list":[{"name":"JerryC","link":"https://jerryc.me/","avatar":"https://jerryc.me/image/avatar.png","descr":"博客主题作者"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"","more":"<h1 id=\"About-Max\"><a href=\"#About-Max\" class=\"headerlink\" title=\"About Max\"></a>About Max</h1><ul>\n<li>一只技术汪,希望在追求技术的道路上越走越远.</li>\n<li>死理性.重感性.还特文艺. 来自一位同学2011年的评价.</li>\n<li>自带上菜最慢BUFF.</li>\n<li>LOL入门玩家.青铜操作.王者意识.</li>\n</ul>\n"},{"title":"categories","date":"2016-06-13T16:43:57.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2016-06-14 00:43:57\ntype: \"categories\"\n---\n","updated":"2016-06-13T16:44:40.000Z","path":"categories/index.html","comments":1,"layout":"page","_id":"ckjsw1de20008a21u7byj0wrb","content":"","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"优秀来源于分享","link_list":[{"name":"JerryC","link":"https://jerryc.me/","avatar":"https://jerryc.me/image/avatar.png","descr":"博客主题作者"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"","more":""},{"title":"友情链接","date":"2020-12-13T17:56:23.000Z","type":"link","_content":"","source":"link/index.md","raw":"---\ntitle: 友情链接\ndate: 2020-12-14 01:56:23\ntype: \"link\"\n---\n","updated":"2020-12-13T17:56:56.656Z","path":"link/index.html","comments":1,"layout":"page","_id":"ckjsw1def000aa21u88ey0o2i","content":"","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"优秀来源于分享","link_list":[{"name":"JerryC","link":"https://jerryc.me/","avatar":"https://jerryc.me/image/avatar.png","descr":"博客主题作者"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"","more":""},{"title":"tags","date":"2016-06-13T16:45:15.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2016-06-14 00:45:15\ntype: \"tags\"\n---\n","updated":"2016-06-13T16:45:32.000Z","path":"tags/index.html","comments":1,"layout":"page","_id":"ckjsw1deh000ea21ufxd97vt4","content":"","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"优秀来源于分享","link_list":[{"name":"JerryC","link":"https://jerryc.me/","avatar":"https://jerryc.me/image/avatar.png","descr":"博客主题作者"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"","more":""},{"title":"一言一语","date":"2020-12-13T15:24:03.000Z","type":"artitalk","_content":"","source":"talking/index.md","raw":"---\ntitle: 一言一语\ndate: 2020-12-13 23:24:03\ntype: artitalk\n---\n","updated":"2020-12-14T15:21:05.838Z","path":"talking/index.html","comments":1,"layout":"page","_id":"ckjsw1dej000ga21ufmc2840v","content":"","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"优秀来源于分享","link_list":[{"name":"JerryC","link":"https://jerryc.me/","avatar":"https://jerryc.me/image/avatar.png","descr":"博客主题作者"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"","more":""},{"title":"小杂货铺子","date":"2016-06-19T11:44:44.000Z","_content":"\n","source":"share-list-0/index.md","raw":"---\ntitle: 小杂货铺子\ndate: 2016-06-19 19:44:44\n---\n\n","updated":"2016-06-19T12:31:00.000Z","path":"share-list-0/index.html","comments":1,"layout":"page","_id":"ckjsw1deo000la21u45sm8ada","content":"","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"优秀来源于分享","link_list":[{"name":"JerryC","link":"https://jerryc.me/","avatar":"https://jerryc.me/image/avatar.png","descr":"博客主题作者"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"","more":""}],"Post":[{"title":"阅读书单","date":"2016-05-11T13:09:09.000Z","_content":"\n\nTEST.\n\nSome books.\n","source":"_posts/book-list-2016.md","raw":"---\ntitle: 阅读书单\ndate: 2016-05-11 21:09:09\ncategories: 阅读\ntags: 阅读\n---\n\n\nTEST.\n\nSome books.\n","slug":"book-list-2016","published":1,"updated":"2017-02-12T16:37:23.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjsw1ddo0001a21u39pe9i0y","content":"<p>TEST.</p>\n<p>Some books.</p>\n","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"优秀来源于分享","link_list":[{"name":"JerryC","link":"https://jerryc.me/","avatar":"https://jerryc.me/image/avatar.png","descr":"博客主题作者"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"","more":"<p>TEST.</p>\n<p>Some books.</p>\n"},{"title":"Hello World","date":"2016-03-01T17:15:11.000Z","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\ndate: 2016-03-02 01:15:11\ncategories:\ntags:\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"updated":"2016-06-19T15:00:36.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjsw1dds0003a21u8fep2mdn","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\">Deployment</a></p>\n","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"优秀来源于分享","link_list":[{"name":"JerryC","link":"https://jerryc.me/","avatar":"https://jerryc.me/image/avatar.png","descr":"博客主题作者"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\">Deployment</a></p>\n"},{"title":"三步开启 hexo 博客 RSS","date":"2017-02-27T17:13:20.000Z","_content":"\n\n\n最近捣鼓了一下博客的RSS，配置的过程还是十分简单的，三步开启hexo的RSS。\n\n## 安装RSS插件\n> npm install hexo-generator-feed --save\n\n## 配置hexo配置文件_config.yml\n\n> #RSS订阅\n> plugin:\n> - hexo-generator-feed\n> #Feed Atom\n> feed:\n> type: atom\n> path: atom\n\n## 开启theme的RSS支持\n\n一些主题已经默认开启了RSS配置，如果没有，则需要手动配置。目前博客使用的主题为Next，对应的修改文件：themes/next/_config.yml。\n\n> subnav:\n> rss: /atom.xml\n\n## 本地测试生成RSS\n\n> hexo clean\n> hexo g\n> hexo s\n\nhexo命令的简单说明可以参考之前的一篇博文：[hexo使用札记-常用命令](https://www.maxfang.me/2016/06/19/hexo-series-0/)\n\n","source":"_posts/hexo-add-rss-plugin.md","raw":"---\ntitle: 三步开启hexo博客RSS\ndate: 2017-02-28 01:13:20\ncategories:\ntags: [hexo , rss]\n---\n\n\n\n最近捣鼓了一下博客的RSS，配置的过程还是十分简单的，三步开启hexo的RSS。\n\n## 安装RSS插件\n> npm install hexo-generator-feed --save\n\n## 配置hexo配置文件_config.yml\n\n> #RSS订阅\n> plugin:\n> - hexo-generator-feed\n> #Feed Atom\n> feed:\n> type: atom\n> path: atom\n\n## 开启theme的RSS支持\n\n一些主题已经默认开启了RSS配置，如果没有，则需要手动配置。目前博客使用的主题为Next，对应的修改文件：themes/next/_config.yml。\n\n> subnav:\n> rss: /atom.xml\n\n## 本地测试生成RSS\n\n> hexo clean\n> hexo g\n> hexo s\n\nhexo命令的简单说明可以参考之前的一篇博文：[hexo使用札记-常用命令](https://www.maxfang.me/2016/06/19/hexo-series-0/)\n\n","slug":"hexo-add-rss-plugin","published":1,"updated":"2017-02-27T17:59:46.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjsw1ddz0007a21uc5ivgrg8","content":"<p>最近捣鼓了一下博客的 RSS，配置的过程还是十分简单的，三步开启 hexo 的 RSS。</p>\n<h2 id=\"安装 RSS 插件\"><a href=\"# 安装 RSS 插件\" class=\"headerlink\" title=\"安装 RSS 插件\"></a>安装 RSS 插件</h2><blockquote>\n<p>npm install hexo-generator-feed –save</p>\n</blockquote>\n<h2 id=\"配置 hexo 配置文件 -config-yml\"><a href=\"# 配置 hexo 配置文件 -config-yml\" class=\"headerlink\" title=\"配置 hexo 配置文件_config.yml\"></a>配置 hexo 配置文件_config.yml</h2><blockquote>\n<p>#RSS 订阅<br>plugin:</p>\n<ul>\n<li>hexo-generator-feed<br>#Feed Atom<br>feed:<br>type: atom<br>path: atom</li>\n</ul>\n</blockquote>\n<h2 id=\"开启 theme 的 RSS 支持\"><a href=\"# 开启 theme 的 RSS 支持\" class=\"headerlink\" title=\"开启 theme 的 RSS 支持\"></a>开启 theme 的 RSS 支持 </h2><p> 一些主题已经默认开启了 RSS 配置，如果没有，则需要手动配置。目前博客使用的主题为 Next，对应的修改文件：themes/next/_config.yml。</p>\n<blockquote>\n<p>subnav:<br>rss: /atom.xml</p>\n</blockquote>\n<h2 id=\"本地测试生成 RSS\"><a href=\"# 本地测试生成 RSS\" class=\"headerlink\" title=\"本地测试生成 RSS\"></a>本地测试生成 RSS</h2><blockquote>\n<p>hexo clean<br>hexo g<br>hexo s</p>\n</blockquote>\n<p>hexo 命令的简单说明可以参考之前的一篇博文：<a href=\"https://www.maxfang.me/2016/06/19/hexo-series-0/\">hexo 使用札记 - 常用命令</a></p>\n","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"优秀来源于分享","link_list":[{"name":"JerryC","link":"https://jerryc.me/","avatar":"https://jerryc.me/image/avatar.png","descr":"博客主题作者"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"","more":"<p>最近捣鼓了一下博客的RSS，配置的过程还是十分简单的，三步开启hexo的RSS。</p>\n<h2 id=\"安装RSS插件\"><a href=\"#安装RSS插件\" class=\"headerlink\" title=\"安装RSS插件\"></a>安装RSS插件</h2><blockquote>\n<p>npm install hexo-generator-feed –save</p>\n</blockquote>\n<h2 id=\"配置hexo配置文件-config-yml\"><a href=\"#配置hexo配置文件-config-yml\" class=\"headerlink\" title=\"配置hexo配置文件_config.yml\"></a>配置hexo配置文件_config.yml</h2><blockquote>\n<p>#RSS订阅<br>plugin:</p>\n<ul>\n<li>hexo-generator-feed<br>#Feed Atom<br>feed:<br>type: atom<br>path: atom</li>\n</ul>\n</blockquote>\n<h2 id=\"开启theme的RSS支持\"><a href=\"#开启theme的RSS支持\" class=\"headerlink\" title=\"开启theme的RSS支持\"></a>开启theme的RSS支持</h2><p>一些主题已经默认开启了RSS配置，如果没有，则需要手动配置。目前博客使用的主题为Next，对应的修改文件：themes/next/_config.yml。</p>\n<blockquote>\n<p>subnav:<br>rss: /atom.xml</p>\n</blockquote>\n<h2 id=\"本地测试生成RSS\"><a href=\"#本地测试生成RSS\" class=\"headerlink\" title=\"本地测试生成RSS\"></a>本地测试生成RSS</h2><blockquote>\n<p>hexo clean<br>hexo g<br>hexo s</p>\n</blockquote>\n<p>hexo命令的简单说明可以参考之前的一篇博文：<a href=\"https://www.maxfang.me/2016/06/19/hexo-series-0/\">hexo使用札记-常用命令</a></p>\n"},{"title":"hexo 使用札记 - 常用命令","date":"2016-06-18T17:15:11.000Z","_content":"\n今年前一段时间将博客从 jeklly 转到 hexo ，感觉还是非常好用的，hexo 的常用命令不多，本文就介绍一下使用 hexo 的常用基本命令。\n\n\n## hexo cl\n\n- 全名：hexo clean\n- 清除缓存文件**db.json**和已生成的静态文件 **public**。\n\n## hexo g\n\n- 全名: hexo generate\n- 生成网站静态文件，默认保存在**public**文件夹。\n\n> 由于hexo源文件可读性不强，使用 **hexo g** 可以将hexo源文件生成静态文件，便于调试，生成的静态文件可以直接部署网站。 \n\n## hero s\n\n- 全名：hexo server\n- 启动本地服务器，访问本地hexo项目，默认的访问地址是 http://localhost:4000/ ，可以很方便的在本地预览博客样式和内容。\n\n<!-- more -->\n\n> 修改文章内容或是修改样式代码，不需要重新运行 **hexo s** 重启本地服务器，只需要保存文件后刷新页面即可看到效果。\n> 若是修改了hexo根目录下的 **_config.yml** ，则需要重新运行 **hexo s** 命令重启本地服务器。 \n\n## hero d\n\n- 全名：hexo deploy\n- 生成网站的静态文件，并将其部署到 **_config.yml** 文件中配置的仓库中。\n\n## hexo n page xxx\n\n- 全名：hexo new page xxx\n- 新建一个名为 **xxx** 的页面，文件地址为 **source/xxx/index.md**  。\n\n> 使用该命令生成的文件名，可以手动在项目中进行重命名，同时生成的页面不会出现在文章列表和归档文件中，也不支持设置分类和标签。\n> 若需要删除该页面，只需要手动删除 **source/xxx** 目录即可。\n\n## hexo n xxx\n\n- 全名：hexo new xxx\n- 新建一篇名为 **xxx** 的文章，文件地址为 **source/_posts/xxx.md** 。\n\n> 使用该命令生成的文章名，可以在项目中手动进行修改。\n> 如果文章名中有空格，则文章名需要使用 **\"\"** ，例如 hexo new \"hello world\"。\n> 若需要删除某篇文章，只需要手动删除 **source/_posts/xxx.md** 文件即可。\n\n\n## 参考\n\n- [hexo中文文档](https://hexo.io/zh-cn/docs/commands.html)\n\n\n---\n\nHappy Coding.\n","source":"_posts/hexo-series-0.md","raw":"---\ntitle: hexo使用札记-常用命令\ndate: 2016-06-19 01:15:11\ncategories:\ntags:\n---\n\n今年前一段时间将博客从 jeklly 转到 hexo ，感觉还是非常好用的，hexo 的常用命令不多，本文就介绍一下使用 hexo 的常用基本命令。\n\n\n## hexo cl\n\n- 全名：hexo clean\n- 清除缓存文件**db.json**和已生成的静态文件 **public**。\n\n## hexo g\n\n- 全名: hexo generate\n- 生成网站静态文件，默认保存在**public**文件夹。\n\n> 由于hexo源文件可读性不强，使用 **hexo g** 可以将hexo源文件生成静态文件，便于调试，生成的静态文件可以直接部署网站。 \n\n## hero s\n\n- 全名：hexo server\n- 启动本地服务器，访问本地hexo项目，默认的访问地址是 http://localhost:4000/ ，可以很方便的在本地预览博客样式和内容。\n\n<!-- more -->\n\n> 修改文章内容或是修改样式代码，不需要重新运行 **hexo s** 重启本地服务器，只需要保存文件后刷新页面即可看到效果。\n> 若是修改了hexo根目录下的 **_config.yml** ，则需要重新运行 **hexo s** 命令重启本地服务器。 \n\n## hero d\n\n- 全名：hexo deploy\n- 生成网站的静态文件，并将其部署到 **_config.yml** 文件中配置的仓库中。\n\n## hexo n page xxx\n\n- 全名：hexo new page xxx\n- 新建一个名为 **xxx** 的页面，文件地址为 **source/xxx/index.md**  。\n\n> 使用该命令生成的文件名，可以手动在项目中进行重命名，同时生成的页面不会出现在文章列表和归档文件中，也不支持设置分类和标签。\n> 若需要删除该页面，只需要手动删除 **source/xxx** 目录即可。\n\n## hexo n xxx\n\n- 全名：hexo new xxx\n- 新建一篇名为 **xxx** 的文章，文件地址为 **source/_posts/xxx.md** 。\n\n> 使用该命令生成的文章名，可以在项目中手动进行修改。\n> 如果文章名中有空格，则文章名需要使用 **\"\"** ，例如 hexo new \"hello world\"。\n> 若需要删除某篇文章，只需要手动删除 **source/_posts/xxx.md** 文件即可。\n\n\n## 参考\n\n- [hexo中文文档](https://hexo.io/zh-cn/docs/commands.html)\n\n\n---\n\nHappy Coding.\n","slug":"hexo-series-0","published":1,"updated":"2016-06-19T15:52:55.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjsw1de30009a21u0uh11c3z","content":"<p>今年前一段时间将博客从 jeklly 转到 hexo ，感觉还是非常好用的，hexo 的常用命令不多，本文就介绍一下使用 hexo 的常用基本命令。</p>\n<h2 id=\"hexo-cl\"><a href=\"#hexo-cl\" class=\"headerlink\" title=\"hexo cl\"></a>hexo cl</h2><ul>\n<li>全名：hexo clean</li>\n<li>清除缓存文件 <strong>db.json</strong> 和已生成的静态文件 <strong>public</strong>。</li>\n</ul>\n<h2 id=\"hexo-g\"><a href=\"#hexo-g\" class=\"headerlink\" title=\"hexo g\"></a>hexo g</h2><ul>\n<li>全名: hexo generate</li>\n<li>生成网站静态文件，默认保存在 <strong>public</strong> 文件夹。</li>\n</ul>\n<blockquote>\n<p>由于 hexo 源文件可读性不强，使用 <strong>hexo g</strong> 可以将 hexo 源文件生成静态文件，便于调试，生成的静态文件可以直接部署网站。 </p>\n</blockquote>\n<h2 id=\"hero-s\"><a href=\"#hero-s\" class=\"headerlink\" title=\"hero s\"></a>hero s</h2><ul>\n<li>全名：hexo server</li>\n<li>启动本地服务器，访问本地 hexo 项目，默认的访问地址是 <a href=\"http://localhost:4000/\">http://localhost:4000/</a> ，可以很方便的在本地预览博客样式和内容。</li>\n</ul>\n<a id=\"more\"></a>\n<blockquote>\n<p>修改文章内容或是修改样式代码，不需要重新运行 <strong>hexo s</strong> 重启本地服务器，只需要保存文件后刷新页面即可看到效果。<br>若是修改了 hexo 根目录下的 <strong>_config.yml</strong> ，则需要重新运行 <strong>hexo s</strong> 命令重启本地服务器。 </p>\n</blockquote>\n<h2 id=\"hero-d\"><a href=\"#hero-d\" class=\"headerlink\" title=\"hero d\"></a>hero d</h2><ul>\n<li>全名：hexo deploy</li>\n<li>生成网站的静态文件，并将其部署到 <strong>_config.yml</strong> 文件中配置的仓库中。</li>\n</ul>\n<h2 id=\"hexo-n-page-xxx\"><a href=\"#hexo-n-page-xxx\" class=\"headerlink\" title=\"hexo n page xxx\"></a>hexo n page xxx</h2><ul>\n<li>全名：hexo new page xxx</li>\n<li>新建一个名为 <strong>xxx</strong> 的页面，文件地址为 <strong>source/xxx/index.md</strong>  。</li>\n</ul>\n<blockquote>\n<p>使用该命令生成的文件名，可以手动在项目中进行重命名，同时生成的页面不会出现在文章列表和归档文件中，也不支持设置分类和标签。<br>若需要删除该页面，只需要手动删除 <strong>source/xxx</strong> 目录即可。</p>\n</blockquote>\n<h2 id=\"hexo-n-xxx\"><a href=\"#hexo-n-xxx\" class=\"headerlink\" title=\"hexo n xxx\"></a>hexo n xxx</h2><ul>\n<li>全名：hexo new xxx</li>\n<li>新建一篇名为 <strong>xxx</strong> 的文章，文件地址为 <strong>source/_posts/xxx.md</strong> 。</li>\n</ul>\n<blockquote>\n<p>使用该命令生成的文章名，可以在项目中手动进行修改。<br>如果文章名中有空格，则文章名需要使用 <strong>“”</strong> ，例如 hexo new “hello world”。<br>若需要删除某篇文章，只需要手动删除 <strong>source/_posts/xxx.md</strong> 文件即可。</p>\n</blockquote>\n<h2 id=\"参考\"><a href=\"# 参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ul>\n<li><a href=\"https://hexo.io/zh-cn/docs/commands.html\">hexo 中文文档</a></li>\n</ul>\n<hr>\n<p>Happy Coding.</p>\n","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"优秀来源于分享","link_list":[{"name":"JerryC","link":"https://jerryc.me/","avatar":"https://jerryc.me/image/avatar.png","descr":"博客主题作者"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"<p>今年前一段时间将博客从 jeklly 转到 hexo ，感觉还是非常好用的，hexo 的常用命令不多，本文就介绍一下使用 hexo 的常用基本命令。</p>\n<h2 id=\"hexo-cl\"><a href=\"#hexo-cl\" class=\"headerlink\" title=\"hexo cl\"></a>hexo cl</h2><ul>\n<li>全名：hexo clean</li>\n<li>清除缓存文件<strong>db.json</strong>和已生成的静态文件 <strong>public</strong>。</li>\n</ul>\n<h2 id=\"hexo-g\"><a href=\"#hexo-g\" class=\"headerlink\" title=\"hexo g\"></a>hexo g</h2><ul>\n<li>全名: hexo generate</li>\n<li>生成网站静态文件，默认保存在<strong>public</strong>文件夹。</li>\n</ul>\n<blockquote>\n<p>由于hexo源文件可读性不强，使用 <strong>hexo g</strong> 可以将hexo源文件生成静态文件，便于调试，生成的静态文件可以直接部署网站。 </p>\n</blockquote>\n<h2 id=\"hero-s\"><a href=\"#hero-s\" class=\"headerlink\" title=\"hero s\"></a>hero s</h2><ul>\n<li>全名：hexo server</li>\n<li>启动本地服务器，访问本地hexo项目，默认的访问地址是 <a href=\"http://localhost:4000/\">http://localhost:4000/</a> ，可以很方便的在本地预览博客样式和内容。</li>\n</ul>","more":"<blockquote>\n<p>修改文章内容或是修改样式代码，不需要重新运行 <strong>hexo s</strong> 重启本地服务器，只需要保存文件后刷新页面即可看到效果。<br>若是修改了hexo根目录下的 <strong>_config.yml</strong> ，则需要重新运行 <strong>hexo s</strong> 命令重启本地服务器。 </p>\n</blockquote>\n<h2 id=\"hero-d\"><a href=\"#hero-d\" class=\"headerlink\" title=\"hero d\"></a>hero d</h2><ul>\n<li>全名：hexo deploy</li>\n<li>生成网站的静态文件，并将其部署到 <strong>_config.yml</strong> 文件中配置的仓库中。</li>\n</ul>\n<h2 id=\"hexo-n-page-xxx\"><a href=\"#hexo-n-page-xxx\" class=\"headerlink\" title=\"hexo n page xxx\"></a>hexo n page xxx</h2><ul>\n<li>全名：hexo new page xxx</li>\n<li>新建一个名为 <strong>xxx</strong> 的页面，文件地址为 <strong>source/xxx/index.md</strong>  。</li>\n</ul>\n<blockquote>\n<p>使用该命令生成的文件名，可以手动在项目中进行重命名，同时生成的页面不会出现在文章列表和归档文件中，也不支持设置分类和标签。<br>若需要删除该页面，只需要手动删除 <strong>source/xxx</strong> 目录即可。</p>\n</blockquote>\n<h2 id=\"hexo-n-xxx\"><a href=\"#hexo-n-xxx\" class=\"headerlink\" title=\"hexo n xxx\"></a>hexo n xxx</h2><ul>\n<li>全名：hexo new xxx</li>\n<li>新建一篇名为 <strong>xxx</strong> 的文章，文件地址为 <strong>source/_posts/xxx.md</strong> 。</li>\n</ul>\n<blockquote>\n<p>使用该命令生成的文章名，可以在项目中手动进行修改。<br>如果文章名中有空格，则文章名需要使用 <strong>“”</strong> ，例如 hexo new “hello world”。<br>若需要删除某篇文章，只需要手动删除 <strong>source/_posts/xxx.md</strong> 文件即可。</p>\n</blockquote>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ul>\n<li><a href=\"https://hexo.io/zh-cn/docs/commands.html\">hexo中文文档</a></li>\n</ul>\n<hr>\n<p>Happy Coding.</p>"},{"title":"Mac 下 SourceTree 安装 BeyondCompare","date":"2017-03-13T16:03:14.000Z","_content":"\n\n使用git的同学对SourceTree一定不陌生，可以很方便的进行git操作。但是其自带的文件对比工具却不太好用，在有大量文件冲突的情况下，有好的文件对比工具可以很大的提高效率。\n\nBeyondCompare则是一个很优雅，且功能强大的文件对比工具，可以很方便的比较两个文件的差异，而且可以很好的集成到SourceTree中，windows下的安装本文就不介绍了，本文主要讲一下osx下SourceTree集成BeyondCompare工具。\n\n## 1.首先我们默认已经安装好了SourceTree(神马，还没有装，震惊！)。\n\n<!-- more -->   \n    \n## 2.下载BeyondCompare并安装\n\nBeyondCompare官方下载地址：[http://www.scootersoftware.com/download.php](http://www.scootersoftware.com/download.php)\n\nBeyondCompare是收费的，虽然价格有点贵，但是绝对值得入手！\n当然，也可以自行搜索各种黑科技，但是品质不保证。\n\n## 3.将BeyondCompare加入系统命令\n\n> ln -s /Applications/Beyond\\ Compare.app/Contents/MacOS/bcomp /usr/local/bin/\n\n此处的 /Applications/Beyond\\ Compare.app/Contents/MacOS/bcomp 可以根据自己的实际情况来进行调整。\n\n## 4.在SourceTree中配置\n\nSourceTree->Preferences->Diff，设置External Diff/Merge。\n\n> Visual Diff Tool: Other\n\n> Diff Command:    /usr/local/bin/bcomp\n\n> Arguments:\t$LOCAL $REMOTE\n\n> Merge Tool:\tOther\n\n> Merge Command:\t/usr/local/bin/bcomp\n\n> Arguments:\t$LOCAL $REMOTE $BASE $MERGED\n\n\n重启SourceTree使配置生效。\n\n## 5.使用\n\n在SourceTree中选中文件，使用快捷键 Conmmand+D 即可调出BeyondCompare对文件进行对比，非常方便。\n\n\n\n\n","source":"_posts/mac-sourcetree-beyondcompre.md","raw":"---\ntitle: Mac下SourceTree安装BeyondCompare\ndate: 2017-03-14 00:03:14\ncategories: \ntags: [mac , git , sourcetree , beyondcompre ]\n---\n\n\n使用git的同学对SourceTree一定不陌生，可以很方便的进行git操作。但是其自带的文件对比工具却不太好用，在有大量文件冲突的情况下，有好的文件对比工具可以很大的提高效率。\n\nBeyondCompare则是一个很优雅，且功能强大的文件对比工具，可以很方便的比较两个文件的差异，而且可以很好的集成到SourceTree中，windows下的安装本文就不介绍了，本文主要讲一下osx下SourceTree集成BeyondCompare工具。\n\n## 1.首先我们默认已经安装好了SourceTree(神马，还没有装，震惊！)。\n\n<!-- more -->   \n    \n## 2.下载BeyondCompare并安装\n\nBeyondCompare官方下载地址：[http://www.scootersoftware.com/download.php](http://www.scootersoftware.com/download.php)\n\nBeyondCompare是收费的，虽然价格有点贵，但是绝对值得入手！\n当然，也可以自行搜索各种黑科技，但是品质不保证。\n\n## 3.将BeyondCompare加入系统命令\n\n> ln -s /Applications/Beyond\\ Compare.app/Contents/MacOS/bcomp /usr/local/bin/\n\n此处的 /Applications/Beyond\\ Compare.app/Contents/MacOS/bcomp 可以根据自己的实际情况来进行调整。\n\n## 4.在SourceTree中配置\n\nSourceTree->Preferences->Diff，设置External Diff/Merge。\n\n> Visual Diff Tool: Other\n\n> Diff Command:    /usr/local/bin/bcomp\n\n> Arguments:\t$LOCAL $REMOTE\n\n> Merge Tool:\tOther\n\n> Merge Command:\t/usr/local/bin/bcomp\n\n> Arguments:\t$LOCAL $REMOTE $BASE $MERGED\n\n\n重启SourceTree使配置生效。\n\n## 5.使用\n\n在SourceTree中选中文件，使用快捷键 Conmmand+D 即可调出BeyondCompare对文件进行对比，非常方便。\n\n\n\n\n","slug":"mac-sourcetree-beyondcompre","published":1,"updated":"2017-03-13T16:44:58.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjsw1def000ba21uheus6um7","content":"<p>使用 git 的同学对 SourceTree 一定不陌生，可以很方便的进行 git 操作。但是其自带的文件对比工具却不太好用，在有大量文件冲突的情况下，有好的文件对比工具可以很大的提高效率。</p>\n<p>BeyondCompare 则是一个很优雅，且功能强大的文件对比工具，可以很方便的比较两个文件的差异，而且可以很好的集成到 SourceTree 中，windows 下的安装本文就不介绍了，本文主要讲一下 osx 下 SourceTree 集成 BeyondCompare 工具。</p>\n<h2 id=\"1- 首先我们默认已经安装好了 SourceTree- 神马，还没有装，震惊！-。\"><a href=\"#1- 首先我们默认已经安装好了 SourceTree- 神马，还没有装，震惊！-。\" class=\"headerlink\" title=\"1. 首先我们默认已经安装好了 SourceTree(神马，还没有装，震惊！)。\"></a>1. 首先我们默认已经安装好了 SourceTree(神马，还没有装，震惊！)。</h2><a id=\"more\"></a>   \n<h2 id=\"2- 下载 BeyondCompare 并安装\"><a href=\"#2- 下载 BeyondCompare 并安装\" class=\"headerlink\" title=\"2. 下载 BeyondCompare 并安装\"></a>2. 下载 BeyondCompare 并安装</h2><p>BeyondCompare 官方下载地址：<a href=\"http://www.scootersoftware.com/download.php\">http://www.scootersoftware.com/download.php</a></p>\n<p>BeyondCompare 是收费的，虽然价格有点贵，但是绝对值得入手！<br>当然，也可以自行搜索各种黑科技，但是品质不保证。</p>\n<h2 id=\"3- 将 BeyondCompare 加入系统命令\"><a href=\"#3- 将 BeyondCompare 加入系统命令\" class=\"headerlink\" title=\"3. 将 BeyondCompare 加入系统命令\"></a>3. 将 BeyondCompare 加入系统命令</h2><blockquote>\n<p>ln -s /Applications/Beyond\\ Compare.app/Contents/MacOS/bcomp /usr/local/bin/</p>\n</blockquote>\n<p>此处的 /Applications/Beyond\\ Compare.app/Contents/MacOS/bcomp 可以根据自己的实际情况来进行调整。</p>\n<h2 id=\"4- 在 SourceTree 中配置\"><a href=\"#4- 在 SourceTree 中配置\" class=\"headerlink\" title=\"4. 在 SourceTree 中配置\"></a>4. 在 SourceTree 中配置</h2><p>SourceTree-&gt;Preferences-&gt;Diff，设置 External Diff/Merge。</p>\n<blockquote>\n<p>Visual Diff Tool: Other</p>\n</blockquote>\n<blockquote>\n<p>Diff Command:    /usr/local/bin/bcomp</p>\n</blockquote>\n<blockquote>\n<p>Arguments:    $LOCAL $REMOTE</p>\n</blockquote>\n<blockquote>\n<p>Merge Tool:    Other</p>\n</blockquote>\n<blockquote>\n<p>Merge Command:    /usr/local/bin/bcomp</p>\n</blockquote>\n<blockquote>\n<p>Arguments:    $LOCAL $REMOTE $BASE $MERGED</p>\n</blockquote>\n<p>重启 SourceTree 使配置生效。</p>\n<h2 id=\"5- 使用\"><a href=\"#5- 使用\" class=\"headerlink\" title=\"5. 使用\"></a>5. 使用 </h2><p> 在 SourceTree 中选中文件，使用快捷键 Conmmand+D 即可调出 BeyondCompare 对文件进行对比，非常方便。</p>\n","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"优秀来源于分享","link_list":[{"name":"JerryC","link":"https://jerryc.me/","avatar":"https://jerryc.me/image/avatar.png","descr":"博客主题作者"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"<p>使用git的同学对SourceTree一定不陌生，可以很方便的进行git操作。但是其自带的文件对比工具却不太好用，在有大量文件冲突的情况下，有好的文件对比工具可以很大的提高效率。</p>\n<p>BeyondCompare则是一个很优雅，且功能强大的文件对比工具，可以很方便的比较两个文件的差异，而且可以很好的集成到SourceTree中，windows下的安装本文就不介绍了，本文主要讲一下osx下SourceTree集成BeyondCompare工具。</p>\n<h2 id=\"1-首先我们默认已经安装好了SourceTree-神马，还没有装，震惊！-。\"><a href=\"#1-首先我们默认已经安装好了SourceTree-神马，还没有装，震惊！-。\" class=\"headerlink\" title=\"1.首先我们默认已经安装好了SourceTree(神马，还没有装，震惊！)。\"></a>1.首先我们默认已经安装好了SourceTree(神马，还没有装，震惊！)。</h2>","more":"<h2 id=\"2-下载BeyondCompare并安装\"><a href=\"#2-下载BeyondCompare并安装\" class=\"headerlink\" title=\"2.下载BeyondCompare并安装\"></a>2.下载BeyondCompare并安装</h2><p>BeyondCompare官方下载地址：<a href=\"http://www.scootersoftware.com/download.php\">http://www.scootersoftware.com/download.php</a></p>\n<p>BeyondCompare是收费的，虽然价格有点贵，但是绝对值得入手！<br>当然，也可以自行搜索各种黑科技，但是品质不保证。</p>\n<h2 id=\"3-将BeyondCompare加入系统命令\"><a href=\"#3-将BeyondCompare加入系统命令\" class=\"headerlink\" title=\"3.将BeyondCompare加入系统命令\"></a>3.将BeyondCompare加入系统命令</h2><blockquote>\n<p>ln -s /Applications/Beyond\\ Compare.app/Contents/MacOS/bcomp /usr/local/bin/</p>\n</blockquote>\n<p>此处的 /Applications/Beyond\\ Compare.app/Contents/MacOS/bcomp 可以根据自己的实际情况来进行调整。</p>\n<h2 id=\"4-在SourceTree中配置\"><a href=\"#4-在SourceTree中配置\" class=\"headerlink\" title=\"4.在SourceTree中配置\"></a>4.在SourceTree中配置</h2><p>SourceTree-&gt;Preferences-&gt;Diff，设置External Diff/Merge。</p>\n<blockquote>\n<p>Visual Diff Tool: Other</p>\n</blockquote>\n<blockquote>\n<p>Diff Command:    /usr/local/bin/bcomp</p>\n</blockquote>\n<blockquote>\n<p>Arguments:    $LOCAL $REMOTE</p>\n</blockquote>\n<blockquote>\n<p>Merge Tool:    Other</p>\n</blockquote>\n<blockquote>\n<p>Merge Command:    /usr/local/bin/bcomp</p>\n</blockquote>\n<blockquote>\n<p>Arguments:    $LOCAL $REMOTE $BASE $MERGED</p>\n</blockquote>\n<p>重启SourceTree使配置生效。</p>\n<h2 id=\"5-使用\"><a href=\"#5-使用\" class=\"headerlink\" title=\"5.使用\"></a>5.使用</h2><p>在SourceTree中选中文件，使用快捷键 Conmmand+D 即可调出BeyondCompare对文件进行对比，非常方便。</p>"},{"title":"Mac 下 Chrome 的优雅操作","date":"2017-02-20T18:09:09.000Z","_content":"\n\n\n\n### 标签页和窗口快捷键\n\n| **⌘-N**                                  | 打开新窗口                                   |\n| :--------------------------------------- | :-------------------------------------- |\n| **⌘-T**                                  | 打开新标签页                                  |\n| **⌘-Shift-N**                            | 在隐身模式下打开新窗口                             |\n| 按 **⌘-O**，然后选择文件                         | 在 Chrome 浏览器中打开计算机中的文件                  |\n| 按住 **⌘** 的同时点击链接。或用鼠标中键（或鼠标滚轮）点击链接       | 从后台在新标签页中打开链接                           |\n| 按住 **⌘-Shift** 的同时点击链接。或按住 **Shift** 键的同时用鼠标中键（或鼠标滚轮）点击链接 | 在新标签页中打开链接并切换到刚打开的标签页                   |\n| 按住 **Shift** 键的同时点击链接                    | 在新窗口中打开链接                               |\n| **⌘-Shift-T**                            | 重新打开上次关闭的标签页。Chrome 浏览器可记住最近关闭的 10 个标签页 |\n| 将标签页拖出标签栏                                | 在新窗口中打开标签页                              |\n| 将标签页从标签栏拖到现有窗口中                          | 在现有窗口中打开标签页                             |\n| 同时按 **⌘-Option** 和向右箭头键                  | 切换到下一个标签页                               |\n| 同时按 **⌘-Option** 和向左箭头键                  | 切换到上一个标签页                               |\n| **⌘-W**                                  | 关闭当前标签页或弹出窗口                            |\n| **⌘-Shift-W**                            | 关闭当前窗口                                  |\n| 点击并按住浏览器工具栏中的后退或前进箭头                     | 在新标签页中显示浏览历史记录                          |\n| 按 **Delete** 或 **⌘-[**                   | 转到当前标签页的上一页浏览历史记录                       |\n| 按 **Shift-Delete** 或 **⌘-]**             | 转到当前标签页的下一页浏览历史记录                       |\n| 按住 **Shift** 键的同时点击窗口左上角的 + 按钮           | 最大化窗口                                   |\n| **⌘-M**                                  | 最小化窗口                                   |\n| **⌘-H**                                  | 隐藏 Chrome 浏览器                           |\n| **⌘-Option-H**                           | 隐藏其他所有窗口                                |\n| **⌘-Q**                                  | 关闭 Chrome 浏览器                           |\n\n<!-- more -->\n\n### Chrome 浏览器功能快捷键\n\n| **⌘-Shift-B**      | 打开和关闭书签栏      |\n| :----------------- | :------------ |\n| **⌘-Option-B**     | 打开书签管理器       |\n| **⌘-,**            | 打开“偏好设置”对话框   |\n| **⌘-Y**            | 打开“历史记录”页     |\n| **⌘-Shift-J**      | 打开“下载内容”页     |\n| **⌘-Shift-Delete** | 打开“清除浏览数据”对话框 |\n\n\n\n### 地址栏快捷键\n\n| 键入搜索字词，然后按 **Enter** 键                   | 使用默认搜索引擎进行搜索                      |\n| :--------------------------------------- | :-------------------------------- |\n| 键入搜索引擎关键字，按**空格键**，然后键入搜索字词，再按 **Enter** 键 | 使用与关键字相关联的搜索引擎进行搜索                |\n| 首先键入搜索引擎网址，然后在系统提示时按 **Tab** 键，键入搜索字词，再按 **Enter** 键 | 使用与网址相关联的搜索引擎进行搜索                 |\n| 键入网址，然后按 **⌘-Enter**                     | 在新后台标签页中打开网址                      |\n| **⌘-L**                                  | 突出显示网址                            |\n| **⌘-Option-F**                           | 在地址栏中输入“?”。在问号后键入搜索字词可用默认搜索引擎执行搜索 |\n| 同时按 **Option** 和向左箭头键                    | 将光标移到地址栏中的前一个关键字词                 |\n| 同时按 **Option** 和向右箭头键                    | 在地址栏中将光标移到下一个关键字词                 |\n| 同时按 **Shift-Option** 和向左箭头键              | 在地址栏中突出显示上一关键字词                   |\n| 同时按 **Shift-Option** 和向右箭头键              | 在地址栏中突出显示下一关键字词                   |\n| **⌘-Delete**                             | 在地址栏中删除光标前的字词                     |\n| 在地址栏菜单中按 **Page Up** 或 **Page Down**     | 在菜单中选择上一条目或下一条目                   |\n\n\n\n### 网页快捷键\n\n| **⌘-P**                         | 打印当前网页                                |\n| :------------------------------ | :------------------------------------ |\n| **⌘-Shift-P**                   | 打开“网页设置”对话框                           |\n| **⌘-S**                         | 保存当前网页                                |\n| **⌘-Shift-I**                   | 通过电子邮件发送当前网页                          |\n| **⌘-R**                         | 重新载入当前网页                              |\n| **⌘-,**                         | 停止载入当前网页                              |\n| **⌘-F**                         | 打开查找栏                                 |\n| **⌘-G**                         | 在查找栏中查找下一条与输入内容相匹配的内容                 |\n| **⌘-Shift-G** 或 **Shift-Enter** | 在查找栏中查找上一条与输入内容相匹配的内容                 |\n| **⌘-E**                         | 使用所选内容查找                              |\n| **⌘-J**                         | 跳到所选内容                                |\n| **⌘-Option-I**                  | 打开“开发人员工具”                            |\n| **⌘-Option-J**                  | 打开“JavaScript 控制台”                    |\n| **⌘-Option-U**                  | 打开当前网页的源代码                            |\n| 按住 **Option** 键，然后点击链接          | 下载链接目标                                |\n| 将链接拖到书签栏中                       | 将链接保存为书签                              |\n| **⌘-D**                         | 将当前网页保存为书签                            |\n| **⌘-Shift-D**                   | 将所有打开的标签页以书签的形式保存在新文件夹中               |\n| **⌘-Shift-F**                   | 在全屏模式下打开网页。再按一次 **⌘-Shift-F** 可退出全屏模式 |\n| **⌘-+**                         | 放大网页上的所有内容                            |\n| ⌘ 和 -                           | 缩小网页上的所有内容                            |\n| **⌘-0**                         | 将网页上的所有内容恢复到正常大小                      |\n| **⌘-Shift-H**                   | 在当前标签页中打开主页                           |\n| **空格键**                         | 向下滚动网页                                |\n| **⌘-Option-F**                  | 搜索网页                                  |\n\n\n\n### 文本快捷键\n\n| **⌘-C**                    | 将突出显示的内容复制到剪贴板中         |\n| :------------------------- | :---------------------- |\n| **⌘-Option-C**             | 将您正在查看的网页的网址复制到剪贴板中     |\n| **⌘-V**                    | 从剪贴板中粘贴内容               |\n| **⌘-Shift-Option-V**       | 粘贴内容并应用周围文本的格式          |\n| **⌘-X** 或 **Shift-Delete** | 删除突出显示的内容并将其复制到剪贴板中     |\n| **⌘-Z**                    | 撤消最后一步操作                |\n| **⌘-Shift-Z**              | 重复最后一步操作                |\n| **⌘-X**                    | 删除突出显示的内容并将其保存到剪贴板中（剪切） |\n| **⌘-A**                    | 选择当前网页上的所有文本            |\n| **⌘-:**                    | 打开“拼写和语法”对话框            |\n| **⌘-;**                    | 检查当前网页上的拼写和语法           |\n\n\n\n\nHappy Coding.\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/mac_chrome_hot_key.md","raw":"---\ntitle: Mac下Chrome的优雅操作\ndate: 2017-02-21 02:09:09\ncategories: 工具\ntags: [工具 , mac]\n---\n\n\n\n\n### 标签页和窗口快捷键\n\n| **⌘-N**                                  | 打开新窗口                                   |\n| :--------------------------------------- | :-------------------------------------- |\n| **⌘-T**                                  | 打开新标签页                                  |\n| **⌘-Shift-N**                            | 在隐身模式下打开新窗口                             |\n| 按 **⌘-O**，然后选择文件                         | 在 Chrome 浏览器中打开计算机中的文件                  |\n| 按住 **⌘** 的同时点击链接。或用鼠标中键（或鼠标滚轮）点击链接       | 从后台在新标签页中打开链接                           |\n| 按住 **⌘-Shift** 的同时点击链接。或按住 **Shift** 键的同时用鼠标中键（或鼠标滚轮）点击链接 | 在新标签页中打开链接并切换到刚打开的标签页                   |\n| 按住 **Shift** 键的同时点击链接                    | 在新窗口中打开链接                               |\n| **⌘-Shift-T**                            | 重新打开上次关闭的标签页。Chrome 浏览器可记住最近关闭的 10 个标签页 |\n| 将标签页拖出标签栏                                | 在新窗口中打开标签页                              |\n| 将标签页从标签栏拖到现有窗口中                          | 在现有窗口中打开标签页                             |\n| 同时按 **⌘-Option** 和向右箭头键                  | 切换到下一个标签页                               |\n| 同时按 **⌘-Option** 和向左箭头键                  | 切换到上一个标签页                               |\n| **⌘-W**                                  | 关闭当前标签页或弹出窗口                            |\n| **⌘-Shift-W**                            | 关闭当前窗口                                  |\n| 点击并按住浏览器工具栏中的后退或前进箭头                     | 在新标签页中显示浏览历史记录                          |\n| 按 **Delete** 或 **⌘-[**                   | 转到当前标签页的上一页浏览历史记录                       |\n| 按 **Shift-Delete** 或 **⌘-]**             | 转到当前标签页的下一页浏览历史记录                       |\n| 按住 **Shift** 键的同时点击窗口左上角的 + 按钮           | 最大化窗口                                   |\n| **⌘-M**                                  | 最小化窗口                                   |\n| **⌘-H**                                  | 隐藏 Chrome 浏览器                           |\n| **⌘-Option-H**                           | 隐藏其他所有窗口                                |\n| **⌘-Q**                                  | 关闭 Chrome 浏览器                           |\n\n<!-- more -->\n\n### Chrome 浏览器功能快捷键\n\n| **⌘-Shift-B**      | 打开和关闭书签栏      |\n| :----------------- | :------------ |\n| **⌘-Option-B**     | 打开书签管理器       |\n| **⌘-,**            | 打开“偏好设置”对话框   |\n| **⌘-Y**            | 打开“历史记录”页     |\n| **⌘-Shift-J**      | 打开“下载内容”页     |\n| **⌘-Shift-Delete** | 打开“清除浏览数据”对话框 |\n\n\n\n### 地址栏快捷键\n\n| 键入搜索字词，然后按 **Enter** 键                   | 使用默认搜索引擎进行搜索                      |\n| :--------------------------------------- | :-------------------------------- |\n| 键入搜索引擎关键字，按**空格键**，然后键入搜索字词，再按 **Enter** 键 | 使用与关键字相关联的搜索引擎进行搜索                |\n| 首先键入搜索引擎网址，然后在系统提示时按 **Tab** 键，键入搜索字词，再按 **Enter** 键 | 使用与网址相关联的搜索引擎进行搜索                 |\n| 键入网址，然后按 **⌘-Enter**                     | 在新后台标签页中打开网址                      |\n| **⌘-L**                                  | 突出显示网址                            |\n| **⌘-Option-F**                           | 在地址栏中输入“?”。在问号后键入搜索字词可用默认搜索引擎执行搜索 |\n| 同时按 **Option** 和向左箭头键                    | 将光标移到地址栏中的前一个关键字词                 |\n| 同时按 **Option** 和向右箭头键                    | 在地址栏中将光标移到下一个关键字词                 |\n| 同时按 **Shift-Option** 和向左箭头键              | 在地址栏中突出显示上一关键字词                   |\n| 同时按 **Shift-Option** 和向右箭头键              | 在地址栏中突出显示下一关键字词                   |\n| **⌘-Delete**                             | 在地址栏中删除光标前的字词                     |\n| 在地址栏菜单中按 **Page Up** 或 **Page Down**     | 在菜单中选择上一条目或下一条目                   |\n\n\n\n### 网页快捷键\n\n| **⌘-P**                         | 打印当前网页                                |\n| :------------------------------ | :------------------------------------ |\n| **⌘-Shift-P**                   | 打开“网页设置”对话框                           |\n| **⌘-S**                         | 保存当前网页                                |\n| **⌘-Shift-I**                   | 通过电子邮件发送当前网页                          |\n| **⌘-R**                         | 重新载入当前网页                              |\n| **⌘-,**                         | 停止载入当前网页                              |\n| **⌘-F**                         | 打开查找栏                                 |\n| **⌘-G**                         | 在查找栏中查找下一条与输入内容相匹配的内容                 |\n| **⌘-Shift-G** 或 **Shift-Enter** | 在查找栏中查找上一条与输入内容相匹配的内容                 |\n| **⌘-E**                         | 使用所选内容查找                              |\n| **⌘-J**                         | 跳到所选内容                                |\n| **⌘-Option-I**                  | 打开“开发人员工具”                            |\n| **⌘-Option-J**                  | 打开“JavaScript 控制台”                    |\n| **⌘-Option-U**                  | 打开当前网页的源代码                            |\n| 按住 **Option** 键，然后点击链接          | 下载链接目标                                |\n| 将链接拖到书签栏中                       | 将链接保存为书签                              |\n| **⌘-D**                         | 将当前网页保存为书签                            |\n| **⌘-Shift-D**                   | 将所有打开的标签页以书签的形式保存在新文件夹中               |\n| **⌘-Shift-F**                   | 在全屏模式下打开网页。再按一次 **⌘-Shift-F** 可退出全屏模式 |\n| **⌘-+**                         | 放大网页上的所有内容                            |\n| ⌘ 和 -                           | 缩小网页上的所有内容                            |\n| **⌘-0**                         | 将网页上的所有内容恢复到正常大小                      |\n| **⌘-Shift-H**                   | 在当前标签页中打开主页                           |\n| **空格键**                         | 向下滚动网页                                |\n| **⌘-Option-F**                  | 搜索网页                                  |\n\n\n\n### 文本快捷键\n\n| **⌘-C**                    | 将突出显示的内容复制到剪贴板中         |\n| :------------------------- | :---------------------- |\n| **⌘-Option-C**             | 将您正在查看的网页的网址复制到剪贴板中     |\n| **⌘-V**                    | 从剪贴板中粘贴内容               |\n| **⌘-Shift-Option-V**       | 粘贴内容并应用周围文本的格式          |\n| **⌘-X** 或 **Shift-Delete** | 删除突出显示的内容并将其复制到剪贴板中     |\n| **⌘-Z**                    | 撤消最后一步操作                |\n| **⌘-Shift-Z**              | 重复最后一步操作                |\n| **⌘-X**                    | 删除突出显示的内容并将其保存到剪贴板中（剪切） |\n| **⌘-A**                    | 选择当前网页上的所有文本            |\n| **⌘-:**                    | 打开“拼写和语法”对话框            |\n| **⌘-;**                    | 检查当前网页上的拼写和语法           |\n\n\n\n\nHappy Coding.\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"mac_chrome_hot_key","published":1,"updated":"2017-02-20T18:33:39.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjsw1dei000fa21ucg0icccp","content":"<h3 id=\"标签页和窗口快捷键\"><a href=\"# 标签页和窗口快捷键\" class=\"headerlink\" title=\"标签页和窗口快捷键\"></a>标签页和窗口快捷键</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:left\"><strong>⌘-N</strong></th>\n<th style=\"text-align:left\">打开新窗口</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-T</strong></td>\n<td style=\"text-align:left\">打开新标签页</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-Shift-N</strong></td>\n<td style=\"text-align:left\">在隐身模式下打开新窗口</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">按 <strong>⌘-O</strong>，然后选择文件</td>\n<td style=\"text-align:left\">在 Chrome 浏览器中打开计算机中的文件</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">按住 <strong>⌘</strong> 的同时点击链接。或用鼠标中键（或鼠标滚轮）点击链接</td>\n<td style=\"text-align:left\">从后台在新标签页中打开链接</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">按住 <strong>⌘-Shift</strong> 的同时点击链接。或按住 <strong>Shift</strong> 键的同时用鼠标中键（或鼠标滚轮）点击链接</td>\n<td style=\"text-align:left\">在新标签页中打开链接并切换到刚打开的标签页</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">按住 <strong>Shift</strong> 键的同时点击链接</td>\n<td style=\"text-align:left\">在新窗口中打开链接</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-Shift-T</strong></td>\n<td style=\"text-align:left\">重新打开上次关闭的标签页。Chrome 浏览器可记住最近关闭的 10 个标签页</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">将标签页拖出标签栏</td>\n<td style=\"text-align:left\">在新窗口中打开标签页</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">将标签页从标签栏拖到现有窗口中</td>\n<td style=\"text-align:left\">在现有窗口中打开标签页</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">同时按 <strong>⌘-Option</strong> 和向右箭头键</td>\n<td style=\"text-align:left\">切换到下一个标签页</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">同时按 <strong>⌘-Option</strong> 和向左箭头键</td>\n<td style=\"text-align:left\">切换到上一个标签页</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-W</strong></td>\n<td style=\"text-align:left\">关闭当前标签页或弹出窗口</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-Shift-W</strong></td>\n<td style=\"text-align:left\">关闭当前窗口</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">点击并按住浏览器工具栏中的后退或前进箭头</td>\n<td style=\"text-align:left\">在新标签页中显示浏览历史记录</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">按 <strong>Delete</strong> 或 <strong>⌘-[</strong></td>\n<td style=\"text-align:left\">转到当前标签页的上一页浏览历史记录</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">按 <strong>Shift-Delete</strong> 或 <strong>⌘-]</strong></td>\n<td style=\"text-align:left\">转到当前标签页的下一页浏览历史记录</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">按住 <strong>Shift</strong> 键的同时点击窗口左上角的 + 按钮</td>\n<td style=\"text-align:left\">最大化窗口</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-M</strong></td>\n<td style=\"text-align:left\">最小化窗口</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-H</strong></td>\n<td style=\"text-align:left\">隐藏 Chrome 浏览器</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-Option-H</strong></td>\n<td style=\"text-align:left\">隐藏其他所有窗口</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-Q</strong></td>\n<td style=\"text-align:left\">关闭 Chrome 浏览器</td>\n</tr>\n</tbody>\n</table>\n<a id=\"more\"></a>\n<h3 id=\"Chrome- 浏览器功能快捷键\"><a href=\"#Chrome- 浏览器功能快捷键\" class=\"headerlink\" title=\"Chrome 浏览器功能快捷键\"></a>Chrome 浏览器功能快捷键</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:left\"><strong>⌘-Shift-B</strong></th>\n<th style=\"text-align:left\">打开和关闭书签栏</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-Option-B</strong></td>\n<td style=\"text-align:left\">打开书签管理器</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-,</strong></td>\n<td style=\"text-align:left\">打开“偏好设置”对话框</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-Y</strong></td>\n<td style=\"text-align:left\">打开“历史记录”页</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-Shift-J</strong></td>\n<td style=\"text-align:left\">打开“下载内容”页</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-Shift-Delete</strong></td>\n<td style=\"text-align:left\">打开“清除浏览数据”对话框</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"地址栏快捷键\"><a href=\"# 地址栏快捷键\" class=\"headerlink\" title=\"地址栏快捷键\"></a>地址栏快捷键</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">键入搜索字词，然后按 <strong>Enter</strong> 键</th>\n<th style=\"text-align:left\">使用默认搜索引擎进行搜索</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">键入搜索引擎关键字，按 <strong> 空格键</strong>，然后键入搜索字词，再按 <strong>Enter</strong> 键</td>\n<td style=\"text-align:left\">使用与关键字相关联的搜索引擎进行搜索</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">首先键入搜索引擎网址，然后在系统提示时按 <strong>Tab</strong> 键，键入搜索字词，再按 <strong>Enter</strong> 键</td>\n<td style=\"text-align:left\">使用与网址相关联的搜索引擎进行搜索</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">键入网址，然后按 <strong>⌘-Enter</strong></td>\n<td style=\"text-align:left\">在新后台标签页中打开网址</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-L</strong></td>\n<td style=\"text-align:left\">突出显示网址</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-Option-F</strong></td>\n<td style=\"text-align:left\">在地址栏中输入“?”。在问号后键入搜索字词可用默认搜索引擎执行搜索</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">同时按 <strong>Option</strong> 和向左箭头键</td>\n<td style=\"text-align:left\">将光标移到地址栏中的前一个关键字词</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">同时按 <strong>Option</strong> 和向右箭头键</td>\n<td style=\"text-align:left\">在地址栏中将光标移到下一个关键字词</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">同时按 <strong>Shift-Option</strong> 和向左箭头键</td>\n<td style=\"text-align:left\">在地址栏中突出显示上一关键字词</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">同时按 <strong>Shift-Option</strong> 和向右箭头键</td>\n<td style=\"text-align:left\">在地址栏中突出显示下一关键字词</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-Delete</strong></td>\n<td style=\"text-align:left\">在地址栏中删除光标前的字词</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">在地址栏菜单中按 <strong>Page Up</strong> 或 <strong>Page Down</strong></td>\n<td style=\"text-align:left\">在菜单中选择上一条目或下一条目</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"网页快捷键\"><a href=\"# 网页快捷键\" class=\"headerlink\" title=\"网页快捷键\"></a>网页快捷键</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:left\"><strong>⌘-P</strong></th>\n<th style=\"text-align:left\">打印当前网页</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-Shift-P</strong></td>\n<td style=\"text-align:left\">打开“网页设置”对话框</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-S</strong></td>\n<td style=\"text-align:left\">保存当前网页</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-Shift-I</strong></td>\n<td style=\"text-align:left\">通过电子邮件发送当前网页</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-R</strong></td>\n<td style=\"text-align:left\">重新载入当前网页</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-,</strong></td>\n<td style=\"text-align:left\">停止载入当前网页</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-F</strong></td>\n<td style=\"text-align:left\">打开查找栏</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-G</strong></td>\n<td style=\"text-align:left\">在查找栏中查找下一条与输入内容相匹配的内容</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-Shift-G</strong> 或 <strong>Shift-Enter</strong></td>\n<td style=\"text-align:left\">在查找栏中查找上一条与输入内容相匹配的内容</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-E</strong></td>\n<td style=\"text-align:left\">使用所选内容查找</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-J</strong></td>\n<td style=\"text-align:left\">跳到所选内容</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-Option-I</strong></td>\n<td style=\"text-align:left\">打开“开发人员工具”</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-Option-J</strong></td>\n<td style=\"text-align:left\">打开“JavaScript 控制台”</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-Option-U</strong></td>\n<td style=\"text-align:left\">打开当前网页的源代码</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">按住 <strong>Option</strong> 键，然后点击链接</td>\n<td style=\"text-align:left\">下载链接目标</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">将链接拖到书签栏中</td>\n<td style=\"text-align:left\">将链接保存为书签</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-D</strong></td>\n<td style=\"text-align:left\">将当前网页保存为书签</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-Shift-D</strong></td>\n<td style=\"text-align:left\">将所有打开的标签页以书签的形式保存在新文件夹中</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-Shift-F</strong></td>\n<td style=\"text-align:left\">在全屏模式下打开网页。再按一次 <strong>⌘-Shift-F</strong> 可退出全屏模式</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-+</strong></td>\n<td style=\"text-align:left\">放大网页上的所有内容</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">⌘ 和 -</td>\n<td style=\"text-align:left\">缩小网页上的所有内容</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-0</strong></td>\n<td style=\"text-align:left\">将网页上的所有内容恢复到正常大小</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-Shift-H</strong></td>\n<td style=\"text-align:left\">在当前标签页中打开主页</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>空格键</strong></td>\n<td style=\"text-align:left\">向下滚动网页</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-Option-F</strong></td>\n<td style=\"text-align:left\">搜索网页</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"文本快捷键\"><a href=\"# 文本快捷键\" class=\"headerlink\" title=\"文本快捷键\"></a>文本快捷键</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:left\"><strong>⌘-C</strong></th>\n<th style=\"text-align:left\">将突出显示的内容复制到剪贴板中</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-Option-C</strong></td>\n<td style=\"text-align:left\">将您正在查看的网页的网址复制到剪贴板中</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-V</strong></td>\n<td style=\"text-align:left\">从剪贴板中粘贴内容</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-Shift-Option-V</strong></td>\n<td style=\"text-align:left\">粘贴内容并应用周围文本的格式</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-X</strong> 或 <strong>Shift-Delete</strong></td>\n<td style=\"text-align:left\">删除突出显示的内容并将其复制到剪贴板中</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-Z</strong></td>\n<td style=\"text-align:left\">撤消最后一步操作</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-Shift-Z</strong></td>\n<td style=\"text-align:left\">重复最后一步操作</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-X</strong></td>\n<td style=\"text-align:left\">删除突出显示的内容并将其保存到剪贴板中（剪切）</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-A</strong></td>\n<td style=\"text-align:left\">选择当前网页上的所有文本</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-:</strong></td>\n<td style=\"text-align:left\">打开“拼写和语法”对话框</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-;</strong></td>\n<td style=\"text-align:left\">检查当前网页上的拼写和语法</td>\n</tr>\n</tbody>\n</table>\n<p>Happy Coding.</p>\n","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"优秀来源于分享","link_list":[{"name":"JerryC","link":"https://jerryc.me/","avatar":"https://jerryc.me/image/avatar.png","descr":"博客主题作者"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"<h3 id=\"标签页和窗口快捷键\"><a href=\"#标签页和窗口快捷键\" class=\"headerlink\" title=\"标签页和窗口快捷键\"></a>标签页和窗口快捷键</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:left\"><strong>⌘-N</strong></th>\n<th style=\"text-align:left\">打开新窗口</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-T</strong></td>\n<td style=\"text-align:left\">打开新标签页</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-Shift-N</strong></td>\n<td style=\"text-align:left\">在隐身模式下打开新窗口</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">按 <strong>⌘-O</strong>，然后选择文件</td>\n<td style=\"text-align:left\">在 Chrome 浏览器中打开计算机中的文件</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">按住 <strong>⌘</strong> 的同时点击链接。或用鼠标中键（或鼠标滚轮）点击链接</td>\n<td style=\"text-align:left\">从后台在新标签页中打开链接</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">按住 <strong>⌘-Shift</strong> 的同时点击链接。或按住 <strong>Shift</strong> 键的同时用鼠标中键（或鼠标滚轮）点击链接</td>\n<td style=\"text-align:left\">在新标签页中打开链接并切换到刚打开的标签页</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">按住 <strong>Shift</strong> 键的同时点击链接</td>\n<td style=\"text-align:left\">在新窗口中打开链接</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-Shift-T</strong></td>\n<td style=\"text-align:left\">重新打开上次关闭的标签页。Chrome 浏览器可记住最近关闭的 10 个标签页</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">将标签页拖出标签栏</td>\n<td style=\"text-align:left\">在新窗口中打开标签页</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">将标签页从标签栏拖到现有窗口中</td>\n<td style=\"text-align:left\">在现有窗口中打开标签页</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">同时按 <strong>⌘-Option</strong> 和向右箭头键</td>\n<td style=\"text-align:left\">切换到下一个标签页</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">同时按 <strong>⌘-Option</strong> 和向左箭头键</td>\n<td style=\"text-align:left\">切换到上一个标签页</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-W</strong></td>\n<td style=\"text-align:left\">关闭当前标签页或弹出窗口</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-Shift-W</strong></td>\n<td style=\"text-align:left\">关闭当前窗口</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">点击并按住浏览器工具栏中的后退或前进箭头</td>\n<td style=\"text-align:left\">在新标签页中显示浏览历史记录</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">按 <strong>Delete</strong> 或 <strong>⌘-[</strong></td>\n<td style=\"text-align:left\">转到当前标签页的上一页浏览历史记录</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">按 <strong>Shift-Delete</strong> 或 <strong>⌘-]</strong></td>\n<td style=\"text-align:left\">转到当前标签页的下一页浏览历史记录</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">按住 <strong>Shift</strong> 键的同时点击窗口左上角的 + 按钮</td>\n<td style=\"text-align:left\">最大化窗口</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-M</strong></td>\n<td style=\"text-align:left\">最小化窗口</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-H</strong></td>\n<td style=\"text-align:left\">隐藏 Chrome 浏览器</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-Option-H</strong></td>\n<td style=\"text-align:left\">隐藏其他所有窗口</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-Q</strong></td>\n<td style=\"text-align:left\">关闭 Chrome 浏览器</td>\n</tr>\n</tbody>\n</table>","more":"<h3 id=\"Chrome-浏览器功能快捷键\"><a href=\"#Chrome-浏览器功能快捷键\" class=\"headerlink\" title=\"Chrome 浏览器功能快捷键\"></a>Chrome 浏览器功能快捷键</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:left\"><strong>⌘-Shift-B</strong></th>\n<th style=\"text-align:left\">打开和关闭书签栏</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-Option-B</strong></td>\n<td style=\"text-align:left\">打开书签管理器</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-,</strong></td>\n<td style=\"text-align:left\">打开“偏好设置”对话框</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-Y</strong></td>\n<td style=\"text-align:left\">打开“历史记录”页</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-Shift-J</strong></td>\n<td style=\"text-align:left\">打开“下载内容”页</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-Shift-Delete</strong></td>\n<td style=\"text-align:left\">打开“清除浏览数据”对话框</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"地址栏快捷键\"><a href=\"#地址栏快捷键\" class=\"headerlink\" title=\"地址栏快捷键\"></a>地址栏快捷键</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">键入搜索字词，然后按 <strong>Enter</strong> 键</th>\n<th style=\"text-align:left\">使用默认搜索引擎进行搜索</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">键入搜索引擎关键字，按<strong>空格键</strong>，然后键入搜索字词，再按 <strong>Enter</strong> 键</td>\n<td style=\"text-align:left\">使用与关键字相关联的搜索引擎进行搜索</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">首先键入搜索引擎网址，然后在系统提示时按 <strong>Tab</strong> 键，键入搜索字词，再按 <strong>Enter</strong> 键</td>\n<td style=\"text-align:left\">使用与网址相关联的搜索引擎进行搜索</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">键入网址，然后按 <strong>⌘-Enter</strong></td>\n<td style=\"text-align:left\">在新后台标签页中打开网址</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-L</strong></td>\n<td style=\"text-align:left\">突出显示网址</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-Option-F</strong></td>\n<td style=\"text-align:left\">在地址栏中输入“?”。在问号后键入搜索字词可用默认搜索引擎执行搜索</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">同时按 <strong>Option</strong> 和向左箭头键</td>\n<td style=\"text-align:left\">将光标移到地址栏中的前一个关键字词</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">同时按 <strong>Option</strong> 和向右箭头键</td>\n<td style=\"text-align:left\">在地址栏中将光标移到下一个关键字词</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">同时按 <strong>Shift-Option</strong> 和向左箭头键</td>\n<td style=\"text-align:left\">在地址栏中突出显示上一关键字词</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">同时按 <strong>Shift-Option</strong> 和向右箭头键</td>\n<td style=\"text-align:left\">在地址栏中突出显示下一关键字词</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-Delete</strong></td>\n<td style=\"text-align:left\">在地址栏中删除光标前的字词</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">在地址栏菜单中按 <strong>Page Up</strong> 或 <strong>Page Down</strong></td>\n<td style=\"text-align:left\">在菜单中选择上一条目或下一条目</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"网页快捷键\"><a href=\"#网页快捷键\" class=\"headerlink\" title=\"网页快捷键\"></a>网页快捷键</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:left\"><strong>⌘-P</strong></th>\n<th style=\"text-align:left\">打印当前网页</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-Shift-P</strong></td>\n<td style=\"text-align:left\">打开“网页设置”对话框</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-S</strong></td>\n<td style=\"text-align:left\">保存当前网页</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-Shift-I</strong></td>\n<td style=\"text-align:left\">通过电子邮件发送当前网页</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-R</strong></td>\n<td style=\"text-align:left\">重新载入当前网页</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-,</strong></td>\n<td style=\"text-align:left\">停止载入当前网页</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-F</strong></td>\n<td style=\"text-align:left\">打开查找栏</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-G</strong></td>\n<td style=\"text-align:left\">在查找栏中查找下一条与输入内容相匹配的内容</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-Shift-G</strong> 或 <strong>Shift-Enter</strong></td>\n<td style=\"text-align:left\">在查找栏中查找上一条与输入内容相匹配的内容</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-E</strong></td>\n<td style=\"text-align:left\">使用所选内容查找</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-J</strong></td>\n<td style=\"text-align:left\">跳到所选内容</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-Option-I</strong></td>\n<td style=\"text-align:left\">打开“开发人员工具”</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-Option-J</strong></td>\n<td style=\"text-align:left\">打开“JavaScript 控制台”</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-Option-U</strong></td>\n<td style=\"text-align:left\">打开当前网页的源代码</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">按住 <strong>Option</strong> 键，然后点击链接</td>\n<td style=\"text-align:left\">下载链接目标</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">将链接拖到书签栏中</td>\n<td style=\"text-align:left\">将链接保存为书签</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-D</strong></td>\n<td style=\"text-align:left\">将当前网页保存为书签</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-Shift-D</strong></td>\n<td style=\"text-align:left\">将所有打开的标签页以书签的形式保存在新文件夹中</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-Shift-F</strong></td>\n<td style=\"text-align:left\">在全屏模式下打开网页。再按一次 <strong>⌘-Shift-F</strong> 可退出全屏模式</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-+</strong></td>\n<td style=\"text-align:left\">放大网页上的所有内容</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">⌘ 和 -</td>\n<td style=\"text-align:left\">缩小网页上的所有内容</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-0</strong></td>\n<td style=\"text-align:left\">将网页上的所有内容恢复到正常大小</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-Shift-H</strong></td>\n<td style=\"text-align:left\">在当前标签页中打开主页</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>空格键</strong></td>\n<td style=\"text-align:left\">向下滚动网页</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-Option-F</strong></td>\n<td style=\"text-align:left\">搜索网页</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"文本快捷键\"><a href=\"#文本快捷键\" class=\"headerlink\" title=\"文本快捷键\"></a>文本快捷键</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:left\"><strong>⌘-C</strong></th>\n<th style=\"text-align:left\">将突出显示的内容复制到剪贴板中</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-Option-C</strong></td>\n<td style=\"text-align:left\">将您正在查看的网页的网址复制到剪贴板中</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-V</strong></td>\n<td style=\"text-align:left\">从剪贴板中粘贴内容</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-Shift-Option-V</strong></td>\n<td style=\"text-align:left\">粘贴内容并应用周围文本的格式</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-X</strong> 或 <strong>Shift-Delete</strong></td>\n<td style=\"text-align:left\">删除突出显示的内容并将其复制到剪贴板中</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-Z</strong></td>\n<td style=\"text-align:left\">撤消最后一步操作</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-Shift-Z</strong></td>\n<td style=\"text-align:left\">重复最后一步操作</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-X</strong></td>\n<td style=\"text-align:left\">删除突出显示的内容并将其保存到剪贴板中（剪切）</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-A</strong></td>\n<td style=\"text-align:left\">选择当前网页上的所有文本</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-:</strong></td>\n<td style=\"text-align:left\">打开“拼写和语法”对话框</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>⌘-;</strong></td>\n<td style=\"text-align:left\">检查当前网页上的拼写和语法</td>\n</tr>\n</tbody>\n</table>\n<p>Happy Coding.</p>"},{"title":"电影：花水木","date":"2016-03-16T13:49:56.000Z","_content":"\n![1](movie-huashuimu/picture_2.jpg)\n\n<!-- more -->\n\n![2](movie-huashuimu/picture_3.jpg)\n\n## 花水木\n花水木的花语是感谢、回礼。\n\n![3](movie-huashuimu/picture_1.jpg)\n\n## 【花水木】\n貌似好的电影总是需要有和它相配的音乐\n\n[网易云音乐-花水木](http://music.163.com/#/outchain/2/33471935/)\n\n电影的画面配上舒服的音乐，简直棒极了。刚开始看的时候就是被音乐吸引的。\n\n## 她和他\n新垣结衣，当初的女神，出演过很多部日系纯爱片，真的好漂亮有木有哇。\n生田斗真，第一眼看到这个男主，让我想到了我的一个初中的死党，真的好像。当然，比我死党要帅。\n\n![4](movie-huashuimu/picture_4.jpg)\n\n![5](movie-huashuimu/picture_5.jpg)\n\n## 十年前的相遇，十年后的重逢\n\n1996年，北海道道东。因一次不容错过的考试，美丽的女孩平泽纱枝邂逅\n了其他高中的同级生木内康平。康平的父亲是个渔夫，他一直帮父亲打渔，\n虽然自己无意进学，他却鼓励的纱枝去追逐梦想。在他的鼓励下，一度放弃\n的纱织最终考入了理想的大学。她来到东京，康平则留在北海道，两人展开\n相隔两地的远距离恋爱，十年三国四地。\n\n![6](movie-huashuimu/picture_8.jpg)\n\n![7](movie-huashuimu/picture_7.jpg)\n\n\n当然，最终在仁慈的导演手中，两人最终走在了一起。电影是美好的，转了一个圈，又回到了原点。\n\n在电影的结尾，仰头望着那棵伴随纱枝成长的花水木，镜头顺着纱枝的视线，游离了多时康平也终于回到了视线之中。\n\n故事淡淡的开始，淡淡的结束，留下的只是那棵老树，那场邂逅。\n\n貌似大多数感情都是这样，爱情或是友情。也许是从某次的不期而遇，情窦初开，开始了懵懵懂懂的爱情，然后去追寻自己的梦想，一些失去一些懂得，渐渐的明白自己需要什么，兜兜转转，有的人回到了最初的起点，有的人可能永远都不会在回来了。\n\n## 【后来】\n电影和奶茶的【后来】是两种不一样的结局。好好的爱自己，时间会给你答案。\n\n![8](movie-huashuimu/picture_2.jpg)\n","source":"_posts/movie-huashuimu.md","raw":"---\ntitle: 电影：花水木\ndate: 2016-03-16 21:49:56\ncategories: movie\ntags: movie\n---\n\n![1](movie-huashuimu/picture_2.jpg)\n\n<!-- more -->\n\n![2](movie-huashuimu/picture_3.jpg)\n\n## 花水木\n花水木的花语是感谢、回礼。\n\n![3](movie-huashuimu/picture_1.jpg)\n\n## 【花水木】\n貌似好的电影总是需要有和它相配的音乐\n\n[网易云音乐-花水木](http://music.163.com/#/outchain/2/33471935/)\n\n电影的画面配上舒服的音乐，简直棒极了。刚开始看的时候就是被音乐吸引的。\n\n## 她和他\n新垣结衣，当初的女神，出演过很多部日系纯爱片，真的好漂亮有木有哇。\n生田斗真，第一眼看到这个男主，让我想到了我的一个初中的死党，真的好像。当然，比我死党要帅。\n\n![4](movie-huashuimu/picture_4.jpg)\n\n![5](movie-huashuimu/picture_5.jpg)\n\n## 十年前的相遇，十年后的重逢\n\n1996年，北海道道东。因一次不容错过的考试，美丽的女孩平泽纱枝邂逅\n了其他高中的同级生木内康平。康平的父亲是个渔夫，他一直帮父亲打渔，\n虽然自己无意进学，他却鼓励的纱枝去追逐梦想。在他的鼓励下，一度放弃\n的纱织最终考入了理想的大学。她来到东京，康平则留在北海道，两人展开\n相隔两地的远距离恋爱，十年三国四地。\n\n![6](movie-huashuimu/picture_8.jpg)\n\n![7](movie-huashuimu/picture_7.jpg)\n\n\n当然，最终在仁慈的导演手中，两人最终走在了一起。电影是美好的，转了一个圈，又回到了原点。\n\n在电影的结尾，仰头望着那棵伴随纱枝成长的花水木，镜头顺着纱枝的视线，游离了多时康平也终于回到了视线之中。\n\n故事淡淡的开始，淡淡的结束，留下的只是那棵老树，那场邂逅。\n\n貌似大多数感情都是这样，爱情或是友情。也许是从某次的不期而遇，情窦初开，开始了懵懵懂懂的爱情，然后去追寻自己的梦想，一些失去一些懂得，渐渐的明白自己需要什么，兜兜转转，有的人回到了最初的起点，有的人可能永远都不会在回来了。\n\n## 【后来】\n电影和奶茶的【后来】是两种不一样的结局。好好的爱自己，时间会给你答案。\n\n![8](movie-huashuimu/picture_2.jpg)\n","slug":"movie-huashuimu","published":1,"updated":"2019-05-12T05:59:50.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjsw1dek000ha21ufc8234vm","content":"<p><img src=\"/2016/03/16/movie-huashuimu/picture_2.jpg\" alt=\"1\"></p>\n<a id=\"more\"></a>\n<p><img src=\"/2016/03/16/movie-huashuimu/picture_3.jpg\" alt=\"2\"></p>\n<h2 id=\"花水木\"><a href=\"# 花水木\" class=\"headerlink\" title=\"花水木\"></a>花水木 </h2><p> 花水木的花语是感谢、回礼。</p>\n<p><img src=\"/2016/03/16/movie-huashuimu/picture_1.jpg\" alt=\"3\"></p>\n<h2 id=\"【花水木】\"><a href=\"#【花水木】\" class=\"headerlink\" title=\"【花水木】\"></a>【花水木】</h2><p>貌似好的电影总是需要有和它相配的音乐</p>\n<p><a href=\"http://music.163.com/#/outchain/2/33471935/\">网易云音乐 - 花水木</a></p>\n<p>电影的画面配上舒服的音乐，简直棒极了。刚开始看的时候就是被音乐吸引的。</p>\n<h2 id=\"她和他\"><a href=\"# 她和他\" class=\"headerlink\" title=\"她和他\"></a>她和他 </h2><p> 新垣结衣，当初的女神，出演过很多部日系纯爱片，真的好漂亮有木有哇。<br>生田斗真，第一眼看到这个男主，让我想到了我的一个初中的死党，真的好像。当然，比我死党要帅。</p>\n<p><img src=\"/2016/03/16/movie-huashuimu/picture_4.jpg\" alt=\"4\"></p>\n<p><img src=\"/2016/03/16/movie-huashuimu/picture_5.jpg\" alt=\"5\"></p>\n<h2 id=\"十年前的相遇，十年后的重逢\"><a href=\"# 十年前的相遇，十年后的重逢\" class=\"headerlink\" title=\"十年前的相遇，十年后的重逢\"></a>十年前的相遇，十年后的重逢 </h2><p>1996 年，北海道道东。因一次不容错过的考试，美丽的女孩平泽纱枝邂逅<br> 了其他高中的同级生木内康平。康平的父亲是个渔夫，他一直帮父亲打渔，<br>虽然自己无意进学，他却鼓励的纱枝去追逐梦想。在他的鼓励下，一度放弃 <br> 的纱织最终考入了理想的大学。她来到东京，康平则留在北海道，两人展开 <br> 相隔两地的远距离恋爱，十年三国四地。</p>\n<p><img src=\"/2016/03/16/movie-huashuimu/picture_8.jpg\" alt=\"6\"></p>\n<p><img src=\"/2016/03/16/movie-huashuimu/picture_7.jpg\" alt=\"7\"></p>\n<p>当然，最终在仁慈的导演手中，两人最终走在了一起。电影是美好的，转了一个圈，又回到了原点。</p>\n<p>在电影的结尾，仰头望着那棵伴随纱枝成长的花水木，镜头顺着纱枝的视线，游离了多时康平也终于回到了视线之中。</p>\n<p>故事淡淡的开始，淡淡的结束，留下的只是那棵老树，那场邂逅。</p>\n<p>貌似大多数感情都是这样，爱情或是友情。也许是从某次的不期而遇，情窦初开，开始了懵懵懂懂的爱情，然后去追寻自己的梦想，一些失去一些懂得，渐渐的明白自己需要什么，兜兜转转，有的人回到了最初的起点，有的人可能永远都不会在回来了。</p>\n<h2 id=\"【后来】\"><a href=\"#【后来】\" class=\"headerlink\" title=\"【后来】\"></a>【后来】</h2><p>电影和奶茶的【后来】是两种不一样的结局。好好的爱自己，时间会给你答案。</p>\n<p><img src=\"/2016/03/16/movie-huashuimu/picture_2.jpg\" alt=\"8\"></p>\n","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"优秀来源于分享","link_list":[{"name":"JerryC","link":"https://jerryc.me/","avatar":"https://jerryc.me/image/avatar.png","descr":"博客主题作者"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"<p><img src=\"/2016/03/16/movie-huashuimu/picture_2.jpg\" alt=\"1\"></p>","more":"<p><img src=\"/2016/03/16/movie-huashuimu/picture_3.jpg\" alt=\"2\"></p>\n<h2 id=\"花水木\"><a href=\"#花水木\" class=\"headerlink\" title=\"花水木\"></a>花水木</h2><p>花水木的花语是感谢、回礼。</p>\n<p><img src=\"/2016/03/16/movie-huashuimu/picture_1.jpg\" alt=\"3\"></p>\n<h2 id=\"【花水木】\"><a href=\"#【花水木】\" class=\"headerlink\" title=\"【花水木】\"></a>【花水木】</h2><p>貌似好的电影总是需要有和它相配的音乐</p>\n<p><a href=\"http://music.163.com/#/outchain/2/33471935/\">网易云音乐-花水木</a></p>\n<p>电影的画面配上舒服的音乐，简直棒极了。刚开始看的时候就是被音乐吸引的。</p>\n<h2 id=\"她和他\"><a href=\"#她和他\" class=\"headerlink\" title=\"她和他\"></a>她和他</h2><p>新垣结衣，当初的女神，出演过很多部日系纯爱片，真的好漂亮有木有哇。<br>生田斗真，第一眼看到这个男主，让我想到了我的一个初中的死党，真的好像。当然，比我死党要帅。</p>\n<p><img src=\"/2016/03/16/movie-huashuimu/picture_4.jpg\" alt=\"4\"></p>\n<p><img src=\"/2016/03/16/movie-huashuimu/picture_5.jpg\" alt=\"5\"></p>\n<h2 id=\"十年前的相遇，十年后的重逢\"><a href=\"#十年前的相遇，十年后的重逢\" class=\"headerlink\" title=\"十年前的相遇，十年后的重逢\"></a>十年前的相遇，十年后的重逢</h2><p>1996年，北海道道东。因一次不容错过的考试，美丽的女孩平泽纱枝邂逅<br>了其他高中的同级生木内康平。康平的父亲是个渔夫，他一直帮父亲打渔，<br>虽然自己无意进学，他却鼓励的纱枝去追逐梦想。在他的鼓励下，一度放弃<br>的纱织最终考入了理想的大学。她来到东京，康平则留在北海道，两人展开<br>相隔两地的远距离恋爱，十年三国四地。</p>\n<p><img src=\"/2016/03/16/movie-huashuimu/picture_8.jpg\" alt=\"6\"></p>\n<p><img src=\"/2016/03/16/movie-huashuimu/picture_7.jpg\" alt=\"7\"></p>\n<p>当然，最终在仁慈的导演手中，两人最终走在了一起。电影是美好的，转了一个圈，又回到了原点。</p>\n<p>在电影的结尾，仰头望着那棵伴随纱枝成长的花水木，镜头顺着纱枝的视线，游离了多时康平也终于回到了视线之中。</p>\n<p>故事淡淡的开始，淡淡的结束，留下的只是那棵老树，那场邂逅。</p>\n<p>貌似大多数感情都是这样，爱情或是友情。也许是从某次的不期而遇，情窦初开，开始了懵懵懂懂的爱情，然后去追寻自己的梦想，一些失去一些懂得，渐渐的明白自己需要什么，兜兜转转，有的人回到了最初的起点，有的人可能永远都不会在回来了。</p>\n<h2 id=\"【后来】\"><a href=\"#【后来】\" class=\"headerlink\" title=\"【后来】\"></a>【后来】</h2><p>电影和奶茶的【后来】是两种不一样的结局。好好的爱自己，时间会给你答案。</p>\n<p><img src=\"/2016/03/16/movie-huashuimu/picture_2.jpg\" alt=\"8\"></p>"},{"title":"MySQL 主从复制 -Could not initialize master info structure","date":"2016-06-18T06:18:07.000Z","_content":"\n 最近开始摸索 MySQL 主从复制，在测试环境进行了相关测试，也遇到了不少的坑。如在从库设置同步的时候，报如下错误：\n\n> ERROR 1201 (HY000): Could not initialize master info structure .\n\n出现这个错误的原因是因为从库之前已经做过主从复制,所以需要先停止从库，再进行从库同步设置。\n\n<!-- more -->\n\n具体的解决方法如下：\n\n```\nmysql> change master to master_host='192.168.1.51', master_user='replslave', master_password='replslave', master_log_file='mysql-bin-000002',master_log_pos=168;   \nERROR 1201 (HY000): Could not initialize master info structure; more error messa  \nges can be found in the MySQL error log \nmysql> stop slave;\nQuery OK, 0 rows affected, 1 warning (0.00 sec) \nmysql> reset slave;  \nQuery OK, 0 rows affected (0.00 sec) \nmysql> change master to master_host='192.168.1.51', master_user='replslave', master_password='replslave', master_log_file='mysql-bin-000002',master_log_pos=168; \nQuery OK, 0 rows affected (0.11 sec)  \n```\n\n---\n\nHappy Coding.\n\n","source":"_posts/mysql-master-replication-series-0.md","raw":"---\ntitle: MySQL主从复制-Could not initialize master info structure\n\ndate: 2016-06-18 14:18:07\ncategories: mysql\ntags: [mysql , 运维]\n---\n\n 最近开始摸索 MySQL 主从复制，在测试环境进行了相关测试，也遇到了不少的坑。如在从库设置同步的时候，报如下错误：\n\n> ERROR 1201 (HY000): Could not initialize master info structure .\n\n出现这个错误的原因是因为从库之前已经做过主从复制,所以需要先停止从库，再进行从库同步设置。\n\n<!-- more -->\n\n具体的解决方法如下：\n\n```\nmysql> change master to master_host='192.168.1.51', master_user='replslave', master_password='replslave', master_log_file='mysql-bin-000002',master_log_pos=168;   \nERROR 1201 (HY000): Could not initialize master info structure; more error messa  \nges can be found in the MySQL error log \nmysql> stop slave;\nQuery OK, 0 rows affected, 1 warning (0.00 sec) \nmysql> reset slave;  \nQuery OK, 0 rows affected (0.00 sec) \nmysql> change master to master_host='192.168.1.51', master_user='replslave', master_password='replslave', master_log_file='mysql-bin-000002',master_log_pos=168; \nQuery OK, 0 rows affected (0.11 sec)  \n```\n\n---\n\nHappy Coding.\n\n","slug":"mysql-master-replication-series-0","published":1,"updated":"2020-11-22T13:11:32.806Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjsw1deo000ma21ub0o299vl","content":"<p> 最近开始摸索 MySQL 主从复制，在测试环境进行了相关测试，也遇到了不少的坑。如在从库设置同步的时候，报如下错误：</p>\n<blockquote>\n<p>ERROR 1201 (HY000): Could not initialize master info structure .</p>\n</blockquote>\n<p> 出现这个错误的原因是因为从库之前已经做过主从复制, 所以需要先停止从库，再进行从库同步设置。</p>\n<a id=\"more\"></a>\n<p> 具体的解决方法如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; change master to master_host&#x3D;&#39;192.168.1.51&#39;, master_user&#x3D;&#39;replslave&#39;, master_password&#x3D;&#39;replslave&#39;, master_log_file&#x3D;&#39;mysql-bin-000002&#39;,master_log_pos&#x3D;168;   </span><br><span class=\"line\">ERROR 1201 (HY000): Could not initialize master info structure; more error messa  </span><br><span class=\"line\">ges can be found in the MySQL error log </span><br><span class=\"line\">mysql&gt; stop slave;</span><br><span class=\"line\">Query OK, 0 rows affected, 1 warning (0.00 sec) </span><br><span class=\"line\">mysql&gt; reset slave;  </span><br><span class=\"line\">Query OK, 0 rows affected (0.00 sec) </span><br><span class=\"line\">mysql&gt; change master to master_host&#x3D;&#39;192.168.1.51&#39;, master_user&#x3D;&#39;replslave&#39;, master_password&#x3D;&#39;replslave&#39;, master_log_file&#x3D;&#39;mysql-bin-000002&#39;,master_log_pos&#x3D;168; </span><br><span class=\"line\">Query OK, 0 rows affected (0.11 sec)  </span><br></pre></td></tr></table></figure>\n<hr>\n<p>Happy Coding.</p>\n","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"优秀来源于分享","link_list":[{"name":"JerryC","link":"https://jerryc.me/","avatar":"https://jerryc.me/image/avatar.png","descr":"博客主题作者"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"<p> 最近开始摸索 MySQL 主从复制，在测试环境进行了相关测试，也遇到了不少的坑。如在从库设置同步的时候，报如下错误：</p>\n<blockquote>\n<p>ERROR 1201 (HY000): Could not initialize master info structure .</p>\n</blockquote>\n<p>出现这个错误的原因是因为从库之前已经做过主从复制,所以需要先停止从库，再进行从库同步设置。</p>","more":"<p>具体的解决方法如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; change master to master_host&#x3D;&#39;192.168.1.51&#39;, master_user&#x3D;&#39;replslave&#39;, master_password&#x3D;&#39;replslave&#39;, master_log_file&#x3D;&#39;mysql-bin-000002&#39;,master_log_pos&#x3D;168;   </span><br><span class=\"line\">ERROR 1201 (HY000): Could not initialize master info structure; more error messa  </span><br><span class=\"line\">ges can be found in the MySQL error log </span><br><span class=\"line\">mysql&gt; stop slave;</span><br><span class=\"line\">Query OK, 0 rows affected, 1 warning (0.00 sec) </span><br><span class=\"line\">mysql&gt; reset slave;  </span><br><span class=\"line\">Query OK, 0 rows affected (0.00 sec) </span><br><span class=\"line\">mysql&gt; change master to master_host&#x3D;&#39;192.168.1.51&#39;, master_user&#x3D;&#39;replslave&#39;, master_password&#x3D;&#39;replslave&#39;, master_log_file&#x3D;&#39;mysql-bin-000002&#39;,master_log_pos&#x3D;168; </span><br><span class=\"line\">Query OK, 0 rows affected (0.11 sec)  </span><br></pre></td></tr></table></figure>\n<hr>\n<p>Happy Coding.</p>"},{"title":"开启 nginx 和 php-fpm 的 status 状态监控","date":"2017-04-30T15:53:10.000Z","_content":"\n\n> 本文基于ubuntu16.04 php7.0\n\n最近服务器的 php-fpm 进程偶尔会异常飙升，于是想在 zabbix 上配置监控服务器的 nginx 和 php-fpm 的状态。前提是需要开启 nginx 和 php-fpm 的 status 功能。\n\n# 启用 nginx status 配置\n\n- 配置 server ，一般我们在默认的主机下配置:\n\n```\nserver {\n        #listen 80;\n        listen 80 default_server;\n        root /var/www/html;\n        index index.php index.html index.htm;\n\n        server_name 127.0.0.1;\n\n        location ~ \\.php$ {\n                include snippets/fastcgi-php.conf;\n                fastcgi_pass unix:/run/php/php7.0-fpm.sock;\n        }\n        location /ngx_status {\n                allow 127.0.0.1;\n                deny all;\n                stub_status on;\n                access_log off;\n        }\n}\n```\n<!-- more -->\n\n- 重启 nginx，测试访问\n\nsudo /etc/init.d/nginx restart \n\n> curl http://127.0.0.1/ngx_status\n\n![1](nginx-phpfpm-status/nginx_status.png)\n\n- nginx status 参数说明\n\n> active connections – 活跃的连接数量\n> server accepts handled requests — 总共处理了4个连接 , 成功创建4次握手, 总共处理了4个请求\n> reading — 读取客户端的连接数.\n> writing — 响应数据到客户端的数量\n>waiting — 开启 keep-alive 的情况下,这个值等于 active – (reading+writing), 意思就是 Nginx 已经处理完正在等候下一次请求指令的驻留连接.\n\n\n---\n\n# 启用 php-fpm status 配置\n\n- 修改 php-fpm 配置，将 status 打开\n\nvim /etc/php/7.0/fpm/pool.d/www.conf\n\n> pm.status_path = /fpm_status\n\n- 配置 server \n\n```\nserver {\n        #listen 80;\n        listen 80 default_server;\n        root /var/www/html;\n        index index.php index.html index.htm;\n\n        server_name 127.0.0.1;\n\n        location ~ \\.php$ {\n                include snippets/fastcgi-php.conf;\n                fastcgi_pass unix:/run/php/php7.0-fpm.sock;\n        }\n        location ~ /fpm_status$ {\n                allow 127.0.0.1;\n                deny all;\n                fastcgi_param SCRIPT_FILENAME $fastcgi_script_name;\n                include fastcgi_params;\n                fastcgi_pass unix:/run/php/php7.0-fpm.sock;\n        }\n}\n```\n\n- 重启 php-fpm 和 nginx，测试访问\n\n> curl http://127.0.0.1/fpm_status\n\n![2](nginx-phpfpm-status/php_fpm_status.png)\n\n- php-fpm 参数说明\n\n> pool #fpm池名称,大多数为www\n> process manager #进程管理方式dynamic或者static\n> start time #启动日志,如果reload了fpm，时间会更新\n> start since #运行时间\n> accepted conn #当前池接受的请求数\n> listen queue #请求等待队列,如果这个值不为0,那么需要增加FPM的进程数量\n> max listen queue #请求等待队列最高的数量\n> listen queue len #socket等待队列长度\n> idle processes #空闲进程数量\n> active processes #活跃进程数量 \n> total processes #总进程数量 \n> max active processes #最大的活跃进程数量（FPM启动开始计算）\n> max children reached #程最大数量限制的次数，如果这个数量不为0，那说明你的最大进程数量过小,可以适当调整。\n\n\nHappy Coding.\n\n\n\n","source":"_posts/nginx-phpfpm-status.md","raw":"---\ntitle: 开启nginx和php-fpm的status状态监控\ndate: 2017-04-30 23:53:10\ncategories: Linux\ntags: [Linux , nginx , php-fpm]\n---\n\n\n> 本文基于ubuntu16.04 php7.0\n\n最近服务器的 php-fpm 进程偶尔会异常飙升，于是想在 zabbix 上配置监控服务器的 nginx 和 php-fpm 的状态。前提是需要开启 nginx 和 php-fpm 的 status 功能。\n\n# 启用 nginx status 配置\n\n- 配置 server ，一般我们在默认的主机下配置:\n\n```\nserver {\n        #listen 80;\n        listen 80 default_server;\n        root /var/www/html;\n        index index.php index.html index.htm;\n\n        server_name 127.0.0.1;\n\n        location ~ \\.php$ {\n                include snippets/fastcgi-php.conf;\n                fastcgi_pass unix:/run/php/php7.0-fpm.sock;\n        }\n        location /ngx_status {\n                allow 127.0.0.1;\n                deny all;\n                stub_status on;\n                access_log off;\n        }\n}\n```\n<!-- more -->\n\n- 重启 nginx，测试访问\n\nsudo /etc/init.d/nginx restart \n\n> curl http://127.0.0.1/ngx_status\n\n![1](nginx-phpfpm-status/nginx_status.png)\n\n- nginx status 参数说明\n\n> active connections – 活跃的连接数量\n> server accepts handled requests — 总共处理了4个连接 , 成功创建4次握手, 总共处理了4个请求\n> reading — 读取客户端的连接数.\n> writing — 响应数据到客户端的数量\n>waiting — 开启 keep-alive 的情况下,这个值等于 active – (reading+writing), 意思就是 Nginx 已经处理完正在等候下一次请求指令的驻留连接.\n\n\n---\n\n# 启用 php-fpm status 配置\n\n- 修改 php-fpm 配置，将 status 打开\n\nvim /etc/php/7.0/fpm/pool.d/www.conf\n\n> pm.status_path = /fpm_status\n\n- 配置 server \n\n```\nserver {\n        #listen 80;\n        listen 80 default_server;\n        root /var/www/html;\n        index index.php index.html index.htm;\n\n        server_name 127.0.0.1;\n\n        location ~ \\.php$ {\n                include snippets/fastcgi-php.conf;\n                fastcgi_pass unix:/run/php/php7.0-fpm.sock;\n        }\n        location ~ /fpm_status$ {\n                allow 127.0.0.1;\n                deny all;\n                fastcgi_param SCRIPT_FILENAME $fastcgi_script_name;\n                include fastcgi_params;\n                fastcgi_pass unix:/run/php/php7.0-fpm.sock;\n        }\n}\n```\n\n- 重启 php-fpm 和 nginx，测试访问\n\n> curl http://127.0.0.1/fpm_status\n\n![2](nginx-phpfpm-status/php_fpm_status.png)\n\n- php-fpm 参数说明\n\n> pool #fpm池名称,大多数为www\n> process manager #进程管理方式dynamic或者static\n> start time #启动日志,如果reload了fpm，时间会更新\n> start since #运行时间\n> accepted conn #当前池接受的请求数\n> listen queue #请求等待队列,如果这个值不为0,那么需要增加FPM的进程数量\n> max listen queue #请求等待队列最高的数量\n> listen queue len #socket等待队列长度\n> idle processes #空闲进程数量\n> active processes #活跃进程数量 \n> total processes #总进程数量 \n> max active processes #最大的活跃进程数量（FPM启动开始计算）\n> max children reached #程最大数量限制的次数，如果这个数量不为0，那说明你的最大进程数量过小,可以适当调整。\n\n\nHappy Coding.\n\n\n\n","slug":"nginx-phpfpm-status","published":1,"updated":"2020-11-22T13:11:13.323Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjsw1der000na21u396gdkz5","content":"<blockquote>\n<p> 本文基于 ubuntu16.04 php7.0</p>\n</blockquote>\n<p> 最近服务器的 php-fpm 进程偶尔会异常飙升，于是想在 zabbix 上配置监控服务器的 nginx 和 php-fpm 的状态。前提是需要开启 nginx 和 php-fpm 的 status 功能。</p>\n<h1 id=\"启用 -nginx-status- 配置\"><a href=\"# 启用 -nginx-status- 配置\" class=\"headerlink\" title=\"启用 nginx status 配置\"></a> 启用 nginx status 配置 </h1><ul>\n<li> 配置 server ，一般我们在默认的主机下配置:</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">        #listen 80;</span><br><span class=\"line\">        listen 80 default_server;</span><br><span class=\"line\">        root &#x2F;var&#x2F;www&#x2F;html;</span><br><span class=\"line\">        index index.php index.html index.htm;</span><br><span class=\"line\"></span><br><span class=\"line\">        server_name 127.0.0.1;</span><br><span class=\"line\"></span><br><span class=\"line\">        location ~ \\.php$ &#123;</span><br><span class=\"line\">                include snippets&#x2F;fastcgi-php.conf;</span><br><span class=\"line\">                fastcgi_pass unix:&#x2F;run&#x2F;php&#x2F;php7.0-fpm.sock;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        location &#x2F;ngx_status &#123;</span><br><span class=\"line\">                allow 127.0.0.1;</span><br><span class=\"line\">                deny all;</span><br><span class=\"line\">                stub_status on;</span><br><span class=\"line\">                access_log off;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<ul>\n<li> 重启 nginx，测试访问 </li>\n</ul>\n<p>sudo /etc/init.d/nginx restart </p>\n<blockquote>\n<p>curl <a href=\"http://127.0.0.1/ngx_status\">http://127.0.0.1/ngx_status</a></p>\n</blockquote>\n<p><img src=\"/2017/04/30/nginx-phpfpm-status/nginx_status.png\" alt=\"1\"></p>\n<ul>\n<li>nginx status 参数说明 </li>\n</ul>\n<blockquote>\n<p>active connections – 活跃的连接数量 <br>server accepts handled requests — 总共处理了 4 个连接 , 成功创建 4 次握手, 总共处理了 4 个请求 <br>reading — 读取客户端的连接数.<br>writing — 响应数据到客户端的数量 <br>waiting — 开启 keep-alive 的情况下, 这个值等于 active – (reading+writing), 意思就是 Nginx 已经处理完正在等候下一次请求指令的驻留连接.</p>\n</blockquote>\n<hr>\n<h1 id=\"启用 -php-fpm-status- 配置\"><a href=\"# 启用 -php-fpm-status- 配置\" class=\"headerlink\" title=\"启用 php-fpm status 配置\"></a> 启用 php-fpm status 配置 </h1><ul>\n<li> 修改 php-fpm 配置，将 status 打开 </li>\n</ul>\n<p>vim /etc/php/7.0/fpm/pool.d/<a href=\"http://www.conf\">www.conf</a></p>\n<blockquote>\n<p>pm.status_path = /fpm_status</p>\n</blockquote>\n<ul>\n<li> 配置 server </li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">        #listen 80;</span><br><span class=\"line\">        listen 80 default_server;</span><br><span class=\"line\">        root &#x2F;var&#x2F;www&#x2F;html;</span><br><span class=\"line\">        index index.php index.html index.htm;</span><br><span class=\"line\"></span><br><span class=\"line\">        server_name 127.0.0.1;</span><br><span class=\"line\"></span><br><span class=\"line\">        location ~ \\.php$ &#123;</span><br><span class=\"line\">                include snippets&#x2F;fastcgi-php.conf;</span><br><span class=\"line\">                fastcgi_pass unix:&#x2F;run&#x2F;php&#x2F;php7.0-fpm.sock;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        location ~ &#x2F;fpm_status$ &#123;</span><br><span class=\"line\">                allow 127.0.0.1;</span><br><span class=\"line\">                deny all;</span><br><span class=\"line\">                fastcgi_param SCRIPT_FILENAME $fastcgi_script_name;</span><br><span class=\"line\">                include fastcgi_params;</span><br><span class=\"line\">                fastcgi_pass unix:&#x2F;run&#x2F;php&#x2F;php7.0-fpm.sock;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li> 重启 php-fpm 和 nginx，测试访问 </li>\n</ul>\n<blockquote>\n<p>curl <a href=\"http://127.0.0.1/fpm_status\">http://127.0.0.1/fpm_status</a></p>\n</blockquote>\n<p><img src=\"/2017/04/30/nginx-phpfpm-status/php_fpm_status.png\" alt=\"2\"></p>\n<ul>\n<li>php-fpm 参数说明 </li>\n</ul>\n<blockquote>\n<p>pool #fpm 池名称, 大多数为 www<br>process manager #进程管理方式 dynamic 或者 static<br>start time #启动日志, 如果 reload 了 fpm，时间会更新 <br>start since #运行时间 <br>accepted conn #当前池接受的请求数 <br>listen queue #请求等待队列, 如果这个值不为 0, 那么需要增加 FPM 的进程数量 <br>max listen queue #请求等待队列最高的数量 <br>listen queue len #socket 等待队列长度 <br>idle processes #空闲进程数量 <br>active processes #活跃进程数量 <br>total processes #总进程数量 <br>max active processes #最大的活跃进程数量（FPM 启动开始计算）<br>max children reached #程最大数量限制的次数，如果这个数量不为 0，那说明你的最大进程数量过小, 可以适当调整。</p>\n</blockquote>\n<p>Happy Coding.</p>\n","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"优秀来源于分享","link_list":[{"name":"JerryC","link":"https://jerryc.me/","avatar":"https://jerryc.me/image/avatar.png","descr":"博客主题作者"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"<blockquote>\n<p>本文基于ubuntu16.04 php7.0</p>\n</blockquote>\n<p>最近服务器的 php-fpm 进程偶尔会异常飙升，于是想在 zabbix 上配置监控服务器的 nginx 和 php-fpm 的状态。前提是需要开启 nginx 和 php-fpm 的 status 功能。</p>\n<h1 id=\"启用-nginx-status-配置\"><a href=\"#启用-nginx-status-配置\" class=\"headerlink\" title=\"启用 nginx status 配置\"></a>启用 nginx status 配置</h1><ul>\n<li>配置 server ，一般我们在默认的主机下配置:</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">        #listen 80;</span><br><span class=\"line\">        listen 80 default_server;</span><br><span class=\"line\">        root &#x2F;var&#x2F;www&#x2F;html;</span><br><span class=\"line\">        index index.php index.html index.htm;</span><br><span class=\"line\"></span><br><span class=\"line\">        server_name 127.0.0.1;</span><br><span class=\"line\"></span><br><span class=\"line\">        location ~ \\.php$ &#123;</span><br><span class=\"line\">                include snippets&#x2F;fastcgi-php.conf;</span><br><span class=\"line\">                fastcgi_pass unix:&#x2F;run&#x2F;php&#x2F;php7.0-fpm.sock;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        location &#x2F;ngx_status &#123;</span><br><span class=\"line\">                allow 127.0.0.1;</span><br><span class=\"line\">                deny all;</span><br><span class=\"line\">                stub_status on;</span><br><span class=\"line\">                access_log off;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","more":"<ul>\n<li>重启 nginx，测试访问</li>\n</ul>\n<p>sudo /etc/init.d/nginx restart </p>\n<blockquote>\n<p>curl <a href=\"http://127.0.0.1/ngx_status\">http://127.0.0.1/ngx_status</a></p>\n</blockquote>\n<p><img src=\"/2017/04/30/nginx-phpfpm-status/nginx_status.png\" alt=\"1\"></p>\n<ul>\n<li>nginx status 参数说明</li>\n</ul>\n<blockquote>\n<p>active connections – 活跃的连接数量<br>server accepts handled requests — 总共处理了4个连接 , 成功创建4次握手, 总共处理了4个请求<br>reading — 读取客户端的连接数.<br>writing — 响应数据到客户端的数量<br>waiting — 开启 keep-alive 的情况下,这个值等于 active – (reading+writing), 意思就是 Nginx 已经处理完正在等候下一次请求指令的驻留连接.</p>\n</blockquote>\n<hr>\n<h1 id=\"启用-php-fpm-status-配置\"><a href=\"#启用-php-fpm-status-配置\" class=\"headerlink\" title=\"启用 php-fpm status 配置\"></a>启用 php-fpm status 配置</h1><ul>\n<li>修改 php-fpm 配置，将 status 打开</li>\n</ul>\n<p>vim /etc/php/7.0/fpm/pool.d/<a href=\"http://www.conf\">www.conf</a></p>\n<blockquote>\n<p>pm.status_path = /fpm_status</p>\n</blockquote>\n<ul>\n<li>配置 server </li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">        #listen 80;</span><br><span class=\"line\">        listen 80 default_server;</span><br><span class=\"line\">        root &#x2F;var&#x2F;www&#x2F;html;</span><br><span class=\"line\">        index index.php index.html index.htm;</span><br><span class=\"line\"></span><br><span class=\"line\">        server_name 127.0.0.1;</span><br><span class=\"line\"></span><br><span class=\"line\">        location ~ \\.php$ &#123;</span><br><span class=\"line\">                include snippets&#x2F;fastcgi-php.conf;</span><br><span class=\"line\">                fastcgi_pass unix:&#x2F;run&#x2F;php&#x2F;php7.0-fpm.sock;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        location ~ &#x2F;fpm_status$ &#123;</span><br><span class=\"line\">                allow 127.0.0.1;</span><br><span class=\"line\">                deny all;</span><br><span class=\"line\">                fastcgi_param SCRIPT_FILENAME $fastcgi_script_name;</span><br><span class=\"line\">                include fastcgi_params;</span><br><span class=\"line\">                fastcgi_pass unix:&#x2F;run&#x2F;php&#x2F;php7.0-fpm.sock;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>重启 php-fpm 和 nginx，测试访问</li>\n</ul>\n<blockquote>\n<p>curl <a href=\"http://127.0.0.1/fpm_status\">http://127.0.0.1/fpm_status</a></p>\n</blockquote>\n<p><img src=\"/2017/04/30/nginx-phpfpm-status/php_fpm_status.png\" alt=\"2\"></p>\n<ul>\n<li>php-fpm 参数说明</li>\n</ul>\n<blockquote>\n<p>pool #fpm池名称,大多数为www<br>process manager #进程管理方式dynamic或者static<br>start time #启动日志,如果reload了fpm，时间会更新<br>start since #运行时间<br>accepted conn #当前池接受的请求数<br>listen queue #请求等待队列,如果这个值不为0,那么需要增加FPM的进程数量<br>max listen queue #请求等待队列最高的数量<br>listen queue len #socket等待队列长度<br>idle processes #空闲进程数量<br>active processes #活跃进程数量<br>total processes #总进程数量<br>max active processes #最大的活跃进程数量（FPM启动开始计算）<br>max children reached #程最大数量限制的次数，如果这个数量不为0，那说明你的最大进程数量过小,可以适当调整。</p>\n</blockquote>\n<p>Happy Coding.</p>"},{"title":"MySQL- 出现 MySQL server has gone away 原因和解决方法","date":"2020-12-08T14:53:27.000Z","_content":"\n# 可能的原因\n- MySQL 服务宕机\n- MySQL 连接被主动 kill 掉\n- MySQL 连接超时\n- SQL 超长，超出 max_allowed_packet 限制\n\n# 具体情况分析和处理\n\n## MySQL 服务宕机\n可能是异常情况，访问过程中数据库宕机或重启了，期间的数据库访问请求会出现错误。\n此种情况可以查看对应时候的 MySQL 相关日志，或者查询 MySQL 运行时间。可通过运行时间和日志，判断该时间是否有服务中断。\n```\nmysql> show global status like 'uptime';\n+---------------+----------+\n| Variable_name | Value    |\n+---------------+----------+\n| Uptime        | 23948658 |\n+---------------+----------+\n```\n\n## MySQL 连接被主动 kill 掉\n部分系统会配置一些连接数过多等情况下，脚本主动 kill 掉相关数据库请求进程，或者可能 DBA 等处理问题时手动 kill 掉，此种情况下也会出现报错。\n```\nmysql> show global status like 'com_kill';\n+---------------+-------+\n| Variable_name | Value |\n+---------------+-------+\n| Com_kill      | 100   |\n+---------------+-------+\n```\n\n## MySQL 连接超时\nMySQL 的连接开启后，很久没有发起新的查询请求，达到了 server 端的超时时间，被 server 端强制关闭连接。此时若该连接再次发起请求时，则会报错 MySQL server has gone away 。此种情况比较常见，一般一个执行时间很长的脚本，开启连接查询部分数据后，进行计算或者请求第三方，在进行数据写入，写入时超时。\n可以通过如下命令查看当前 MySQL 的超时时间，\n```\nmysql> show global variables like 'wait_timeout';\n+---------------+-------+\n| Variable_name | Value |\n+---------------+-------+\n| wait_timeout  | 28800 |\n+---------------+-------+\n```\n\n可以通过如下命令临时修改超时时间，\n```\nmysql> set global wait_timeout = 60 * 60 * 8;\n```\n如要长期生效，则需要修改数据库配置文件，并重启 MySQL 服务。\n```\nwait_timeout = 28800\ninteractive_timeout = 28800\n```\n\n## SQL 超长，超出 max_allowed_packet 限制\nMySQL 会限制 server 段接收的数据包的大小，有时候大的插入和更新发送的数据包大小超过 max_allowed_packet 的限制，服务端也会报错，导致写入或者更新失败。\n\n```\nmysql> show global variables like '%max_allowed_packet%';\n+--------------------------+------------+\n| Variable_name            | Value      |\n+--------------------------+------------+\n| max_allowed_packet       | 1048576   |\n+--------------------------+------------+\n```\n\n可以通过如下命令临时修改，\n```\nmysql> set global max_allowed_packet = 4 * 1024 * 1024;\n```\n\n如要长期生效，则需要修改数据库配置文件，并重启 MySQL 服务。\n```\nmax_allowed_packet = 4M\n```\n\n","source":"_posts/note-mysql-server-has-gone-away.md","raw":"---\ntitle: MySQL-出现 MySQL server has gone away 原因和解决方法\ndate: 2020-12-08 22:53:27\ncategories: MySQL\ntags: [MySQL]\n---\n\n# 可能的原因\n- MySQL 服务宕机\n- MySQL 连接被主动 kill 掉\n- MySQL 连接超时\n- SQL 超长，超出 max_allowed_packet 限制\n\n# 具体情况分析和处理\n\n## MySQL 服务宕机\n可能是异常情况，访问过程中数据库宕机或重启了，期间的数据库访问请求会出现错误。\n此种情况可以查看对应时候的 MySQL 相关日志，或者查询 MySQL 运行时间。可通过运行时间和日志，判断该时间是否有服务中断。\n```\nmysql> show global status like 'uptime';\n+---------------+----------+\n| Variable_name | Value    |\n+---------------+----------+\n| Uptime        | 23948658 |\n+---------------+----------+\n```\n\n## MySQL 连接被主动 kill 掉\n部分系统会配置一些连接数过多等情况下，脚本主动 kill 掉相关数据库请求进程，或者可能 DBA 等处理问题时手动 kill 掉，此种情况下也会出现报错。\n```\nmysql> show global status like 'com_kill';\n+---------------+-------+\n| Variable_name | Value |\n+---------------+-------+\n| Com_kill      | 100   |\n+---------------+-------+\n```\n\n## MySQL 连接超时\nMySQL 的连接开启后，很久没有发起新的查询请求，达到了 server 端的超时时间，被 server 端强制关闭连接。此时若该连接再次发起请求时，则会报错 MySQL server has gone away 。此种情况比较常见，一般一个执行时间很长的脚本，开启连接查询部分数据后，进行计算或者请求第三方，在进行数据写入，写入时超时。\n可以通过如下命令查看当前 MySQL 的超时时间，\n```\nmysql> show global variables like 'wait_timeout';\n+---------------+-------+\n| Variable_name | Value |\n+---------------+-------+\n| wait_timeout  | 28800 |\n+---------------+-------+\n```\n\n可以通过如下命令临时修改超时时间，\n```\nmysql> set global wait_timeout = 60 * 60 * 8;\n```\n如要长期生效，则需要修改数据库配置文件，并重启 MySQL 服务。\n```\nwait_timeout = 28800\ninteractive_timeout = 28800\n```\n\n## SQL 超长，超出 max_allowed_packet 限制\nMySQL 会限制 server 段接收的数据包的大小，有时候大的插入和更新发送的数据包大小超过 max_allowed_packet 的限制，服务端也会报错，导致写入或者更新失败。\n\n```\nmysql> show global variables like '%max_allowed_packet%';\n+--------------------------+------------+\n| Variable_name            | Value      |\n+--------------------------+------------+\n| max_allowed_packet       | 1048576   |\n+--------------------------+------------+\n```\n\n可以通过如下命令临时修改，\n```\nmysql> set global max_allowed_packet = 4 * 1024 * 1024;\n```\n\n如要长期生效，则需要修改数据库配置文件，并重启 MySQL 服务。\n```\nmax_allowed_packet = 4M\n```\n\n","slug":"note-mysql-server-has-gone-away","published":1,"updated":"2020-12-08T15:05:43.749Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjsw1det000pa21u17av7vvl","content":"<h1 id=\"可能的原因\"><a href=\"# 可能的原因\" class=\"headerlink\" title=\"可能的原因\"></a>可能的原因</h1><ul>\n<li>MySQL 服务宕机</li>\n<li>MySQL 连接被主动 kill 掉</li>\n<li>MySQL 连接超时</li>\n<li>SQL 超长，超出 max_allowed_packet 限制</li>\n</ul>\n<h1 id=\"具体情况分析和处理\"><a href=\"# 具体情况分析和处理\" class=\"headerlink\" title=\"具体情况分析和处理\"></a>具体情况分析和处理 </h1><h2 id=\"MySQL- 服务宕机\"><a href=\"#MySQL- 服务宕机\" class=\"headerlink\" title=\"MySQL 服务宕机\"></a>MySQL 服务宕机</h2><p> 可能是异常情况，访问过程中数据库宕机或重启了，期间的数据库访问请求会出现错误。<br>此种情况可以查看对应时候的 MySQL 相关日志，或者查询 MySQL 运行时间。可通过运行时间和日志，判断该时间是否有服务中断。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; show global status like &#39;uptime&#39;;</span><br><span class=\"line\">+---------------+----------+</span><br><span class=\"line\">| Variable_name | Value    |</span><br><span class=\"line\">+---------------+----------+</span><br><span class=\"line\">| Uptime        | 23948658 |</span><br><span class=\"line\">+---------------+----------+</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"MySQL- 连接被主动 -kill- 掉\"><a href=\"#MySQL- 连接被主动 -kill- 掉\" class=\"headerlink\" title=\"MySQL 连接被主动 kill 掉\"></a>MySQL 连接被主动 kill 掉 </h2><p> 部分系统会配置一些连接数过多等情况下，脚本主动 kill 掉相关数据库请求进程，或者可能 DBA 等处理问题时手动 kill 掉，此种情况下也会出现报错。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; show global status like &#39;com_kill&#39;;</span><br><span class=\"line\">+---------------+-------+</span><br><span class=\"line\">| Variable_name | Value |</span><br><span class=\"line\">+---------------+-------+</span><br><span class=\"line\">| Com_kill      | 100   |</span><br><span class=\"line\">+---------------+-------+</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"MySQL- 连接超时\"><a href=\"#MySQL- 连接超时\" class=\"headerlink\" title=\"MySQL 连接超时\"></a>MySQL 连接超时 </h2><p>MySQL 的连接开启后，很久没有发起新的查询请求，达到了 server 端的超时时间，被 server 端强制关闭连接。此时若该连接再次发起请求时，则会报错 MySQL server has gone away 。此种情况比较常见，一般一个执行时间很长的脚本，开启连接查询部分数据后，进行计算或者请求第三方，在进行数据写入，写入时超时。<br> 可以通过如下命令查看当前 MySQL 的超时时间，<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; show global variables like &#39;wait_timeout&#39;;</span><br><span class=\"line\">+---------------+-------+</span><br><span class=\"line\">| Variable_name | Value |</span><br><span class=\"line\">+---------------+-------+</span><br><span class=\"line\">| wait_timeout  | 28800 |</span><br><span class=\"line\">+---------------+-------+</span><br></pre></td></tr></table></figure></p>\n<p>可以通过如下命令临时修改超时时间，<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; set global wait_timeout &#x3D; 60 * 60 * 8;</span><br></pre></td></tr></table></figure><br>如要长期生效，则需要修改数据库配置文件，并重启 MySQL 服务。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wait_timeout &#x3D; 28800</span><br><span class=\"line\">interactive_timeout &#x3D; 28800</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"SQL- 超长，超出 -max-allowed-packet- 限制\"><a href=\"#SQL- 超长，超出 -max-allowed-packet- 限制\" class=\"headerlink\" title=\"SQL 超长，超出 max_allowed_packet 限制\"></a>SQL 超长，超出 max_allowed_packet 限制</h2><p>MySQL 会限制 server 段接收的数据包的大小，有时候大的插入和更新发送的数据包大小超过 max_allowed_packet 的限制，服务端也会报错，导致写入或者更新失败。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; show global variables like &#39;%max_allowed_packet%&#39;;</span><br><span class=\"line\">+--------------------------+------------+</span><br><span class=\"line\">| Variable_name            | Value      |</span><br><span class=\"line\">+--------------------------+------------+</span><br><span class=\"line\">| max_allowed_packet       | 1048576   |</span><br><span class=\"line\">+--------------------------+------------+</span><br></pre></td></tr></table></figure>\n<p>可以通过如下命令临时修改，<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; set global max_allowed_packet &#x3D; 4 * 1024 * 1024;</span><br></pre></td></tr></table></figure></p>\n<p>如要长期生效，则需要修改数据库配置文件，并重启 MySQL 服务。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">max_allowed_packet &#x3D; 4M</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"优秀来源于分享","link_list":[{"name":"JerryC","link":"https://jerryc.me/","avatar":"https://jerryc.me/image/avatar.png","descr":"博客主题作者"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"","more":"<h1 id=\"可能的原因\"><a href=\"#可能的原因\" class=\"headerlink\" title=\"可能的原因\"></a>可能的原因</h1><ul>\n<li>MySQL 服务宕机</li>\n<li>MySQL 连接被主动 kill 掉</li>\n<li>MySQL 连接超时</li>\n<li>SQL 超长，超出 max_allowed_packet 限制</li>\n</ul>\n<h1 id=\"具体情况分析和处理\"><a href=\"#具体情况分析和处理\" class=\"headerlink\" title=\"具体情况分析和处理\"></a>具体情况分析和处理</h1><h2 id=\"MySQL-服务宕机\"><a href=\"#MySQL-服务宕机\" class=\"headerlink\" title=\"MySQL 服务宕机\"></a>MySQL 服务宕机</h2><p>可能是异常情况，访问过程中数据库宕机或重启了，期间的数据库访问请求会出现错误。<br>此种情况可以查看对应时候的 MySQL 相关日志，或者查询 MySQL 运行时间。可通过运行时间和日志，判断该时间是否有服务中断。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; show global status like &#39;uptime&#39;;</span><br><span class=\"line\">+---------------+----------+</span><br><span class=\"line\">| Variable_name | Value    |</span><br><span class=\"line\">+---------------+----------+</span><br><span class=\"line\">| Uptime        | 23948658 |</span><br><span class=\"line\">+---------------+----------+</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"MySQL-连接被主动-kill-掉\"><a href=\"#MySQL-连接被主动-kill-掉\" class=\"headerlink\" title=\"MySQL 连接被主动 kill 掉\"></a>MySQL 连接被主动 kill 掉</h2><p>部分系统会配置一些连接数过多等情况下，脚本主动 kill 掉相关数据库请求进程，或者可能 DBA 等处理问题时手动 kill 掉，此种情况下也会出现报错。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; show global status like &#39;com_kill&#39;;</span><br><span class=\"line\">+---------------+-------+</span><br><span class=\"line\">| Variable_name | Value |</span><br><span class=\"line\">+---------------+-------+</span><br><span class=\"line\">| Com_kill      | 100   |</span><br><span class=\"line\">+---------------+-------+</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"MySQL-连接超时\"><a href=\"#MySQL-连接超时\" class=\"headerlink\" title=\"MySQL 连接超时\"></a>MySQL 连接超时</h2><p>MySQL 的连接开启后，很久没有发起新的查询请求，达到了 server 端的超时时间，被 server 端强制关闭连接。此时若该连接再次发起请求时，则会报错 MySQL server has gone away 。此种情况比较常见，一般一个执行时间很长的脚本，开启连接查询部分数据后，进行计算或者请求第三方，在进行数据写入，写入时超时。<br>可以通过如下命令查看当前 MySQL 的超时时间，<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; show global variables like &#39;wait_timeout&#39;;</span><br><span class=\"line\">+---------------+-------+</span><br><span class=\"line\">| Variable_name | Value |</span><br><span class=\"line\">+---------------+-------+</span><br><span class=\"line\">| wait_timeout  | 28800 |</span><br><span class=\"line\">+---------------+-------+</span><br></pre></td></tr></table></figure></p>\n<p>可以通过如下命令临时修改超时时间，<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; set global wait_timeout &#x3D; 60 * 60 * 8;</span><br></pre></td></tr></table></figure><br>如要长期生效，则需要修改数据库配置文件，并重启 MySQL 服务。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wait_timeout &#x3D; 28800</span><br><span class=\"line\">interactive_timeout &#x3D; 28800</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"SQL-超长，超出-max-allowed-packet-限制\"><a href=\"#SQL-超长，超出-max-allowed-packet-限制\" class=\"headerlink\" title=\"SQL 超长，超出 max_allowed_packet 限制\"></a>SQL 超长，超出 max_allowed_packet 限制</h2><p>MySQL 会限制 server 段接收的数据包的大小，有时候大的插入和更新发送的数据包大小超过 max_allowed_packet 的限制，服务端也会报错，导致写入或者更新失败。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; show global variables like &#39;%max_allowed_packet%&#39;;</span><br><span class=\"line\">+--------------------------+------------+</span><br><span class=\"line\">| Variable_name            | Value      |</span><br><span class=\"line\">+--------------------------+------------+</span><br><span class=\"line\">| max_allowed_packet       | 1048576   |</span><br><span class=\"line\">+--------------------------+------------+</span><br></pre></td></tr></table></figure>\n<p>可以通过如下命令临时修改，<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; set global max_allowed_packet &#x3D; 4 * 1024 * 1024;</span><br></pre></td></tr></table></figure></p>\n<p>如要长期生效，则需要修改数据库配置文件，并重启 MySQL 服务。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">max_allowed_packet &#x3D; 4M</span><br></pre></td></tr></table></figure></p>\n"},{"title":"从源码角度看 php 自增和自减","date":"2016-05-06T12:18:14.000Z","_content":"\n### 自增和自减基础\n\n学过编程语言的同学应该都可以随口说出 ++a 和 a++ 的区别，具体的区别如下：\n\n| Example       | Name          | Effect                                 |\n| ------------- |:-------------:| --------------------------------------:|\n| ++`$`a          | Pre-increment | Increments $a by one, then returns $a. |\n| `$`a++          | Post-increment| Returns $a, then increments $a by one. |\n| --`$`a          | Pre-decrement\t| Decrements $a by one, then returns $a. |\n| `$`a--\t        | Post-decrement| Returns $a, then decrements $a by one. |\n\n\n++a 表示取 a 的地址，增加内存中 a 的值，然后把值放在寄存器中。\na++ 表示取 a 的地址，把 a 的值装入寄存器中，然后增加内存中 a 的值。\n\n<!-- more -->\n\n\n### php 中的递增和递减\n\n\n* 官方文档:\n[http://php.net/manual/zh/language.operators.increment.php](http://php.net/manual/zh/language.operators.increment.php)\n\n在php中，通常情况下的递增和递减没什么特别，下面我们看一些特殊的递增和递减。\n\n\n```\n$a = NULL;\t$a++;\t//int 1                                  \n$a = NULL;\t$a--;\t//null                            \t\t        \n$a = true;\t$a++;\t//true                            \t\n$a = true;\t$a--;\t//true                            \t\n$a = false;\t$a++;\t//false                            \t\t\n$a = false;\t$a--;\t//false                            \t\t\t\n```\n\n> 从上面可以看出，php中递增和递减运算符不影响布尔值；递减NULL值没有效果，但是递增NULL值的结果为1。\n\n\n```\n$a = 'C';\t$a++;\t//string D                                \n$a = 'C';\t$a--;\t//string C                                \n$a = 'C2';\t$a++;\t//string C3                               \n$a = 'C2';\t$a--;\t//string C2                               \n$a = '2C';\t$a++;\t//string 2D                               \n$a = '2C';\t$a--;\t//string 2C                               \n```\n\n> 从上面可以看出，在php中，字符串支持递增，但是不支持递减。\n\n再看一下下面的代码：\n\n\n```\n$a = 'Z';\t$a++;\t//string AA                               \n$a = 'C9';\t$a++;\t//string D0                               \n```\n\n‘A'执行递增，结果为’B'；‘Z'执行递增，结果为’AA‘,'C9'递增，结果为'D0'。这和Perl相似。\n\n### php源码分析:`$`a++与++`$`a\n\n\n首先说明一下，此处的分析基于 php5.6 的源码分析。\n\n对于前缀自增(++$a)，包含的opcode为PRE_INC，其最终调用的是Zend/zend_vm_execute.h文件中的ZEND_PRE_INC_SPEC_CV_HANDLER函数，源码如下：\n\n\n```\nstatic int ZEND_FASTCALL  ZEND_PRE_INC_SPEC_CV_HANDLER(ZEND_OPCODE_HANDLER_ARGS)\n{\n    USE_OPLINE\n    zval **var_ptr;\n    \n    SAVE_OPLINE();\n    var_ptr = _get_zval_ptr_ptr_cv_BP_VAR_RW(execute_data, opline->op1.var TSRMLS_CC);\n    \n    if (IS_CV == IS_VAR && UNEXPECTED(var_ptr == NULL)) {\n        zend_error_noreturn(E_ERROR, \"Cannot increment/decrement overloaded objects nor string offsets\");\n    }\n    if (IS_CV == IS_VAR && UNEXPECTED(*var_ptr == &EG(error_zval))) {\n        if (RETURN_VALUE_USED(opline)) {\n            PZVAL_LOCK(&EG(uninitialized_zval));\n            EX_T(opline->result.var).var.ptr = &EG(uninitialized_zval);\n        }\n    \n        CHECK_EXCEPTION();\n        ZEND_VM_NEXT_OPCODE();\n    }\n    \n    SEPARATE_ZVAL_IF_NOT_REF(var_ptr);\n    \n    if (UNEXPECTED(Z_TYPE_PP(var_ptr) == IS_OBJECT)\n       && Z_OBJ_HANDLER_PP(var_ptr, get)\n       && Z_OBJ_HANDLER_PP(var_ptr, set)) {\n        /* proxy object */\n        zval *val = Z_OBJ_HANDLER_PP(var_ptr, get)(*var_ptr TSRMLS_CC);\n        Z_ADDREF_P(val);\n        fast_increment_function(val);\n        Z_OBJ_HANDLER_PP(var_ptr, set)(var_ptr, val TSRMLS_CC);\n        zval_ptr_dtor(&val);\n    } else {\n        fast_increment_function(*var_ptr);\n    }\n    \n    if (RETURN_VALUE_USED(opline)) {\n        PZVAL_LOCK(*var_ptr);\n        EX_T(opline->result.var).var.ptr = *var_ptr;\n    }\n    \n    CHECK_EXCEPTION();\n    ZEND_VM_NEXT_OPCODE();\n}\n```\n\nfast_increment_function函数实际调用的是increment_function函数：\n\n```\nZEND_API int increment_function(zval op1) \n{\n    switch (Z_TYPE_P(op1)) {\n        case IS_LONG:\n            if (Z_LVAL_P(op1) == LONG_MAX) {\n                /* switch to double */\n                double d = (double)Z_LVAL_P(op1);\n                ZVAL_DOUBLE(op1, d+1);\n            } else {\n            Z_LVAL_P(op1)++;\n            }\n            break;\n        case IS_DOUBLE:\n            Z_DVAL_P(op1) = Z_DVAL_P(op1) + 1;\n            break;\n        case IS_NULL:\n            ZVAL_LONG(op1, 1);\n            break;\n        case IS_STRING: {\n                long lval;\n                double dval;\n    \n            switch (is_numeric_string(Z_STRVAL_P(op1), Z_STRLEN_P(op1), &lval, &dval, 0)) {\n                    case IS_LONG:\n                        str_efree(Z_STRVAL_P(op1));\n                        if (lval == LONG_MAX) {\n                            /* switch to double */\n                            double d = (double)lval;\n                            ZVAL_DOUBLE(op1, d+1);\n                        } else {\n                            ZVAL_LONG(op1, lval+1);\n                        }\n                        break;\n                    case IS_DOUBLE:\n                        str_efree(Z_STRVAL_P(op1));\n                        ZVAL_DOUBLE(op1, dval+1);\n                        break;\n                    default:\n                        /* Perl style string increment */\n                        increment_string(op1);\n                        break;\n                }\n            }\n            break;\n        case IS_OBJECT:\n            if (Z_OBJ_HANDLER_P(op1, do_operation)) {\n                zval *op2;\n                int res;\n                TSRMLS_FETCH();\n    \n                MAKE_STD_ZVAL(op2);\n                ZVAL_LONG(op2, 1);\n            res = Z_OBJ_HANDLER_P(op1, do_operation)(ZEND_ADD, op1, op1, op2 TSRMLS_CC);\n                zval_ptr_dtor(&op2);\n    \n                return res;\n            }\n            return FAILURE;\n        default:\n            return FAILURE;\n    }\n    return SUCCESS;\n}\n```\n\n首先调用_get_zval_ptr_ptr_cv_BP_VAR_RW函数获取CV(Compiled variable)类型变量；                                           \n其次会调用fast_increment_function函数，再调用increment_function函数，实现变量的增加操作，\n在increment_function函数中，会根据变量的类型来进行对应的操作，从上面可以看出，依次判断的类型有IS_LONG/IS_DOUBLE/IS_NULL/IS_STRING/IS_OBJECT。                                                                                  \t\n如果是IS_LONG类型，若变量达到long的最大值，则将其转化为double类型后加1，否则直接加1；             \n如果是IS_DOUBLE类型，则直接加1；                                                                                                                  \n如果是IS_NULL类型，则会调用宏ZVAL_LONG(op1, 1)，直接返回long类型的1；                                                                         \n如果是IS_STRING类型，则会先将其转化为数字类型，然后再根据上面判断数字类型的逻辑判断；\n\n如果是IS_OBJECT类型，并且其内部定义了运算符操作的实现，那就调用这个handler来处理,进行                                                                                    \n                                                                                   \n> 简言之，前缀自增实际上操作的是变量本身，在表达式中使用的也是变量本身。\n\n\n对于后缀自增($a++)，包含的opcode为POST_INC，其最终调用的是Zend/zend_vm_execute.h文件中的ZEND_POST_INC_SPEC_CV_HANDLER函数，源码如下：\n\n\n```\nstatic int ZEND_FASTCALL  ZEND_POST_INC_SPEC_CV_HANDLER(ZEND_OPCODE_HANDLER_ARGS)\n{\n    USE_OPLINE\n    zval **var_ptr, *retval;\n    \n    SAVE_OPLINE();\n    var_ptr = _get_zval_ptr_ptr_cv_BP_VAR_RW(execute_data, opline->op1.var TSRMLS_CC);\n    if (IS_CV == IS_VAR && UNEXPECTED(var_ptr == NULL)) {\n        zend_error_noreturn(E_ERROR, \"Cannot increment/decrement overloaded objects nor string offsets\");\n    }\n    if (IS_CV == IS_VAR && UNEXPECTED(*var_ptr == &EG(error_zval))) {\n        ZVAL_NULL(&EX_T(opline->result.var).tmp_var);\n    \n        CHECK_EXCEPTION();\n        ZEND_VM_NEXT_OPCODE();\n    }\n    \n    retval = &EX_T(opline->result.var).tmp_var;\n    ZVAL_COPY_VALUE(retval, *var_ptr);\n    zendi_zval_copy_ctor(*retval);\n    \n    SEPARATE_ZVAL_IF_NOT_REF(var_ptr);\n    if (UNEXPECTED(Z_TYPE_PP(var_ptr) == IS_OBJECT)\n    && Z_OBJ_HANDLER_PP(var_ptr, get)\n       && Z_OBJ_HANDLER_PP(var_ptr, set)) {\n        /* proxy object */\n        zval *val = Z_OBJ_HANDLER_PP(var_ptr, get)(*var_ptr TSRMLS_CC);\n        Z_ADDREF_P(val);\n        fast_increment_function(val);\n        Z_OBJ_HANDLER_PP(var_ptr, set)(var_ptr, val TSRMLS_CC);\n        zval_ptr_dtor(&val);\n    } else {\n        fast_increment_function(*var_ptr);\n    }\n    \n    CHECK_EXCEPTION();\n    ZEND_VM_NEXT_OPCODE();\n｝ \n```\n\n从上面可以看出，后缀自增与前缀自增在底层实现的大部分是类似的，但是不同的点在于，后缀自增多了一个临时变量，用于存储原始的变量的值，但是它并没有前缀自增的RETURN_VALUE_USED操作。 \n\n> 简言之，后缀自增使用的是存放在临时变量中的值，即变量的原始值，而最终变量本身的值还是会增加。\n\n\n### 一些奇怪的php自增和自减\n\n\n```\n$a = '2D9';\t$a++;\t//string 2E0\n$a = '2E0';\t$a++;\t//float 3\n$a = '010';\t$a++;\t//11\n$a = 010;\t$a++;\t//9\n```\n\n\n第一个很好理解。<br>\n对于第二个，并不是我们想的 '2E1'，而是3。注意输出结果为 float 3，原来这里 `$`a='2E0',对`$`a执行递增，由于字符串`$`a中包含'E'，所以会被当作float来取值。科学计数法 2E0 表示 2*10^0 值为2，对其加1则结果为3。<br> \n对于第三个，`$`a='010'，对`$`a执行递增，字符串`$`a会被当作integer来处理，即为10，对其加1则结果为11。<br>\n对于第四个，`$`a=010，对`$`a执行递增，`$`a本来就是数字类型，由于是0开头，表示8进制，即为8，对其加1则结果为9。<br>\n\n\n\n\n# Happy coding.","source":"_posts/php-incrementing-decrementing-analysis.md","raw":"---\ntitle: 从源码角度看php自增和自减\ndate: 2016-05-06 20:18:14\ncategories: php\ntags: [php , source , 源码]\n---\n\n### 自增和自减基础\n\n学过编程语言的同学应该都可以随口说出 ++a 和 a++ 的区别，具体的区别如下：\n\n| Example       | Name          | Effect                                 |\n| ------------- |:-------------:| --------------------------------------:|\n| ++`$`a          | Pre-increment | Increments $a by one, then returns $a. |\n| `$`a++          | Post-increment| Returns $a, then increments $a by one. |\n| --`$`a          | Pre-decrement\t| Decrements $a by one, then returns $a. |\n| `$`a--\t        | Post-decrement| Returns $a, then decrements $a by one. |\n\n\n++a 表示取 a 的地址，增加内存中 a 的值，然后把值放在寄存器中。\na++ 表示取 a 的地址，把 a 的值装入寄存器中，然后增加内存中 a 的值。\n\n<!-- more -->\n\n\n### php 中的递增和递减\n\n\n* 官方文档:\n[http://php.net/manual/zh/language.operators.increment.php](http://php.net/manual/zh/language.operators.increment.php)\n\n在php中，通常情况下的递增和递减没什么特别，下面我们看一些特殊的递增和递减。\n\n\n```\n$a = NULL;\t$a++;\t//int 1                                  \n$a = NULL;\t$a--;\t//null                            \t\t        \n$a = true;\t$a++;\t//true                            \t\n$a = true;\t$a--;\t//true                            \t\n$a = false;\t$a++;\t//false                            \t\t\n$a = false;\t$a--;\t//false                            \t\t\t\n```\n\n> 从上面可以看出，php中递增和递减运算符不影响布尔值；递减NULL值没有效果，但是递增NULL值的结果为1。\n\n\n```\n$a = 'C';\t$a++;\t//string D                                \n$a = 'C';\t$a--;\t//string C                                \n$a = 'C2';\t$a++;\t//string C3                               \n$a = 'C2';\t$a--;\t//string C2                               \n$a = '2C';\t$a++;\t//string 2D                               \n$a = '2C';\t$a--;\t//string 2C                               \n```\n\n> 从上面可以看出，在php中，字符串支持递增，但是不支持递减。\n\n再看一下下面的代码：\n\n\n```\n$a = 'Z';\t$a++;\t//string AA                               \n$a = 'C9';\t$a++;\t//string D0                               \n```\n\n‘A'执行递增，结果为’B'；‘Z'执行递增，结果为’AA‘,'C9'递增，结果为'D0'。这和Perl相似。\n\n### php源码分析:`$`a++与++`$`a\n\n\n首先说明一下，此处的分析基于 php5.6 的源码分析。\n\n对于前缀自增(++$a)，包含的opcode为PRE_INC，其最终调用的是Zend/zend_vm_execute.h文件中的ZEND_PRE_INC_SPEC_CV_HANDLER函数，源码如下：\n\n\n```\nstatic int ZEND_FASTCALL  ZEND_PRE_INC_SPEC_CV_HANDLER(ZEND_OPCODE_HANDLER_ARGS)\n{\n    USE_OPLINE\n    zval **var_ptr;\n    \n    SAVE_OPLINE();\n    var_ptr = _get_zval_ptr_ptr_cv_BP_VAR_RW(execute_data, opline->op1.var TSRMLS_CC);\n    \n    if (IS_CV == IS_VAR && UNEXPECTED(var_ptr == NULL)) {\n        zend_error_noreturn(E_ERROR, \"Cannot increment/decrement overloaded objects nor string offsets\");\n    }\n    if (IS_CV == IS_VAR && UNEXPECTED(*var_ptr == &EG(error_zval))) {\n        if (RETURN_VALUE_USED(opline)) {\n            PZVAL_LOCK(&EG(uninitialized_zval));\n            EX_T(opline->result.var).var.ptr = &EG(uninitialized_zval);\n        }\n    \n        CHECK_EXCEPTION();\n        ZEND_VM_NEXT_OPCODE();\n    }\n    \n    SEPARATE_ZVAL_IF_NOT_REF(var_ptr);\n    \n    if (UNEXPECTED(Z_TYPE_PP(var_ptr) == IS_OBJECT)\n       && Z_OBJ_HANDLER_PP(var_ptr, get)\n       && Z_OBJ_HANDLER_PP(var_ptr, set)) {\n        /* proxy object */\n        zval *val = Z_OBJ_HANDLER_PP(var_ptr, get)(*var_ptr TSRMLS_CC);\n        Z_ADDREF_P(val);\n        fast_increment_function(val);\n        Z_OBJ_HANDLER_PP(var_ptr, set)(var_ptr, val TSRMLS_CC);\n        zval_ptr_dtor(&val);\n    } else {\n        fast_increment_function(*var_ptr);\n    }\n    \n    if (RETURN_VALUE_USED(opline)) {\n        PZVAL_LOCK(*var_ptr);\n        EX_T(opline->result.var).var.ptr = *var_ptr;\n    }\n    \n    CHECK_EXCEPTION();\n    ZEND_VM_NEXT_OPCODE();\n}\n```\n\nfast_increment_function函数实际调用的是increment_function函数：\n\n```\nZEND_API int increment_function(zval op1) \n{\n    switch (Z_TYPE_P(op1)) {\n        case IS_LONG:\n            if (Z_LVAL_P(op1) == LONG_MAX) {\n                /* switch to double */\n                double d = (double)Z_LVAL_P(op1);\n                ZVAL_DOUBLE(op1, d+1);\n            } else {\n            Z_LVAL_P(op1)++;\n            }\n            break;\n        case IS_DOUBLE:\n            Z_DVAL_P(op1) = Z_DVAL_P(op1) + 1;\n            break;\n        case IS_NULL:\n            ZVAL_LONG(op1, 1);\n            break;\n        case IS_STRING: {\n                long lval;\n                double dval;\n    \n            switch (is_numeric_string(Z_STRVAL_P(op1), Z_STRLEN_P(op1), &lval, &dval, 0)) {\n                    case IS_LONG:\n                        str_efree(Z_STRVAL_P(op1));\n                        if (lval == LONG_MAX) {\n                            /* switch to double */\n                            double d = (double)lval;\n                            ZVAL_DOUBLE(op1, d+1);\n                        } else {\n                            ZVAL_LONG(op1, lval+1);\n                        }\n                        break;\n                    case IS_DOUBLE:\n                        str_efree(Z_STRVAL_P(op1));\n                        ZVAL_DOUBLE(op1, dval+1);\n                        break;\n                    default:\n                        /* Perl style string increment */\n                        increment_string(op1);\n                        break;\n                }\n            }\n            break;\n        case IS_OBJECT:\n            if (Z_OBJ_HANDLER_P(op1, do_operation)) {\n                zval *op2;\n                int res;\n                TSRMLS_FETCH();\n    \n                MAKE_STD_ZVAL(op2);\n                ZVAL_LONG(op2, 1);\n            res = Z_OBJ_HANDLER_P(op1, do_operation)(ZEND_ADD, op1, op1, op2 TSRMLS_CC);\n                zval_ptr_dtor(&op2);\n    \n                return res;\n            }\n            return FAILURE;\n        default:\n            return FAILURE;\n    }\n    return SUCCESS;\n}\n```\n\n首先调用_get_zval_ptr_ptr_cv_BP_VAR_RW函数获取CV(Compiled variable)类型变量；                                           \n其次会调用fast_increment_function函数，再调用increment_function函数，实现变量的增加操作，\n在increment_function函数中，会根据变量的类型来进行对应的操作，从上面可以看出，依次判断的类型有IS_LONG/IS_DOUBLE/IS_NULL/IS_STRING/IS_OBJECT。                                                                                  \t\n如果是IS_LONG类型，若变量达到long的最大值，则将其转化为double类型后加1，否则直接加1；             \n如果是IS_DOUBLE类型，则直接加1；                                                                                                                  \n如果是IS_NULL类型，则会调用宏ZVAL_LONG(op1, 1)，直接返回long类型的1；                                                                         \n如果是IS_STRING类型，则会先将其转化为数字类型，然后再根据上面判断数字类型的逻辑判断；\n\n如果是IS_OBJECT类型，并且其内部定义了运算符操作的实现，那就调用这个handler来处理,进行                                                                                    \n                                                                                   \n> 简言之，前缀自增实际上操作的是变量本身，在表达式中使用的也是变量本身。\n\n\n对于后缀自增($a++)，包含的opcode为POST_INC，其最终调用的是Zend/zend_vm_execute.h文件中的ZEND_POST_INC_SPEC_CV_HANDLER函数，源码如下：\n\n\n```\nstatic int ZEND_FASTCALL  ZEND_POST_INC_SPEC_CV_HANDLER(ZEND_OPCODE_HANDLER_ARGS)\n{\n    USE_OPLINE\n    zval **var_ptr, *retval;\n    \n    SAVE_OPLINE();\n    var_ptr = _get_zval_ptr_ptr_cv_BP_VAR_RW(execute_data, opline->op1.var TSRMLS_CC);\n    if (IS_CV == IS_VAR && UNEXPECTED(var_ptr == NULL)) {\n        zend_error_noreturn(E_ERROR, \"Cannot increment/decrement overloaded objects nor string offsets\");\n    }\n    if (IS_CV == IS_VAR && UNEXPECTED(*var_ptr == &EG(error_zval))) {\n        ZVAL_NULL(&EX_T(opline->result.var).tmp_var);\n    \n        CHECK_EXCEPTION();\n        ZEND_VM_NEXT_OPCODE();\n    }\n    \n    retval = &EX_T(opline->result.var).tmp_var;\n    ZVAL_COPY_VALUE(retval, *var_ptr);\n    zendi_zval_copy_ctor(*retval);\n    \n    SEPARATE_ZVAL_IF_NOT_REF(var_ptr);\n    if (UNEXPECTED(Z_TYPE_PP(var_ptr) == IS_OBJECT)\n    && Z_OBJ_HANDLER_PP(var_ptr, get)\n       && Z_OBJ_HANDLER_PP(var_ptr, set)) {\n        /* proxy object */\n        zval *val = Z_OBJ_HANDLER_PP(var_ptr, get)(*var_ptr TSRMLS_CC);\n        Z_ADDREF_P(val);\n        fast_increment_function(val);\n        Z_OBJ_HANDLER_PP(var_ptr, set)(var_ptr, val TSRMLS_CC);\n        zval_ptr_dtor(&val);\n    } else {\n        fast_increment_function(*var_ptr);\n    }\n    \n    CHECK_EXCEPTION();\n    ZEND_VM_NEXT_OPCODE();\n｝ \n```\n\n从上面可以看出，后缀自增与前缀自增在底层实现的大部分是类似的，但是不同的点在于，后缀自增多了一个临时变量，用于存储原始的变量的值，但是它并没有前缀自增的RETURN_VALUE_USED操作。 \n\n> 简言之，后缀自增使用的是存放在临时变量中的值，即变量的原始值，而最终变量本身的值还是会增加。\n\n\n### 一些奇怪的php自增和自减\n\n\n```\n$a = '2D9';\t$a++;\t//string 2E0\n$a = '2E0';\t$a++;\t//float 3\n$a = '010';\t$a++;\t//11\n$a = 010;\t$a++;\t//9\n```\n\n\n第一个很好理解。<br>\n对于第二个，并不是我们想的 '2E1'，而是3。注意输出结果为 float 3，原来这里 `$`a='2E0',对`$`a执行递增，由于字符串`$`a中包含'E'，所以会被当作float来取值。科学计数法 2E0 表示 2*10^0 值为2，对其加1则结果为3。<br> \n对于第三个，`$`a='010'，对`$`a执行递增，字符串`$`a会被当作integer来处理，即为10，对其加1则结果为11。<br>\n对于第四个，`$`a=010，对`$`a执行递增，`$`a本来就是数字类型，由于是0开头，表示8进制，即为8，对其加1则结果为9。<br>\n\n\n\n\n# Happy coding.","slug":"php-incrementing-decrementing-analysis","published":1,"updated":"2016-06-19T15:06:06.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjsw1dev000sa21u68kd9usk","content":"<h3 id=\"自增和自减基础\"><a href=\"# 自增和自减基础\" class=\"headerlink\" title=\"自增和自减基础\"></a>自增和自减基础 </h3><p> 学过编程语言的同学应该都可以随口说出 ++a 和 a++ 的区别，具体的区别如下：</p>\n<table>\n<thead>\n<tr>\n<th>Example</th>\n<th style=\"text-align:center\">Name</th>\n<th style=\"text-align:right\">Effect</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>++<code>$</code>a</td>\n<td style=\"text-align:center\">Pre-increment</td>\n<td style=\"text-align:right\">Increments $a by one, then returns $a.</td>\n</tr>\n<tr>\n<td><code>$</code>a++</td>\n<td style=\"text-align:center\">Post-increment</td>\n<td style=\"text-align:right\">Returns $a, then increments $a by one.</td>\n</tr>\n<tr>\n<td>–<code>$</code>a</td>\n<td style=\"text-align:center\">Pre-decrement</td>\n<td style=\"text-align:right\">Decrements $a by one, then returns $a.</td>\n</tr>\n<tr>\n<td><code>$</code>a–</td>\n<td style=\"text-align:center\">Post-decrement</td>\n<td style=\"text-align:right\">Returns $a, then decrements $a by one.</td>\n</tr>\n</tbody>\n</table>\n<p>++a 表示取 a 的地址，增加内存中 a 的值，然后把值放在寄存器中。<br>a++ 表示取 a 的地址，把 a 的值装入寄存器中，然后增加内存中 a 的值。</p>\n<a id=\"more\"></a>\n<h3 id=\"php- 中的递增和递减\"><a href=\"#php- 中的递增和递减\" class=\"headerlink\" title=\"php 中的递增和递减\"></a>php 中的递增和递减</h3><ul>\n<li>官方文档:<br><a href=\"http://php.net/manual/zh/language.operators.increment.php\">http://php.net/manual/zh/language.operators.increment.php</a></li>\n</ul>\n<p>在 php 中，通常情况下的递增和递减没什么特别，下面我们看一些特殊的递增和递减。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$a &#x3D; NULL;\t$a++;\t&#x2F;&#x2F;int 1                                  </span><br><span class=\"line\">$a &#x3D; NULL;\t$a--;\t&#x2F;&#x2F;null                            \t\t        </span><br><span class=\"line\">$a &#x3D; true;\t$a++;\t&#x2F;&#x2F;true                            \t</span><br><span class=\"line\">$a &#x3D; true;\t$a--;\t&#x2F;&#x2F;true                            \t</span><br><span class=\"line\">$a &#x3D; false;\t$a++;\t&#x2F;&#x2F;false                            \t\t</span><br><span class=\"line\">$a &#x3D; false;\t$a--;\t&#x2F;&#x2F;false                            \t\t\t</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>从上面可以看出，php 中递增和递减运算符不影响布尔值；递减 NULL 值没有效果，但是递增 NULL 值的结果为 1。</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$a &#x3D; &#39;C&#39;;\t$a++;\t&#x2F;&#x2F;string D                                </span><br><span class=\"line\">$a &#x3D; &#39;C&#39;;\t$a--;\t&#x2F;&#x2F;string C                                </span><br><span class=\"line\">$a &#x3D; &#39;C2&#39;;\t$a++;\t&#x2F;&#x2F;string C3                               </span><br><span class=\"line\">$a &#x3D; &#39;C2&#39;;\t$a--;\t&#x2F;&#x2F;string C2                               </span><br><span class=\"line\">$a &#x3D; &#39;2C&#39;;\t$a++;\t&#x2F;&#x2F;string 2D                               </span><br><span class=\"line\">$a &#x3D; &#39;2C&#39;;\t$a--;\t&#x2F;&#x2F;string 2C                               </span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>从上面可以看出，在 php 中，字符串支持递增，但是不支持递减。</p>\n</blockquote>\n<p>再看一下下面的代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$a &#x3D; &#39;Z&#39;;\t$a++;\t&#x2F;&#x2F;string AA                               </span><br><span class=\"line\">$a &#x3D; &#39;C9&#39;;\t$a++;\t&#x2F;&#x2F;string D0                               </span><br></pre></td></tr></table></figure>\n<p>‘A’执行递增，结果为’B’；‘Z’执行递增，结果为’AA‘,’C9’递增，结果为’D0’。这和 Perl 相似。</p>\n<h3 id=\"php 源码分析 -a- 与 -a\"><a href=\"#php 源码分析 -a- 与 -a\" class=\"headerlink\" title=\"php 源码分析:$a++ 与 ++$a\"></a>php 源码分析:<code>$</code>a++ 与 ++<code>$</code>a</h3><p>首先说明一下，此处的分析基于 php5.6 的源码分析。</p>\n<p>对于前缀自增(++$a)，包含的 opcode 为 PRE_INC，其最终调用的是 Zend/zend_vm_execute.h 文件中的 ZEND_PRE_INC_SPEC_CV_HANDLER 函数，源码如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">static int ZEND_FASTCALL  ZEND_PRE_INC_SPEC_CV_HANDLER(ZEND_OPCODE_HANDLER_ARGS)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    USE_OPLINE</span><br><span class=\"line\">    zval **var_ptr;</span><br><span class=\"line\">    </span><br><span class=\"line\">    SAVE_OPLINE();</span><br><span class=\"line\">    var_ptr &#x3D; _get_zval_ptr_ptr_cv_BP_VAR_RW(execute_data, opline-&gt;op1.var TSRMLS_CC);</span><br><span class=\"line\">    </span><br><span class=\"line\">    if (IS_CV &#x3D;&#x3D; IS_VAR &amp;&amp; UNEXPECTED(var_ptr &#x3D;&#x3D; NULL)) &#123;</span><br><span class=\"line\">        zend_error_noreturn(E_ERROR, &quot;Cannot increment&#x2F;decrement overloaded objects nor string offsets&quot;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    if (IS_CV &#x3D;&#x3D; IS_VAR &amp;&amp; UNEXPECTED(*var_ptr &#x3D;&#x3D; &amp;EG(error_zval))) &#123;</span><br><span class=\"line\">        if (RETURN_VALUE_USED(opline)) &#123;</span><br><span class=\"line\">            PZVAL_LOCK(&amp;EG(uninitialized_zval));</span><br><span class=\"line\">            EX_T(opline-&gt;result.var).var.ptr &#x3D; &amp;EG(uninitialized_zval);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">        CHECK_EXCEPTION();</span><br><span class=\"line\">        ZEND_VM_NEXT_OPCODE();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    SEPARATE_ZVAL_IF_NOT_REF(var_ptr);</span><br><span class=\"line\">    </span><br><span class=\"line\">    if (UNEXPECTED(Z_TYPE_PP(var_ptr) &#x3D;&#x3D; IS_OBJECT)</span><br><span class=\"line\">       &amp;&amp; Z_OBJ_HANDLER_PP(var_ptr, get)</span><br><span class=\"line\">       &amp;&amp; Z_OBJ_HANDLER_PP(var_ptr, set)) &#123;</span><br><span class=\"line\">        &#x2F;* proxy object *&#x2F;</span><br><span class=\"line\">        zval *val &#x3D; Z_OBJ_HANDLER_PP(var_ptr, get)(*var_ptr TSRMLS_CC);</span><br><span class=\"line\">        Z_ADDREF_P(val);</span><br><span class=\"line\">        fast_increment_function(val);</span><br><span class=\"line\">        Z_OBJ_HANDLER_PP(var_ptr, set)(var_ptr, val TSRMLS_CC);</span><br><span class=\"line\">        zval_ptr_dtor(&amp;val);</span><br><span class=\"line\">    &#125; else &#123;</span><br><span class=\"line\">        fast_increment_function(*var_ptr);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    if (RETURN_VALUE_USED(opline)) &#123;</span><br><span class=\"line\">        PZVAL_LOCK(*var_ptr);</span><br><span class=\"line\">        EX_T(opline-&gt;result.var).var.ptr &#x3D; *var_ptr;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    CHECK_EXCEPTION();</span><br><span class=\"line\">    ZEND_VM_NEXT_OPCODE();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>fast_increment_function 函数实际调用的是 increment_function 函数：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ZEND_API int increment_function(zval op1) </span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    switch (Z_TYPE_P(op1)) &#123;</span><br><span class=\"line\">        case IS_LONG:</span><br><span class=\"line\">            if (Z_LVAL_P(op1) &#x3D;&#x3D; LONG_MAX) &#123;</span><br><span class=\"line\">                &#x2F;* switch to double *&#x2F;</span><br><span class=\"line\">                double d &#x3D; (double)Z_LVAL_P(op1);</span><br><span class=\"line\">                ZVAL_DOUBLE(op1, d+1);</span><br><span class=\"line\">            &#125; else &#123;</span><br><span class=\"line\">            Z_LVAL_P(op1)++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            break;</span><br><span class=\"line\">        case IS_DOUBLE:</span><br><span class=\"line\">            Z_DVAL_P(op1) &#x3D; Z_DVAL_P(op1) + 1;</span><br><span class=\"line\">            break;</span><br><span class=\"line\">        case IS_NULL:</span><br><span class=\"line\">            ZVAL_LONG(op1, 1);</span><br><span class=\"line\">            break;</span><br><span class=\"line\">        case IS_STRING: &#123;</span><br><span class=\"line\">                long lval;</span><br><span class=\"line\">                double dval;</span><br><span class=\"line\">    </span><br><span class=\"line\">            switch (is_numeric_string(Z_STRVAL_P(op1), Z_STRLEN_P(op1), &amp;lval, &amp;dval, 0)) &#123;</span><br><span class=\"line\">                    case IS_LONG:</span><br><span class=\"line\">                        str_efree(Z_STRVAL_P(op1));</span><br><span class=\"line\">                        if (lval &#x3D;&#x3D; LONG_MAX) &#123;</span><br><span class=\"line\">                            &#x2F;* switch to double *&#x2F;</span><br><span class=\"line\">                            double d &#x3D; (double)lval;</span><br><span class=\"line\">                            ZVAL_DOUBLE(op1, d+1);</span><br><span class=\"line\">                        &#125; else &#123;</span><br><span class=\"line\">                            ZVAL_LONG(op1, lval+1);</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                        break;</span><br><span class=\"line\">                    case IS_DOUBLE:</span><br><span class=\"line\">                        str_efree(Z_STRVAL_P(op1));</span><br><span class=\"line\">                        ZVAL_DOUBLE(op1, dval+1);</span><br><span class=\"line\">                        break;</span><br><span class=\"line\">                    default:</span><br><span class=\"line\">                        &#x2F;* Perl style string increment *&#x2F;</span><br><span class=\"line\">                        increment_string(op1);</span><br><span class=\"line\">                        break;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            break;</span><br><span class=\"line\">        case IS_OBJECT:</span><br><span class=\"line\">            if (Z_OBJ_HANDLER_P(op1, do_operation)) &#123;</span><br><span class=\"line\">                zval *op2;</span><br><span class=\"line\">                int res;</span><br><span class=\"line\">                TSRMLS_FETCH();</span><br><span class=\"line\">    </span><br><span class=\"line\">                MAKE_STD_ZVAL(op2);</span><br><span class=\"line\">                ZVAL_LONG(op2, 1);</span><br><span class=\"line\">            res &#x3D; Z_OBJ_HANDLER_P(op1, do_operation)(ZEND_ADD, op1, op1, op2 TSRMLS_CC);</span><br><span class=\"line\">                zval_ptr_dtor(&amp;op2);</span><br><span class=\"line\">    </span><br><span class=\"line\">                return res;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            return FAILURE;</span><br><span class=\"line\">        default:</span><br><span class=\"line\">            return FAILURE;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return SUCCESS;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>首先调用_get_zval_ptr_ptr_cv_BP_VAR_RW 函数获取 CV(Compiled variable)类型变量；<br>其次会调用 fast_increment_function 函数，再调用 increment_function 函数，实现变量的增加操作，<br>在 increment_function 函数中，会根据变量的类型来进行对应的操作，从上面可以看出，依次判断的类型有 IS_LONG/IS_DOUBLE/IS_NULL/IS_STRING/IS_OBJECT。<br>如果是 IS_LONG 类型，若变量达到 long 的最大值，则将其转化为 double 类型后加 1，否则直接加 1；<br>如果是 IS_DOUBLE 类型，则直接加 1；<br>如果是 IS_NULL 类型，则会调用宏 ZVAL_LONG(op1, 1)，直接返回 long 类型的 1；<br>如果是 IS_STRING 类型，则会先将其转化为数字类型，然后再根据上面判断数字类型的逻辑判断；</p>\n<p>如果是 IS_OBJECT 类型，并且其内部定义了运算符操作的实现，那就调用这个 handler 来处理, 进行                                                                                    </p>\n<blockquote>\n<p>简言之，前缀自增实际上操作的是变量本身，在表达式中使用的也是变量本身。</p>\n</blockquote>\n<p>对于后缀自增($a++)，包含的 opcode 为 POST_INC，其最终调用的是 Zend/zend_vm_execute.h 文件中的 ZEND_POST_INC_SPEC_CV_HANDLER 函数，源码如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">static int ZEND_FASTCALL  ZEND_POST_INC_SPEC_CV_HANDLER(ZEND_OPCODE_HANDLER_ARGS)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    USE_OPLINE</span><br><span class=\"line\">    zval **var_ptr, *retval;</span><br><span class=\"line\">    </span><br><span class=\"line\">    SAVE_OPLINE();</span><br><span class=\"line\">    var_ptr &#x3D; _get_zval_ptr_ptr_cv_BP_VAR_RW(execute_data, opline-&gt;op1.var TSRMLS_CC);</span><br><span class=\"line\">    if (IS_CV &#x3D;&#x3D; IS_VAR &amp;&amp; UNEXPECTED(var_ptr &#x3D;&#x3D; NULL)) &#123;</span><br><span class=\"line\">        zend_error_noreturn(E_ERROR, &quot;Cannot increment&#x2F;decrement overloaded objects nor string offsets&quot;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    if (IS_CV &#x3D;&#x3D; IS_VAR &amp;&amp; UNEXPECTED(*var_ptr &#x3D;&#x3D; &amp;EG(error_zval))) &#123;</span><br><span class=\"line\">        ZVAL_NULL(&amp;EX_T(opline-&gt;result.var).tmp_var);</span><br><span class=\"line\">    </span><br><span class=\"line\">        CHECK_EXCEPTION();</span><br><span class=\"line\">        ZEND_VM_NEXT_OPCODE();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    retval &#x3D; &amp;EX_T(opline-&gt;result.var).tmp_var;</span><br><span class=\"line\">    ZVAL_COPY_VALUE(retval, *var_ptr);</span><br><span class=\"line\">    zendi_zval_copy_ctor(*retval);</span><br><span class=\"line\">    </span><br><span class=\"line\">    SEPARATE_ZVAL_IF_NOT_REF(var_ptr);</span><br><span class=\"line\">    if (UNEXPECTED(Z_TYPE_PP(var_ptr) &#x3D;&#x3D; IS_OBJECT)</span><br><span class=\"line\">    &amp;&amp; Z_OBJ_HANDLER_PP(var_ptr, get)</span><br><span class=\"line\">       &amp;&amp; Z_OBJ_HANDLER_PP(var_ptr, set)) &#123;</span><br><span class=\"line\">        &#x2F;* proxy object *&#x2F;</span><br><span class=\"line\">        zval *val &#x3D; Z_OBJ_HANDLER_PP(var_ptr, get)(*var_ptr TSRMLS_CC);</span><br><span class=\"line\">        Z_ADDREF_P(val);</span><br><span class=\"line\">        fast_increment_function(val);</span><br><span class=\"line\">        Z_OBJ_HANDLER_PP(var_ptr, set)(var_ptr, val TSRMLS_CC);</span><br><span class=\"line\">        zval_ptr_dtor(&amp;val);</span><br><span class=\"line\">    &#125; else &#123;</span><br><span class=\"line\">        fast_increment_function(*var_ptr);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    CHECK_EXCEPTION();</span><br><span class=\"line\">    ZEND_VM_NEXT_OPCODE();</span><br><span class=\"line\">｝ </span><br></pre></td></tr></table></figure>\n<p>从上面可以看出，后缀自增与前缀自增在底层实现的大部分是类似的，但是不同的点在于，后缀自增多了一个临时变量，用于存储原始的变量的值，但是它并没有前缀自增的 RETURN_VALUE_USED 操作。 </p>\n<blockquote>\n<p>简言之，后缀自增使用的是存放在临时变量中的值，即变量的原始值，而最终变量本身的值还是会增加。</p>\n</blockquote>\n<h3 id=\"一些奇怪的 php 自增和自减\"><a href=\"# 一些奇怪的 php 自增和自减\" class=\"headerlink\" title=\"一些奇怪的 php 自增和自减\"></a>一些奇怪的 php 自增和自减</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$a &#x3D; &#39;2D9&#39;;\t$a++;\t&#x2F;&#x2F;string 2E0</span><br><span class=\"line\">$a &#x3D; &#39;2E0&#39;;\t$a++;\t&#x2F;&#x2F;float 3</span><br><span class=\"line\">$a &#x3D; &#39;010&#39;;\t$a++;\t&#x2F;&#x2F;11</span><br><span class=\"line\">$a &#x3D; 010;\t$a++;\t&#x2F;&#x2F;9</span><br></pre></td></tr></table></figure>\n<p>第一个很好理解。<br><br>对于第二个，并不是我们想的 ‘2E1’，而是 3。注意输出结果为 float 3，原来这里 <code>$</code>a=’2E0’, 对 <code>$</code>a 执行递增，由于字符串<code>$</code>a 中包含’E’，所以会被当作 float 来取值。科学计数法 2E0 表示 2*10^0 值为 2，对其加 1 则结果为 3。<br><br> 对于第三个，<code>$</code>a=’010’，对 <code>$</code>a 执行递增，字符串<code>$</code>a 会被当作 integer 来处理，即为 10，对其加 1 则结果为 11。<br><br> 对于第四个，<code>$</code>a=010，对<code>$</code>a 执行递增，<code>$</code>a 本来就是数字类型，由于是 0 开头，表示 8 进制，即为 8，对其加 1 则结果为 9。<br></p>\n<h1 id=\"Happy-coding\"><a href=\"#Happy-coding\" class=\"headerlink\" title=\"Happy coding.\"></a>Happy coding.</h1>","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"优秀来源于分享","link_list":[{"name":"JerryC","link":"https://jerryc.me/","avatar":"https://jerryc.me/image/avatar.png","descr":"博客主题作者"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"<h3 id=\"自增和自减基础\"><a href=\"#自增和自减基础\" class=\"headerlink\" title=\"自增和自减基础\"></a>自增和自减基础</h3><p>学过编程语言的同学应该都可以随口说出 ++a 和 a++ 的区别，具体的区别如下：</p>\n<table>\n<thead>\n<tr>\n<th>Example</th>\n<th style=\"text-align:center\">Name</th>\n<th style=\"text-align:right\">Effect</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>++<code>$</code>a</td>\n<td style=\"text-align:center\">Pre-increment</td>\n<td style=\"text-align:right\">Increments $a by one, then returns $a.</td>\n</tr>\n<tr>\n<td><code>$</code>a++</td>\n<td style=\"text-align:center\">Post-increment</td>\n<td style=\"text-align:right\">Returns $a, then increments $a by one.</td>\n</tr>\n<tr>\n<td>–<code>$</code>a</td>\n<td style=\"text-align:center\">Pre-decrement</td>\n<td style=\"text-align:right\">Decrements $a by one, then returns $a.</td>\n</tr>\n<tr>\n<td><code>$</code>a–</td>\n<td style=\"text-align:center\">Post-decrement</td>\n<td style=\"text-align:right\">Returns $a, then decrements $a by one.</td>\n</tr>\n</tbody>\n</table>\n<p>++a 表示取 a 的地址，增加内存中 a 的值，然后把值放在寄存器中。<br>a++ 表示取 a 的地址，把 a 的值装入寄存器中，然后增加内存中 a 的值。</p>","more":"<h3 id=\"php-中的递增和递减\"><a href=\"#php-中的递增和递减\" class=\"headerlink\" title=\"php 中的递增和递减\"></a>php 中的递增和递减</h3><ul>\n<li>官方文档:<br><a href=\"http://php.net/manual/zh/language.operators.increment.php\">http://php.net/manual/zh/language.operators.increment.php</a></li>\n</ul>\n<p>在php中，通常情况下的递增和递减没什么特别，下面我们看一些特殊的递增和递减。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$a &#x3D; NULL;\t$a++;\t&#x2F;&#x2F;int 1                                  </span><br><span class=\"line\">$a &#x3D; NULL;\t$a--;\t&#x2F;&#x2F;null                            \t\t        </span><br><span class=\"line\">$a &#x3D; true;\t$a++;\t&#x2F;&#x2F;true                            \t</span><br><span class=\"line\">$a &#x3D; true;\t$a--;\t&#x2F;&#x2F;true                            \t</span><br><span class=\"line\">$a &#x3D; false;\t$a++;\t&#x2F;&#x2F;false                            \t\t</span><br><span class=\"line\">$a &#x3D; false;\t$a--;\t&#x2F;&#x2F;false                            \t\t\t</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>从上面可以看出，php中递增和递减运算符不影响布尔值；递减NULL值没有效果，但是递增NULL值的结果为1。</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$a &#x3D; &#39;C&#39;;\t$a++;\t&#x2F;&#x2F;string D                                </span><br><span class=\"line\">$a &#x3D; &#39;C&#39;;\t$a--;\t&#x2F;&#x2F;string C                                </span><br><span class=\"line\">$a &#x3D; &#39;C2&#39;;\t$a++;\t&#x2F;&#x2F;string C3                               </span><br><span class=\"line\">$a &#x3D; &#39;C2&#39;;\t$a--;\t&#x2F;&#x2F;string C2                               </span><br><span class=\"line\">$a &#x3D; &#39;2C&#39;;\t$a++;\t&#x2F;&#x2F;string 2D                               </span><br><span class=\"line\">$a &#x3D; &#39;2C&#39;;\t$a--;\t&#x2F;&#x2F;string 2C                               </span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>从上面可以看出，在php中，字符串支持递增，但是不支持递减。</p>\n</blockquote>\n<p>再看一下下面的代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$a &#x3D; &#39;Z&#39;;\t$a++;\t&#x2F;&#x2F;string AA                               </span><br><span class=\"line\">$a &#x3D; &#39;C9&#39;;\t$a++;\t&#x2F;&#x2F;string D0                               </span><br></pre></td></tr></table></figure>\n<p>‘A’执行递增，结果为’B’；‘Z’执行递增，结果为’AA‘,’C9’递增，结果为’D0’。这和Perl相似。</p>\n<h3 id=\"php源码分析-a-与-a\"><a href=\"#php源码分析-a-与-a\" class=\"headerlink\" title=\"php源码分析:$a++与++$a\"></a>php源码分析:<code>$</code>a++与++<code>$</code>a</h3><p>首先说明一下，此处的分析基于 php5.6 的源码分析。</p>\n<p>对于前缀自增(++$a)，包含的opcode为PRE_INC，其最终调用的是Zend/zend_vm_execute.h文件中的ZEND_PRE_INC_SPEC_CV_HANDLER函数，源码如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">static int ZEND_FASTCALL  ZEND_PRE_INC_SPEC_CV_HANDLER(ZEND_OPCODE_HANDLER_ARGS)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    USE_OPLINE</span><br><span class=\"line\">    zval **var_ptr;</span><br><span class=\"line\">    </span><br><span class=\"line\">    SAVE_OPLINE();</span><br><span class=\"line\">    var_ptr &#x3D; _get_zval_ptr_ptr_cv_BP_VAR_RW(execute_data, opline-&gt;op1.var TSRMLS_CC);</span><br><span class=\"line\">    </span><br><span class=\"line\">    if (IS_CV &#x3D;&#x3D; IS_VAR &amp;&amp; UNEXPECTED(var_ptr &#x3D;&#x3D; NULL)) &#123;</span><br><span class=\"line\">        zend_error_noreturn(E_ERROR, &quot;Cannot increment&#x2F;decrement overloaded objects nor string offsets&quot;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    if (IS_CV &#x3D;&#x3D; IS_VAR &amp;&amp; UNEXPECTED(*var_ptr &#x3D;&#x3D; &amp;EG(error_zval))) &#123;</span><br><span class=\"line\">        if (RETURN_VALUE_USED(opline)) &#123;</span><br><span class=\"line\">            PZVAL_LOCK(&amp;EG(uninitialized_zval));</span><br><span class=\"line\">            EX_T(opline-&gt;result.var).var.ptr &#x3D; &amp;EG(uninitialized_zval);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">        CHECK_EXCEPTION();</span><br><span class=\"line\">        ZEND_VM_NEXT_OPCODE();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    SEPARATE_ZVAL_IF_NOT_REF(var_ptr);</span><br><span class=\"line\">    </span><br><span class=\"line\">    if (UNEXPECTED(Z_TYPE_PP(var_ptr) &#x3D;&#x3D; IS_OBJECT)</span><br><span class=\"line\">       &amp;&amp; Z_OBJ_HANDLER_PP(var_ptr, get)</span><br><span class=\"line\">       &amp;&amp; Z_OBJ_HANDLER_PP(var_ptr, set)) &#123;</span><br><span class=\"line\">        &#x2F;* proxy object *&#x2F;</span><br><span class=\"line\">        zval *val &#x3D; Z_OBJ_HANDLER_PP(var_ptr, get)(*var_ptr TSRMLS_CC);</span><br><span class=\"line\">        Z_ADDREF_P(val);</span><br><span class=\"line\">        fast_increment_function(val);</span><br><span class=\"line\">        Z_OBJ_HANDLER_PP(var_ptr, set)(var_ptr, val TSRMLS_CC);</span><br><span class=\"line\">        zval_ptr_dtor(&amp;val);</span><br><span class=\"line\">    &#125; else &#123;</span><br><span class=\"line\">        fast_increment_function(*var_ptr);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    if (RETURN_VALUE_USED(opline)) &#123;</span><br><span class=\"line\">        PZVAL_LOCK(*var_ptr);</span><br><span class=\"line\">        EX_T(opline-&gt;result.var).var.ptr &#x3D; *var_ptr;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    CHECK_EXCEPTION();</span><br><span class=\"line\">    ZEND_VM_NEXT_OPCODE();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>fast_increment_function函数实际调用的是increment_function函数：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ZEND_API int increment_function(zval op1) </span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    switch (Z_TYPE_P(op1)) &#123;</span><br><span class=\"line\">        case IS_LONG:</span><br><span class=\"line\">            if (Z_LVAL_P(op1) &#x3D;&#x3D; LONG_MAX) &#123;</span><br><span class=\"line\">                &#x2F;* switch to double *&#x2F;</span><br><span class=\"line\">                double d &#x3D; (double)Z_LVAL_P(op1);</span><br><span class=\"line\">                ZVAL_DOUBLE(op1, d+1);</span><br><span class=\"line\">            &#125; else &#123;</span><br><span class=\"line\">            Z_LVAL_P(op1)++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            break;</span><br><span class=\"line\">        case IS_DOUBLE:</span><br><span class=\"line\">            Z_DVAL_P(op1) &#x3D; Z_DVAL_P(op1) + 1;</span><br><span class=\"line\">            break;</span><br><span class=\"line\">        case IS_NULL:</span><br><span class=\"line\">            ZVAL_LONG(op1, 1);</span><br><span class=\"line\">            break;</span><br><span class=\"line\">        case IS_STRING: &#123;</span><br><span class=\"line\">                long lval;</span><br><span class=\"line\">                double dval;</span><br><span class=\"line\">    </span><br><span class=\"line\">            switch (is_numeric_string(Z_STRVAL_P(op1), Z_STRLEN_P(op1), &amp;lval, &amp;dval, 0)) &#123;</span><br><span class=\"line\">                    case IS_LONG:</span><br><span class=\"line\">                        str_efree(Z_STRVAL_P(op1));</span><br><span class=\"line\">                        if (lval &#x3D;&#x3D; LONG_MAX) &#123;</span><br><span class=\"line\">                            &#x2F;* switch to double *&#x2F;</span><br><span class=\"line\">                            double d &#x3D; (double)lval;</span><br><span class=\"line\">                            ZVAL_DOUBLE(op1, d+1);</span><br><span class=\"line\">                        &#125; else &#123;</span><br><span class=\"line\">                            ZVAL_LONG(op1, lval+1);</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                        break;</span><br><span class=\"line\">                    case IS_DOUBLE:</span><br><span class=\"line\">                        str_efree(Z_STRVAL_P(op1));</span><br><span class=\"line\">                        ZVAL_DOUBLE(op1, dval+1);</span><br><span class=\"line\">                        break;</span><br><span class=\"line\">                    default:</span><br><span class=\"line\">                        &#x2F;* Perl style string increment *&#x2F;</span><br><span class=\"line\">                        increment_string(op1);</span><br><span class=\"line\">                        break;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            break;</span><br><span class=\"line\">        case IS_OBJECT:</span><br><span class=\"line\">            if (Z_OBJ_HANDLER_P(op1, do_operation)) &#123;</span><br><span class=\"line\">                zval *op2;</span><br><span class=\"line\">                int res;</span><br><span class=\"line\">                TSRMLS_FETCH();</span><br><span class=\"line\">    </span><br><span class=\"line\">                MAKE_STD_ZVAL(op2);</span><br><span class=\"line\">                ZVAL_LONG(op2, 1);</span><br><span class=\"line\">            res &#x3D; Z_OBJ_HANDLER_P(op1, do_operation)(ZEND_ADD, op1, op1, op2 TSRMLS_CC);</span><br><span class=\"line\">                zval_ptr_dtor(&amp;op2);</span><br><span class=\"line\">    </span><br><span class=\"line\">                return res;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            return FAILURE;</span><br><span class=\"line\">        default:</span><br><span class=\"line\">            return FAILURE;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return SUCCESS;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>首先调用_get_zval_ptr_ptr_cv_BP_VAR_RW函数获取CV(Compiled variable)类型变量；<br>其次会调用fast_increment_function函数，再调用increment_function函数，实现变量的增加操作，<br>在increment_function函数中，会根据变量的类型来进行对应的操作，从上面可以看出，依次判断的类型有IS_LONG/IS_DOUBLE/IS_NULL/IS_STRING/IS_OBJECT。<br>如果是IS_LONG类型，若变量达到long的最大值，则将其转化为double类型后加1，否则直接加1；<br>如果是IS_DOUBLE类型，则直接加1；<br>如果是IS_NULL类型，则会调用宏ZVAL_LONG(op1, 1)，直接返回long类型的1；<br>如果是IS_STRING类型，则会先将其转化为数字类型，然后再根据上面判断数字类型的逻辑判断；</p>\n<p>如果是IS_OBJECT类型，并且其内部定义了运算符操作的实现，那就调用这个handler来处理,进行                                                                                    </p>\n<blockquote>\n<p>简言之，前缀自增实际上操作的是变量本身，在表达式中使用的也是变量本身。</p>\n</blockquote>\n<p>对于后缀自增($a++)，包含的opcode为POST_INC，其最终调用的是Zend/zend_vm_execute.h文件中的ZEND_POST_INC_SPEC_CV_HANDLER函数，源码如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">static int ZEND_FASTCALL  ZEND_POST_INC_SPEC_CV_HANDLER(ZEND_OPCODE_HANDLER_ARGS)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    USE_OPLINE</span><br><span class=\"line\">    zval **var_ptr, *retval;</span><br><span class=\"line\">    </span><br><span class=\"line\">    SAVE_OPLINE();</span><br><span class=\"line\">    var_ptr &#x3D; _get_zval_ptr_ptr_cv_BP_VAR_RW(execute_data, opline-&gt;op1.var TSRMLS_CC);</span><br><span class=\"line\">    if (IS_CV &#x3D;&#x3D; IS_VAR &amp;&amp; UNEXPECTED(var_ptr &#x3D;&#x3D; NULL)) &#123;</span><br><span class=\"line\">        zend_error_noreturn(E_ERROR, &quot;Cannot increment&#x2F;decrement overloaded objects nor string offsets&quot;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    if (IS_CV &#x3D;&#x3D; IS_VAR &amp;&amp; UNEXPECTED(*var_ptr &#x3D;&#x3D; &amp;EG(error_zval))) &#123;</span><br><span class=\"line\">        ZVAL_NULL(&amp;EX_T(opline-&gt;result.var).tmp_var);</span><br><span class=\"line\">    </span><br><span class=\"line\">        CHECK_EXCEPTION();</span><br><span class=\"line\">        ZEND_VM_NEXT_OPCODE();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    retval &#x3D; &amp;EX_T(opline-&gt;result.var).tmp_var;</span><br><span class=\"line\">    ZVAL_COPY_VALUE(retval, *var_ptr);</span><br><span class=\"line\">    zendi_zval_copy_ctor(*retval);</span><br><span class=\"line\">    </span><br><span class=\"line\">    SEPARATE_ZVAL_IF_NOT_REF(var_ptr);</span><br><span class=\"line\">    if (UNEXPECTED(Z_TYPE_PP(var_ptr) &#x3D;&#x3D; IS_OBJECT)</span><br><span class=\"line\">    &amp;&amp; Z_OBJ_HANDLER_PP(var_ptr, get)</span><br><span class=\"line\">       &amp;&amp; Z_OBJ_HANDLER_PP(var_ptr, set)) &#123;</span><br><span class=\"line\">        &#x2F;* proxy object *&#x2F;</span><br><span class=\"line\">        zval *val &#x3D; Z_OBJ_HANDLER_PP(var_ptr, get)(*var_ptr TSRMLS_CC);</span><br><span class=\"line\">        Z_ADDREF_P(val);</span><br><span class=\"line\">        fast_increment_function(val);</span><br><span class=\"line\">        Z_OBJ_HANDLER_PP(var_ptr, set)(var_ptr, val TSRMLS_CC);</span><br><span class=\"line\">        zval_ptr_dtor(&amp;val);</span><br><span class=\"line\">    &#125; else &#123;</span><br><span class=\"line\">        fast_increment_function(*var_ptr);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    CHECK_EXCEPTION();</span><br><span class=\"line\">    ZEND_VM_NEXT_OPCODE();</span><br><span class=\"line\">｝ </span><br></pre></td></tr></table></figure>\n<p>从上面可以看出，后缀自增与前缀自增在底层实现的大部分是类似的，但是不同的点在于，后缀自增多了一个临时变量，用于存储原始的变量的值，但是它并没有前缀自增的RETURN_VALUE_USED操作。 </p>\n<blockquote>\n<p>简言之，后缀自增使用的是存放在临时变量中的值，即变量的原始值，而最终变量本身的值还是会增加。</p>\n</blockquote>\n<h3 id=\"一些奇怪的php自增和自减\"><a href=\"#一些奇怪的php自增和自减\" class=\"headerlink\" title=\"一些奇怪的php自增和自减\"></a>一些奇怪的php自增和自减</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$a &#x3D; &#39;2D9&#39;;\t$a++;\t&#x2F;&#x2F;string 2E0</span><br><span class=\"line\">$a &#x3D; &#39;2E0&#39;;\t$a++;\t&#x2F;&#x2F;float 3</span><br><span class=\"line\">$a &#x3D; &#39;010&#39;;\t$a++;\t&#x2F;&#x2F;11</span><br><span class=\"line\">$a &#x3D; 010;\t$a++;\t&#x2F;&#x2F;9</span><br></pre></td></tr></table></figure>\n<p>第一个很好理解。<br><br>对于第二个，并不是我们想的 ‘2E1’，而是3。注意输出结果为 float 3，原来这里 <code>$</code>a=’2E0’,对<code>$</code>a执行递增，由于字符串<code>$</code>a中包含’E’，所以会被当作float来取值。科学计数法 2E0 表示 2*10^0 值为2，对其加1则结果为3。<br><br>对于第三个，<code>$</code>a=’010’，对<code>$</code>a执行递增，字符串<code>$</code>a会被当作integer来处理，即为10，对其加1则结果为11。<br><br>对于第四个，<code>$</code>a=010，对<code>$</code>a执行递增，<code>$</code>a本来就是数字类型，由于是0开头，表示8进制，即为8，对其加1则结果为9。<br></p>\n<h1 id=\"Happy-coding\"><a href=\"#Happy-coding\" class=\"headerlink\" title=\"Happy coding.\"></a>Happy coding.</h1>"},{"title":"重新开启 hexo 博客","date":"2020-11-22T13:25:48.000Z","_content":"\n这些年尝试了不同的博客工具, hexo, hugo, wp, 还有一些博客内容平台，中间也自己写过博客系统。\n最终还是懒得再折腾了，重新切回 hexo，继续记录个人的学习生活。\n原来其他地方的文章也不搬了，继续开始吧。\n\nHappy Coding.\n","source":"_posts/restart-hexo-blog.md","raw":"---\ntitle: 重新开启 hexo 博客\ndate: 2020-11-22 21:25:48\ncategories:\ntags:\n---\n\n这些年尝试了不同的博客工具, hexo, hugo, wp, 还有一些博客内容平台，中间也自己写过博客系统。\n最终还是懒得再折腾了，重新切回 hexo，继续记录个人的学习生活。\n原来其他地方的文章也不搬了，继续开始吧。\n\nHappy Coding.\n","slug":"restart-hexo-blog","published":1,"updated":"2020-11-22T13:57:34.784Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjsw1dew000va21u4h8h6tyy","content":"<p> 这些年尝试了不同的博客工具, hexo, hugo, wp, 还有一些博客内容平台，中间也自己写过博客系统。<br> 最终还是懒得再折腾了，重新切回 hexo，继续记录个人的学习生活。<br> 原来其他地方的文章也不搬了，继续开始吧。</p>\n<p>Happy Coding.</p>\n","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"优秀来源于分享","link_list":[{"name":"JerryC","link":"https://jerryc.me/","avatar":"https://jerryc.me/image/avatar.png","descr":"博客主题作者"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"","more":"<p>这些年尝试了不同的博客工具, hexo, hugo, wp, 还有一些博客内容平台，中间也自己写过博客系统。<br>最终还是懒得再折腾了，重新切回 hexo，继续记录个人的学习生活。<br>原来其他地方的文章也不搬了，继续开始吧。</p>\n<p>Happy Coding.</p>\n"},{"title":"SAE 部署 JavaWeb 项目报 404 错误","date":"2016-03-26T15:03:56.000Z","_content":"\n今天写了一个小的 JavaWeb 项目传到 SAE 上，访问的时候出错。本地测试是正常的，而且以前做微信平台开发的时候上传的项目就可以正常访问。于是花了两个小时的时间终于找出了错误的原因。\n\n错误信息如下：\n> Error 404 – Not Found.No context on this server matched or handled this request.\nContexts known to this server are\n\n<!-- more -->\n\n根据网上的资料，可能是项目中的 servlet-api.jar 等 jar 包与 SAE 平台提供的 jar 包相冲突。于是将项目打包成 war 包后，删除 lib 下的相关 jar　包。重新上传测试，发现还是报相同的错误。\n\n第一步不成，无计可施，我将项目中 web.xml 中关于 servlet 的部分删除之后，在根目录下新建一个 index.jsp 页面，重新编译上传，可以正常访问。\n\n可见还是 Java 部分出现了问题，既然前面已经排除了 servlet-api.jar 等 jar 包冲突问题，那还会是其他什么原因呢？\n\n再经过在网上查找，发现可能是编译使用的 jdk 版本问题。问题就是出现在这里，本机上的 jdk 版本是 1.7，而使用 SAE 需要 jdk 1.6，于是换了 1.6 的 jdk，重新编译上传，测试正常。\n\n原来以前上传到 SAE 上项目正常访问是因为当时使用的机器上 jdk 版本是 1.6。而当前机器上的 jdk 版本是1.7。\n\n","source":"_posts/sae-java-web-project-error.md","raw":"---\ntitle: SAE 部署 JavaWeb 项目报404错误\ndate: 2016-03-26 23:03:56\ncategories: JAVA\ntags: [SAE , JAVA]\n---\n\n今天写了一个小的 JavaWeb 项目传到 SAE 上，访问的时候出错。本地测试是正常的，而且以前做微信平台开发的时候上传的项目就可以正常访问。于是花了两个小时的时间终于找出了错误的原因。\n\n错误信息如下：\n> Error 404 – Not Found.No context on this server matched or handled this request.\nContexts known to this server are\n\n<!-- more -->\n\n根据网上的资料，可能是项目中的 servlet-api.jar 等 jar 包与 SAE 平台提供的 jar 包相冲突。于是将项目打包成 war 包后，删除 lib 下的相关 jar　包。重新上传测试，发现还是报相同的错误。\n\n第一步不成，无计可施，我将项目中 web.xml 中关于 servlet 的部分删除之后，在根目录下新建一个 index.jsp 页面，重新编译上传，可以正常访问。\n\n可见还是 Java 部分出现了问题，既然前面已经排除了 servlet-api.jar 等 jar 包冲突问题，那还会是其他什么原因呢？\n\n再经过在网上查找，发现可能是编译使用的 jdk 版本问题。问题就是出现在这里，本机上的 jdk 版本是 1.7，而使用 SAE 需要 jdk 1.6，于是换了 1.6 的 jdk，重新编译上传，测试正常。\n\n原来以前上传到 SAE 上项目正常访问是因为当时使用的机器上 jdk 版本是 1.6。而当前机器上的 jdk 版本是1.7。\n\n","slug":"sae-java-web-project-error","published":1,"updated":"2016-06-19T15:03:52.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjsw1df0000ya21uay7ah2da","content":"<p> 今天写了一个小的 JavaWeb 项目传到 SAE 上，访问的时候出错。本地测试是正常的，而且以前做微信平台开发的时候上传的项目就可以正常访问。于是花了两个小时的时间终于找出了错误的原因。</p>\n<p> 错误信息如下：</p>\n<blockquote>\n<p>Error 404 – Not Found.No context on this server matched or handled this request.<br>Contexts known to this server are</p>\n</blockquote>\n<a id=\"more\"></a>\n<p> 根据网上的资料，可能是项目中的 servlet-api.jar 等 jar 包与 SAE 平台提供的 jar 包相冲突。于是将项目打包成 war 包后，删除 lib 下的相关 jar　包。重新上传测试，发现还是报相同的错误。</p>\n<p> 第一步不成，无计可施，我将项目中 web.xml 中关于 servlet 的部分删除之后，在根目录下新建一个 index.jsp 页面，重新编译上传，可以正常访问。</p>\n<p> 可见还是 Java 部分出现了问题，既然前面已经排除了 servlet-api.jar 等 jar 包冲突问题，那还会是其他什么原因呢？</p>\n<p> 再经过在网上查找，发现可能是编译使用的 jdk 版本问题。问题就是出现在这里，本机上的 jdk 版本是 1.7，而使用 SAE 需要 jdk 1.6，于是换了 1.6 的 jdk，重新编译上传，测试正常。</p>\n<p> 原来以前上传到 SAE 上项目正常访问是因为当时使用的机器上 jdk 版本是 1.6。而当前机器上的 jdk 版本是 1.7。</p>\n","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"优秀来源于分享","link_list":[{"name":"JerryC","link":"https://jerryc.me/","avatar":"https://jerryc.me/image/avatar.png","descr":"博客主题作者"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"<p>今天写了一个小的 JavaWeb 项目传到 SAE 上，访问的时候出错。本地测试是正常的，而且以前做微信平台开发的时候上传的项目就可以正常访问。于是花了两个小时的时间终于找出了错误的原因。</p>\n<p>错误信息如下：</p>\n<blockquote>\n<p>Error 404 – Not Found.No context on this server matched or handled this request.<br>Contexts known to this server are</p>\n</blockquote>","more":"<p>根据网上的资料，可能是项目中的 servlet-api.jar 等 jar 包与 SAE 平台提供的 jar 包相冲突。于是将项目打包成 war 包后，删除 lib 下的相关 jar　包。重新上传测试，发现还是报相同的错误。</p>\n<p>第一步不成，无计可施，我将项目中 web.xml 中关于 servlet 的部分删除之后，在根目录下新建一个 index.jsp 页面，重新编译上传，可以正常访问。</p>\n<p>可见还是 Java 部分出现了问题，既然前面已经排除了 servlet-api.jar 等 jar 包冲突问题，那还会是其他什么原因呢？</p>\n<p>再经过在网上查找，发现可能是编译使用的 jdk 版本问题。问题就是出现在这里，本机上的 jdk 版本是 1.7，而使用 SAE 需要 jdk 1.6，于是换了 1.6 的 jdk，重新编译上传，测试正常。</p>\n<p>原来以前上传到 SAE 上项目正常访问是因为当时使用的机器上 jdk 版本是 1.6。而当前机器上的 jdk 版本是1.7。</p>"},{"title":"每周阅读清单 -20190512","date":"2019-05-11T16:56:47.000Z","_content":"\n## 技术\n\n- [详解 DNS 与 CoreDNS 的实现原理](https://draveness.me/dns-coredns)\n\n- [分布式事务的实现原理](https://draveness.me/distributed-transaction-principle)\n\n- [GraphQL 在微服务架构中的实践](https://draveness.me/graphql-microservice)\n\n- [浅谈 MVC、MVP 和 MVVM 架构模式](https://draveness.me/mvx)\n\n- [Git的奇技淫巧](https://github.com/521xueweihan/git-tips)\n\n<!-- more -->\n\n- [分库分表技术演进&最佳实践](https://yq.aliyun.com/articles/666034)\n\n- [从原则、方案、策略及难点阐述分库分表](https://yq.aliyun.com/articles/653109)\n\n## 生活\n\n---\n\n> Keep reading. Keep running.\n\n","source":"_posts/weekly-reading-list-20190512.md","raw":"---\ntitle: 每周阅读清单-20190512\ndate: 2019-05-12 00:56:47\ncategories: 阅读\ntags: [reading list]\n---\n\n## 技术\n\n- [详解 DNS 与 CoreDNS 的实现原理](https://draveness.me/dns-coredns)\n\n- [分布式事务的实现原理](https://draveness.me/distributed-transaction-principle)\n\n- [GraphQL 在微服务架构中的实践](https://draveness.me/graphql-microservice)\n\n- [浅谈 MVC、MVP 和 MVVM 架构模式](https://draveness.me/mvx)\n\n- [Git的奇技淫巧](https://github.com/521xueweihan/git-tips)\n\n<!-- more -->\n\n- [分库分表技术演进&最佳实践](https://yq.aliyun.com/articles/666034)\n\n- [从原则、方案、策略及难点阐述分库分表](https://yq.aliyun.com/articles/653109)\n\n## 生活\n\n---\n\n> Keep reading. Keep running.\n\n","slug":"weekly-reading-list-20190512","published":1,"updated":"2019-05-16T16:29:36.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjsw1df1000za21uc16mf5jq","content":"<h2 id=\"技术\"><a href=\"# 技术\" class=\"headerlink\" title=\"技术\"></a> 技术 </h2><ul>\n<li><p><a href=\"https://draveness.me/dns-coredns\"> 详解 DNS 与 CoreDNS 的实现原理 </a></p>\n</li>\n<li><p><a href=\"https://draveness.me/distributed-transaction-principle\"> 分布式事务的实现原理 </a></p>\n</li>\n<li><p><a href=\"https://draveness.me/graphql-microservice\">GraphQL 在微服务架构中的实践 </a></p>\n</li>\n<li><p><a href=\"https://draveness.me/mvx\"> 浅谈 MVC、MVP 和 MVVM 架构模式 </a></p>\n</li>\n<li><p><a href=\"https://github.com/521xueweihan/git-tips\">Git 的奇技淫巧 </a></p>\n</li>\n</ul>\n<a id=\"more\"></a>\n<ul>\n<li><p><a href=\"https://yq.aliyun.com/articles/666034\"> 分库分表技术演进 &amp; 最佳实践 </a></p>\n</li>\n<li><p><a href=\"https://yq.aliyun.com/articles/653109\"> 从原则、方案、策略及难点阐述分库分表 </a></p>\n</li>\n</ul>\n<h2 id=\"生活\"><a href=\"# 生活\" class=\"headerlink\" title=\"生活\"></a> 生活 </h2><hr>\n<blockquote>\n<p>Keep reading. Keep running.</p>\n</blockquote>\n","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"优秀来源于分享","link_list":[{"name":"JerryC","link":"https://jerryc.me/","avatar":"https://jerryc.me/image/avatar.png","descr":"博客主题作者"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"<h2 id=\"技术\"><a href=\"#技术\" class=\"headerlink\" title=\"技术\"></a>技术</h2><ul>\n<li><p><a href=\"https://draveness.me/dns-coredns\">详解 DNS 与 CoreDNS 的实现原理</a></p>\n</li>\n<li><p><a href=\"https://draveness.me/distributed-transaction-principle\">分布式事务的实现原理</a></p>\n</li>\n<li><p><a href=\"https://draveness.me/graphql-microservice\">GraphQL 在微服务架构中的实践</a></p>\n</li>\n<li><p><a href=\"https://draveness.me/mvx\">浅谈 MVC、MVP 和 MVVM 架构模式</a></p>\n</li>\n<li><p><a href=\"https://github.com/521xueweihan/git-tips\">Git的奇技淫巧</a></p>\n</li>\n</ul>","more":"<ul>\n<li><p><a href=\"https://yq.aliyun.com/articles/666034\">分库分表技术演进&amp;最佳实践</a></p>\n</li>\n<li><p><a href=\"https://yq.aliyun.com/articles/653109\">从原则、方案、策略及难点阐述分库分表</a></p>\n</li>\n</ul>\n<h2 id=\"生活\"><a href=\"#生活\" class=\"headerlink\" title=\"生活\"></a>生活</h2><hr>\n<blockquote>\n<p>Keep reading. Keep running.</p>\n</blockquote>"},{"title":"每周阅读清单 -20190519","date":"2019-05-16T16:15:15.000Z","_content":"\n## 技术\n\n- [MySQL · 引擎特性 · 临时表那些事儿](http://mysql.taobao.org/monthly/2019/04/01/)\n\n## 生活\n\n---\n\n> Keep reading. Keep running.\n","source":"_posts/weekly-reading-list-20190519.md","raw":"---\ntitle: 每周阅读清单-20190519\ndate: 2019-05-17 00:15:15\ncategories: 阅读\ntags: [reading list]\n---\n\n## 技术\n\n- [MySQL · 引擎特性 · 临时表那些事儿](http://mysql.taobao.org/monthly/2019/04/01/)\n\n## 生活\n\n---\n\n> Keep reading. Keep running.\n","slug":"weekly-reading-list-20190519","published":1,"updated":"2019-05-16T16:29:56.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjsw1df30013a21u7tmm1sbk","content":"<h2 id=\"技术\"><a href=\"# 技术\" class=\"headerlink\" title=\"技术\"></a> 技术 </h2><ul>\n<li><a href=\"http://mysql.taobao.org/monthly/2019/04/01/\">MySQL · 引擎特性 · 临时表那些事儿 </a></li>\n</ul>\n<h2 id=\"生活\"><a href=\"# 生活\" class=\"headerlink\" title=\"生活\"></a> 生活 </h2><hr>\n<blockquote>\n<p>Keep reading. Keep running.</p>\n</blockquote>\n","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"优秀来源于分享","link_list":[{"name":"JerryC","link":"https://jerryc.me/","avatar":"https://jerryc.me/image/avatar.png","descr":"博客主题作者"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"","more":"<h2 id=\"技术\"><a href=\"#技术\" class=\"headerlink\" title=\"技术\"></a>技术</h2><ul>\n<li><a href=\"http://mysql.taobao.org/monthly/2019/04/01/\">MySQL · 引擎特性 · 临时表那些事儿</a></li>\n</ul>\n<h2 id=\"生活\"><a href=\"#生活\" class=\"headerlink\" title=\"生活\"></a>生活</h2><hr>\n<blockquote>\n<p>Keep reading. Keep running.</p>\n</blockquote>\n"}],"PostAsset":[{"_id":"source/_posts/movie-huashuimu/picture_1.jpg","slug":"picture_1.jpg","post":"ckjsw1dek000ha21ufc8234vm","modified":0,"renderable":0},{"_id":"source/_posts/movie-huashuimu/picture_2.jpg","slug":"picture_2.jpg","post":"ckjsw1dek000ha21ufc8234vm","modified":0,"renderable":0},{"_id":"source/_posts/movie-huashuimu/picture_3.jpg","slug":"picture_3.jpg","post":"ckjsw1dek000ha21ufc8234vm","modified":0,"renderable":0},{"_id":"source/_posts/movie-huashuimu/picture_4.jpg","slug":"picture_4.jpg","post":"ckjsw1dek000ha21ufc8234vm","modified":0,"renderable":0},{"_id":"source/_posts/movie-huashuimu/picture_5.jpg","slug":"picture_5.jpg","post":"ckjsw1dek000ha21ufc8234vm","modified":0,"renderable":0},{"_id":"source/_posts/movie-huashuimu/picture_6.jpg","slug":"picture_6.jpg","post":"ckjsw1dek000ha21ufc8234vm","modified":0,"renderable":0},{"_id":"source/_posts/movie-huashuimu/picture_7.jpg","slug":"picture_7.jpg","post":"ckjsw1dek000ha21ufc8234vm","modified":0,"renderable":0},{"_id":"source/_posts/movie-huashuimu/picture_8.jpg","slug":"picture_8.jpg","post":"ckjsw1dek000ha21ufc8234vm","modified":0,"renderable":0},{"_id":"source/_posts/nginx-phpfpm-status/nginx_status.png","slug":"nginx_status.png","post":"ckjsw1der000na21u396gdkz5","modified":0,"renderable":0},{"_id":"source/_posts/nginx-phpfpm-status/php_fpm_status.png","slug":"php_fpm_status.png","post":"ckjsw1der000na21u396gdkz5","modified":0,"renderable":0}],"PostCategory":[{"post_id":"ckjsw1ddo0001a21u39pe9i0y","category_id":"ckjsw1ddv0004a21u62kug1f6","_id":"ckjsw1del000ia21ufok09vlj"},{"post_id":"ckjsw1dei000fa21ucg0icccp","category_id":"ckjsw1deo000ka21uedi37ipo","_id":"ckjsw1dex000wa21u5aojdmgr"},{"post_id":"ckjsw1dek000ha21ufc8234vm","category_id":"ckjsw1deu000qa21ugrpq14cc","_id":"ckjsw1df20011a21u2lw2em4m"},{"post_id":"ckjsw1deo000ma21ub0o299vl","category_id":"ckjsw1dex000xa21ufoug77xg","_id":"ckjsw1df40015a21uhigl96r3"},{"post_id":"ckjsw1df1000za21uc16mf5jq","category_id":"ckjsw1ddv0004a21u62kug1f6","_id":"ckjsw1df50017a21u6jvxdv8o"},{"post_id":"ckjsw1df30013a21u7tmm1sbk","category_id":"ckjsw1ddv0004a21u62kug1f6","_id":"ckjsw1df50018a21uanoa6yzf"},{"post_id":"ckjsw1der000na21u396gdkz5","category_id":"ckjsw1df20012a21ucdqp5r7p","_id":"ckjsw1df6001ca21u3b2z6vcb"},{"post_id":"ckjsw1det000pa21u17av7vvl","category_id":"ckjsw1df40016a21uevdi0mrz","_id":"ckjsw1df6001fa21u4zgn6n22"},{"post_id":"ckjsw1dev000sa21u68kd9usk","category_id":"ckjsw1df6001aa21ucjc6gy22","_id":"ckjsw1dfa001ka21ufh9dcvlu"},{"post_id":"ckjsw1df0000ya21uay7ah2da","category_id":"ckjsw1df8001ga21u6ius9dea","_id":"ckjsw1dfb001oa21ud9jnfjde"}],"PostTag":[{"post_id":"ckjsw1ddo0001a21u39pe9i0y","tag_id":"ckjsw1ddx0005a21uarqg75cp","_id":"ckjsw1deh000da21uex61fv4s"},{"post_id":"ckjsw1ddz0007a21uc5ivgrg8","tag_id":"ckjsw1deg000ca21ubmi31a59","_id":"ckjsw1deu000ra21u4a5w27uj"},{"post_id":"ckjsw1ddz0007a21uc5ivgrg8","tag_id":"ckjsw1den000ja21uf6y335ov","_id":"ckjsw1dev000ta21uhx7kfhp5"},{"post_id":"ckjsw1def000ba21uheus6um7","tag_id":"ckjsw1des000oa21u5plfenp1","_id":"ckjsw1df6001ba21u4k9ifb63"},{"post_id":"ckjsw1def000ba21uheus6um7","tag_id":"ckjsw1dew000ua21ueumw8uzk","_id":"ckjsw1df6001da21u509d302m"},{"post_id":"ckjsw1def000ba21uheus6um7","tag_id":"ckjsw1df20010a21uew3f9gz0","_id":"ckjsw1df8001ha21u0k60e7a1"},{"post_id":"ckjsw1def000ba21uheus6um7","tag_id":"ckjsw1df40014a21u1doe86ym","_id":"ckjsw1df9001ia21ugtk8gcb2"},{"post_id":"ckjsw1dei000fa21ucg0icccp","tag_id":"ckjsw1df50019a21u4yry5jqk","_id":"ckjsw1dfb001la21u1e4acggz"},{"post_id":"ckjsw1dei000fa21ucg0icccp","tag_id":"ckjsw1des000oa21u5plfenp1","_id":"ckjsw1dfb001ma21u0di4erot"},{"post_id":"ckjsw1dek000ha21ufc8234vm","tag_id":"ckjsw1dfa001ja21ufntkghdq","_id":"ckjsw1dfb001pa21ucnuf7rbw"},{"post_id":"ckjsw1deo000ma21ub0o299vl","tag_id":"ckjsw1dfb001na21udtmjaw5b","_id":"ckjsw1dfc001sa21u9e87fsqm"},{"post_id":"ckjsw1deo000ma21ub0o299vl","tag_id":"ckjsw1dfb001qa21u0iqk2ds1","_id":"ckjsw1dfc001ta21ucdt16l7x"},{"post_id":"ckjsw1der000na21u396gdkz5","tag_id":"ckjsw1dfc001ra21uggad48in","_id":"ckjsw1dfd001xa21u8uo23ss0"},{"post_id":"ckjsw1der000na21u396gdkz5","tag_id":"ckjsw1dfc001ua21u5y5r6f2t","_id":"ckjsw1dfd001ya21u0i2e3elx"},{"post_id":"ckjsw1der000na21u396gdkz5","tag_id":"ckjsw1dfd001va21u9gl13gdl","_id":"ckjsw1dfe0020a21u557f1wv8"},{"post_id":"ckjsw1det000pa21u17av7vvl","tag_id":"ckjsw1dfd001wa21uhhud7rg0","_id":"ckjsw1dfe0021a21u1a0tfnpi"},{"post_id":"ckjsw1dev000sa21u68kd9usk","tag_id":"ckjsw1dfe001za21u7f226wn2","_id":"ckjsw1dff0025a21u2a3fha49"},{"post_id":"ckjsw1dev000sa21u68kd9usk","tag_id":"ckjsw1dfe0022a21u4xdwhjff","_id":"ckjsw1dff0026a21ueajmg1vy"},{"post_id":"ckjsw1dev000sa21u68kd9usk","tag_id":"ckjsw1dff0023a21ubh93fn2o","_id":"ckjsw1dfg0028a21udacjfsag"},{"post_id":"ckjsw1df0000ya21uay7ah2da","tag_id":"ckjsw1dff0024a21uf53n7sa1","_id":"ckjsw1dfg002aa21ufol8fkch"},{"post_id":"ckjsw1df0000ya21uay7ah2da","tag_id":"ckjsw1dfg0027a21u0uhz7q6f","_id":"ckjsw1dfh002ba21u07p7cf56"},{"post_id":"ckjsw1df1000za21uc16mf5jq","tag_id":"ckjsw1dfg0029a21ueg0o9j6a","_id":"ckjsw1dfh002da21u6ttddyc4"},{"post_id":"ckjsw1df30013a21u7tmm1sbk","tag_id":"ckjsw1dfg0029a21ueg0o9j6a","_id":"ckjsw1dfh002ea21udmnkbrgy"}],"Tag":[{"name":"阅读","_id":"ckjsw1ddx0005a21uarqg75cp"},{"name":"hexo","_id":"ckjsw1deg000ca21ubmi31a59"},{"name":"rss","_id":"ckjsw1den000ja21uf6y335ov"},{"name":"mac","_id":"ckjsw1des000oa21u5plfenp1"},{"name":"git","_id":"ckjsw1dew000ua21ueumw8uzk"},{"name":"sourcetree","_id":"ckjsw1df20010a21uew3f9gz0"},{"name":"beyondcompre","_id":"ckjsw1df40014a21u1doe86ym"},{"name":"工具","_id":"ckjsw1df50019a21u4yry5jqk"},{"name":"movie","_id":"ckjsw1dfa001ja21ufntkghdq"},{"name":"mysql","_id":"ckjsw1dfb001na21udtmjaw5b"},{"name":"运维","_id":"ckjsw1dfb001qa21u0iqk2ds1"},{"name":"Linux","_id":"ckjsw1dfc001ra21uggad48in"},{"name":"nginx","_id":"ckjsw1dfc001ua21u5y5r6f2t"},{"name":"php-fpm","_id":"ckjsw1dfd001va21u9gl13gdl"},{"name":"MySQL","_id":"ckjsw1dfd001wa21uhhud7rg0"},{"name":"php","_id":"ckjsw1dfe001za21u7f226wn2"},{"name":"source","_id":"ckjsw1dfe0022a21u4xdwhjff"},{"name":"源码","_id":"ckjsw1dff0023a21ubh93fn2o"},{"name":"SAE","_id":"ckjsw1dff0024a21uf53n7sa1"},{"name":"JAVA","_id":"ckjsw1dfg0027a21u0uhz7q6f"},{"name":"reading list","_id":"ckjsw1dfg0029a21ueg0o9j6a"}]}}